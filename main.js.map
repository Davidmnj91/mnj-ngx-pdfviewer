{"version":3,"sources":["/home/runner/work/mnj-ngx-pdfviewer/mnj-ngx-pdfviewer/dist/mnj-ngx-pdfviewer/fesm2015/mnj-ngx-pdfviewer.js","../mnj-ngx-pdfviewer/src/lib/directives/pdf-attachments-viewer.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-download-button.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-page-loading.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-page-viewer.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-print-button.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-properties-button.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-search-input.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-thumbnail-viewer.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-toc-viewer.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-upload-button.ts","../mnj-ngx-pdfviewer/src/lib/directives/pdf-viewer.ts","../mnj-ngx-pdfviewer/src/lib/index.ts","../mnj-ngx-pdfviewer/src/lib/models/index.ts","../mnj-ngx-pdfviewer/src/lib/models/scale.ts","../mnj-ngx-pdfviewer/src/lib/models/visualization-options.ts","../mnj-ngx-pdfviewer/src/lib/pdf-attachment-viewer-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-container.ts","../mnj-ngx-pdfviewer/src/lib/pdf-outline-viewer-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-page-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-page-viewer-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-thumbnail-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-thumbnail-viewer-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-viewer-config.ts","../mnj-ngx-pdfviewer/src/lib/pdf-viewer-ref.ts","../mnj-ngx-pdfviewer/src/lib/pdf-viewer-registry.ts","../mnj-ngx-pdfviewer/src/lib/pdf-viewer.module.ts","../mnj-ngx-pdfviewer/src/lib/public-api.ts","../mnj-ngx-pdfviewer/src/lib/services/index.ts","../mnj-ngx-pdfviewer/src/lib/services/pdf-download-manager.service.ts","../mnj-ngx-pdfviewer/src/lib/services/pdf-find-controller.ts","../mnj-ngx-pdfviewer/src/lib/services/pdf-link-service.ts","../mnj-ngx-pdfviewer/src/lib/services/pdf-print-manager.service.ts","../mnj-ngx-pdfviewer/src/lib/services/pdf-rendering-queue.ts","../mnj-ngx-pdfviewer/src/lib/utils/anotation-layer.ts","../mnj-ngx-pdfviewer/src/lib/utils/find-utils.ts","../mnj-ngx-pdfviewer/src/lib/utils/index.ts","../mnj-ngx-pdfviewer/src/lib/utils/page-view-buffer.ts","../mnj-ngx-pdfviewer/src/lib/utils/rotation.ts","../mnj-ngx-pdfviewer/src/lib/utils/text-layer.ts","../mnj-ngx-pdfviewer/src/lib/utils/ui-utils.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","zlib (ignored)","fs (ignored)","http (ignored)","https (ignored)","url (ignored)"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,cAAc;AAC3F;AACA;AACA;AACA;AACA;AACA,uCAAuC,0EAAuB;AAC9D;AACA;AACA,YAAY,8CAA8C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,6BAA6B,uEAAoB,CAAC,qEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,kEAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,UAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C,eAAe,cAAc;AAC7B;AACA,YAAY,oEAAiB;AAC7B;AACA,oCAAoC,qDAAU;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uEAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;;AAEvD;AACA,mBAAmB;AACnB;AACA,aAAa,yEAAsB;AACnC,mBAAmB;AACnB;AACA;AACA;AACA;AACA,wBAAwB,kEAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,2BAA2B,wEAAkB,EAAE,kFAAkF;AACjI,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAe;AAC/B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAyD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAkE;AACjF;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,uDAAuD,UAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB;AACA,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,SAAS;AACT;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO,uCAAuC,MAAM;AAC/D,MAAM,OAAO,kBAAkB,OAAO;AACtC,aAAa,OAAO,uCAAuC,OAAO;AAClE,UAAU,OAAO;AACjB;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B,yBAAyB;AACzB,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,0EAAuB;AAC3D;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAA0C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE,0CAA0C,0EAAuB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yEAAyE,MAAM;AAC/E;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC,4CAA4C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,4DAA4D;AAC1G,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,4DAA4D;AAC1G,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE,qBAAqB;AACrB,kFAAkF,QAAQ,kDAAkD,KAAK;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,QAAQ,yDAAyD,KAAK;AACnI;AACA;AACA;AACA,6DAA6D,WAAW,+CAA+C,KAAK;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6DAA6D,kBAAkB,qDAAqD,KAAK;AACzI;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,aAAa;AAC5B,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA,kEAAkE,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY,QAAQ,YAAY,GAAG,YAAY;AAC7F;AACA;AACA;AACA,8CAA8C,YAAY,QAAQ,YAAY,GAAG,YAAY;AAC7F;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,uBAAuB,wEAAkB,EAAE,sDAAsD;AACjG,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oCAAoC;AACnF;AACA;AACA;AACA,SAAS;AACT,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB,wBAAwB,EAAE;AAC1B,cAAc;AACd;AACA,8CAA8C;AAC9C,gBAAgB,WAAW,YAAY,EAAE;AACzC,2CAA2C,eAAe,EAAE;AAC5D,6BAA6B,cAAc,EAAE;AAC7C,mCAAmC;AACnC,gCAAgC,QAAQ,SAAS,YAAY,aAAa,mBAAmB;AAC7F,sCAAsC,0BAA0B;AAChE,cAAc;AACd,wDAAwD,gBAAgB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,wBAAwB,wEAAkB,EAAE,4EAA4E;AACxH,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ,iCAAiC,aAAa;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uDAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;AACA,iCAAiC,0EAAuB;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA;AACA,2DAA2D,mBAAmB;AAC9E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,QAAQ;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,oBAAoB;AAC/E,4DAA4D,qBAAqB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,4DAA4D,sBAAsB;AAClF,6DAA6D,uBAAuB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE,sDAAsD,aAAa;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE,oDAAoD,cAAc;AAClE,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,6FAA+B;AACnE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,8BAA8B,4CAAO;AACrC,gCAAgC,4CAAO;AACvC,iCAAiC,4CAAO;AACxC,oCAAoC,4CAAO;AAC3C,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0EAAuB;AACvD;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE;AACA,oDAAoD,2BAA2B;AAC/E,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,0CAA0C,gCAAgC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,gBAAgB,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ,uBAAuB,IAAI;AAChE;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ,sBAAsB,IAAI;AAC/D;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,2DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAA4D;AACpF;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ,wBAAwB,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ,6BAA6B,kBAAkB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ,eAAe,MAAM;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oCAAoC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0EAAuB;AACxD,4CAA4C,uDAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAA2B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+EAA+E,QAAQ;AACvF;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE,uDAAuD,kBAAkB;AACzE;AACA;AACA;AACA,2DAA2D,iBAAiB;AAC5E,4DAA4D,kBAAkB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,QAAQ;AACxE,kDAAkD,iBAAiB;AACnE,mDAAmD,kBAAkB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,UAAU;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;;AAEA;AACA,sCAAsC,6FAA+B;AACrE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yEAAyE,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,uCAAuC,4CAAO;AAC9C;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,UAAU,OAAO,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrE;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iCAAiC;AACnG;AACA;AACA,qFAAqF,iCAAiC,gCAAgC,sBAAsB;AAC5K;AACA;AACA,qFAAqF,iCAAiC,gCAAgC,qBAAqB;AAC3K;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAa;AAC3C,4BAA4B,wDAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAW;AACvB;AACA;AACA,qCAAqC,mBAAmB;AACxD,aAAa;AACb;AACA,oGAAoG,4BAA4B;AAChI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,8DAAmB,aAAa,8DAAW;AAC/C;AACA;AACA,IAAI,8DAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,gFAAgF;AAC9H,4BAA4B,CAAC,uEAAiB;AAC9C,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,iCAAiC,0DAAY;AAC7C,qCAAqC,0DAAY;AACjD,qCAAqC,0DAAY;AACjD,oCAAoC,0DAAY;AAChD;AACA,yCAAyC,0DAAY;AACrD,wCAAwC,0DAAY;AACpD,0CAA0C,0DAAY;AACtD,2CAA2C,0DAAY;AACvD,8CAA8C,0DAAY;AAC1D,4CAA4C,0DAAY;AACxD;AACA,uCAAuC,0DAAY;AACnD;AACA,0CAA0C,0DAAY;AACtD,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA,sDAAsD,eAAe;AACrE,SAAS;AACT;AACA,uDAAuD,eAAe;AACtE,SAAS;AACT;AACA,uDAAuD,eAAe;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E,SAAS;AACT;AACA,0DAA0D,eAAe;AACzE,SAAS;AACT;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA,SAAS;AACT;AACA,6DAA6D,eAAe;AAC5E,SAAS;AACT;AACA,gEAAgE,eAAe;AAC/E,SAAS;AACT;AACA,8DAA8D,eAAe;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA,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","file":"main.js","sourcesContent":["import { ɵɵdirectiveInject, ElementRef, Renderer2, ɵɵdefineComponent, ɵsetClassMetadata, Component, ViewEncapsulation, Input, ɵɵdefineDirective, ɵɵlistener, Directive, TemplateRef, EventEmitter, Output, ɵɵdefineInjectable, Injectable, InjectionToken, ChangeDetectorRef, ɵɵattribute, ɵɵProvidersFeature, ChangeDetectionStrategy, Inject, ɵɵdefineNgModule, ɵɵdefineInjector, ɵɵsetNgModuleScope, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { createPromiseCapability, removeNullCharacters, getFilenameFromUrl, createObjectURL, addLinkAttributes, LinkTarget, createValidAbsoluteUrl, AnnotationLayer, renderTextLayer, RenderingCancelledException, PDFDateString, getDocument, GlobalWorkerOptions } from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { __awaiter } from 'tslib';\nimport * as PDFJSWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\n\nclass PdfAttachmentsViewer {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    get pdfViewer() {\n        return this._pdfViewer;\n    }\n    set pdfViewer(value) {\n        if (this._pdfViewer !== value) {\n            if (this.attachmentViewerRef) {\n                this.attachmentViewerRef.dispose();\n                this.attachmentViewerRef = null;\n            }\n            this._pdfViewer = value;\n            this.attachmentViewerRef = this._pdfViewer.registerAttachmentViewer();\n        }\n    }\n    ngAfterViewInit() {\n        this.attachmentViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n    }\n}\nPdfAttachmentsViewer.ɵfac = function PdfAttachmentsViewer_Factory(t) { return new (t || PdfAttachmentsViewer)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(Renderer2)); };\nPdfAttachmentsViewer.ɵcmp = ɵɵdefineComponent({ type: PdfAttachmentsViewer, selectors: [[\"mnj-pdf-attachments-viewer\"], [\"\", \"mnjPdfAttachmentsViewer\", \"\"]], hostAttrs: [1, \"mnj-attachments-viewer\"], inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, decls: 0, vars: 0, template: function PdfAttachmentsViewer_Template(rf, ctx) { }, styles: [\".mnj-page-viewer .pdf-page{margin:10px auto}.mnj-page-viewer .pdf-page>.textLayer>span{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper{position:absolute;width:10em}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup{border-radius:2px;cursor:pointer;margin-left:5px;max-width:20em;padding:6px;position:absolute;word-wrap:break-word;z-index:200}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup>*{font-size:9px}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup h1,.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup span{display:inline-block}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup p{border-top:1px solid;margin-top:2px;padding-top:2px}.mnj-page-viewer .pdf-page>.annotationLayer>section{position:absolute}.mnj-page-viewer .pdf-page>.annotationLayer .buttonWidgetAnnotation.pushButton>a,.mnj-page-viewer .pdf-page>.annotationLayer .linkAnnotation>a{font-size:1em;height:100%;left:0;position:absolute;top:0;width:100%}.mnj-thumbnail-viewer .pdf-thumbnail{margin:10px auto}.mnj-toc-viewer .outlineWithDeepNesting>.outlineItem{margin:0 10px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler{float:left;height:0;position:relative;width:0}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler:before{content:\\\"\\\";display:inline-block;height:15px;position:absolute;width:15px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler.outlineItemsHidden~.outlineItems{display:none}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>a{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border-radius:2px;display:inline-block;font-size:13px;height:auto;line-height:15px;margin-bottom:1px;margin-left:15px;min-width:calc(100% - 15px);padding:2px 0 5px 4px;text-decoration:none;user-select:none;white-space:normal}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>.outlineItems{margin-left:20px}.mnj-attachments-viewer .attachmentsItem>button{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border:1px solid;box-sizing:border-box;cursor:pointer;display:inline-block;height:40px;margin:0;outline:none;overflow:visible;padding:0 15px;position:relative;text-align:center;text-decoration:none;user-select:none;vertical-align:baseline;white-space:nowrap}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfAttachmentsViewer, [{\n        type: Component,\n        args: [{\n                selector: 'mnj-pdf-attachments-viewer, [mnjPdfAttachmentsViewer]',\n                template: '',\n                styleUrls: ['./pdf-viewer.scss'],\n                encapsulation: ViewEncapsulation.None,\n                host: { class: 'mnj-attachments-viewer' },\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }]; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfDownloadButton {\n    constructor() { }\n    onCLick(event) {\n        if (this.pdfViewer) {\n            this.pdfViewer.downloadPdf();\n            event.stopPropagation();\n        }\n    }\n}\nPdfDownloadButton.ɵfac = function PdfDownloadButton_Factory(t) { return new (t || PdfDownloadButton)(); };\nPdfDownloadButton.ɵdir = ɵɵdefineDirective({ type: PdfDownloadButton, selectors: [[\"button\", \"mnjPdfDownload\", \"\"]], hostBindings: function PdfDownloadButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"click\", function PdfDownloadButton_click_HostBindingHandler($event) { return ctx.onCLick($event); });\n    } }, inputs: { pdfViewer: [\"for\", \"pdfViewer\"] } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfDownloadButton, [{\n        type: Directive,\n        args: [{\n                selector: 'button[mnjPdfDownload]',\n                host: { '(click)': 'onCLick($event)' },\n            }]\n    }], function () { return []; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\n/**\n * Element that will be used as a template for the loader\n * of a pdfPage when it is loading.\n */\nclass PdfPageLoading {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nPdfPageLoading.ɵfac = function PdfPageLoading_Factory(t) { return new (t || PdfPageLoading)(ɵɵdirectiveInject(TemplateRef)); };\nPdfPageLoading.ɵdir = ɵɵdefineDirective({ type: PdfPageLoading, selectors: [[\"ng-template\", \"mnjPdfLoading\", \"\"]], inputs: { matchSize: \"matchSize\" } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfPageLoading, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[mnjPdfLoading]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }] }); })();\n\nclass PdfPageViewer {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    get pdfViewer() {\n        return this._pdfViewer;\n    }\n    set pdfViewer(value) {\n        if (this._pdfViewer !== value) {\n            if (this.pageViewerRef) {\n                this.pageViewerRef.dispose();\n                this.pageViewerRef = null;\n            }\n            this._pdfViewer = value;\n            this.pageViewerRef = this.pdfViewer.registerPageViewer();\n        }\n    }\n    ngAfterViewInit() {\n        this.pageViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n    }\n}\nPdfPageViewer.ɵfac = function PdfPageViewer_Factory(t) { return new (t || PdfPageViewer)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(Renderer2)); };\nPdfPageViewer.ɵcmp = ɵɵdefineComponent({ type: PdfPageViewer, selectors: [[\"mnj-pdf-page-viewer\"], [\"\", \"mnjPdfPageViewer\", \"\"]], hostAttrs: [1, \"mnj-page-viewer\"], inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, decls: 0, vars: 0, template: function PdfPageViewer_Template(rf, ctx) { }, styles: [\".mnj-page-viewer .pdf-page{margin:10px auto}.mnj-page-viewer .pdf-page>.textLayer>span{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper{position:absolute;width:10em}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup{border-radius:2px;cursor:pointer;margin-left:5px;max-width:20em;padding:6px;position:absolute;word-wrap:break-word;z-index:200}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup>*{font-size:9px}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup h1,.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup span{display:inline-block}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup p{border-top:1px solid;margin-top:2px;padding-top:2px}.mnj-page-viewer .pdf-page>.annotationLayer>section{position:absolute}.mnj-page-viewer .pdf-page>.annotationLayer .buttonWidgetAnnotation.pushButton>a,.mnj-page-viewer .pdf-page>.annotationLayer .linkAnnotation>a{font-size:1em;height:100%;left:0;position:absolute;top:0;width:100%}.mnj-thumbnail-viewer .pdf-thumbnail{margin:10px auto}.mnj-toc-viewer .outlineWithDeepNesting>.outlineItem{margin:0 10px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler{float:left;height:0;position:relative;width:0}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler:before{content:\\\"\\\";display:inline-block;height:15px;position:absolute;width:15px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler.outlineItemsHidden~.outlineItems{display:none}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>a{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border-radius:2px;display:inline-block;font-size:13px;height:auto;line-height:15px;margin-bottom:1px;margin-left:15px;min-width:calc(100% - 15px);padding:2px 0 5px 4px;text-decoration:none;user-select:none;white-space:normal}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>.outlineItems{margin-left:20px}.mnj-attachments-viewer .attachmentsItem>button{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border:1px solid;box-sizing:border-box;cursor:pointer;display:inline-block;height:40px;margin:0;outline:none;overflow:visible;padding:0 15px;position:relative;text-align:center;text-decoration:none;user-select:none;vertical-align:baseline;white-space:nowrap}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfPageViewer, [{\n        type: Component,\n        args: [{\n                selector: 'mnj-pdf-page-viewer, [mnjPdfPageViewer]',\n                template: '',\n                styleUrls: ['./pdf-viewer.scss'],\n                encapsulation: ViewEncapsulation.None,\n                host: { class: 'mnj-page-viewer' },\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }]; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfPrintButton {\n    constructor() { }\n    onCLick(event) {\n        if (this.pdfViewer) {\n            this.pdfViewer.printPdf();\n            event.stopPropagation();\n        }\n    }\n}\nPdfPrintButton.ɵfac = function PdfPrintButton_Factory(t) { return new (t || PdfPrintButton)(); };\nPdfPrintButton.ɵdir = ɵɵdefineDirective({ type: PdfPrintButton, selectors: [[\"button\", \"mnjPdfPrint\", \"\"]], hostBindings: function PdfPrintButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"click\", function PdfPrintButton_click_HostBindingHandler($event) { return ctx.onCLick($event); });\n    } }, inputs: { pdfViewer: [\"for\", \"pdfViewer\"] } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfPrintButton, [{\n        type: Directive,\n        args: [{\n                selector: 'button[mnjPdfPrint]',\n                host: { '(click)': 'onCLick($event)' },\n            }]\n    }], function () { return []; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfPropertiesButton {\n    constructor() {\n        this.pdfProperties = new EventEmitter();\n    }\n    onCLick(event) {\n        if (this.pdfViewer) {\n            this.pdfViewer.retrievePdfProperties().then((properties) => this.pdfProperties.emit(properties));\n        }\n        event.stopPropagation();\n    }\n}\nPdfPropertiesButton.ɵfac = function PdfPropertiesButton_Factory(t) { return new (t || PdfPropertiesButton)(); };\nPdfPropertiesButton.ɵdir = ɵɵdefineDirective({ type: PdfPropertiesButton, selectors: [[\"button\", \"mnjPdfProperties\", \"\"]], hostBindings: function PdfPropertiesButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"click\", function PdfPropertiesButton_click_HostBindingHandler($event) { return ctx.onCLick($event); });\n    } }, inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, outputs: { pdfProperties: \"pdfProperties\" } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfPropertiesButton, [{\n        type: Directive,\n        args: [{\n                selector: 'button[mnjPdfProperties]',\n                host: { '(click)': 'onCLick($event)' },\n            }]\n    }], function () { return []; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }], pdfProperties: [{\n            type: Output\n        }] }); })();\n\nclass PdfSearchInput {\n    constructor() { }\n    onSubmit(event) {\n        if (this.pdfViewer) {\n            this.pdfViewer.search(event.target.value);\n            event.stopPropagation();\n        }\n    }\n}\nPdfSearchInput.ɵfac = function PdfSearchInput_Factory(t) { return new (t || PdfSearchInput)(); };\nPdfSearchInput.ɵdir = ɵɵdefineDirective({ type: PdfSearchInput, selectors: [[\"input\", \"mnjPdfSearchInput\", \"\"]], hostBindings: function PdfSearchInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"keyup.enter\", function PdfSearchInput_keyup_enter_HostBindingHandler($event) { return ctx.onSubmit($event); });\n    } }, inputs: { pdfViewer: [\"for\", \"pdfViewer\"] } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfSearchInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[mnjPdfSearchInput]',\n                host: { '(keyup.enter)': 'onSubmit($event)' },\n            }]\n    }], function () { return []; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfThumbnailViewer {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    get pdfViewer() {\n        return this._pdfViewer;\n    }\n    set pdfViewer(value) {\n        if (this._pdfViewer !== value) {\n            if (this.thumbnailViewerRef) {\n                this.thumbnailViewerRef.dispose();\n                this.thumbnailViewerRef = null;\n            }\n            this._pdfViewer = value;\n            this.thumbnailViewerRef = this._pdfViewer.registerThumbnailViewer();\n        }\n    }\n    ngAfterViewInit() {\n        this.thumbnailViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n    }\n}\nPdfThumbnailViewer.ɵfac = function PdfThumbnailViewer_Factory(t) { return new (t || PdfThumbnailViewer)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(Renderer2)); };\nPdfThumbnailViewer.ɵcmp = ɵɵdefineComponent({ type: PdfThumbnailViewer, selectors: [[\"mnj-pdf-thumbnail-viewer\"], [\"\", \"mnjPdfThumbnailViewer\", \"\"]], hostAttrs: [1, \"mnj-thumbnail-viewer\"], inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, decls: 0, vars: 0, template: function PdfThumbnailViewer_Template(rf, ctx) { }, styles: [\".mnj-page-viewer .pdf-page{margin:10px auto}.mnj-page-viewer .pdf-page>.textLayer>span{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper{position:absolute;width:10em}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup{border-radius:2px;cursor:pointer;margin-left:5px;max-width:20em;padding:6px;position:absolute;word-wrap:break-word;z-index:200}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup>*{font-size:9px}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup h1,.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup span{display:inline-block}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup p{border-top:1px solid;margin-top:2px;padding-top:2px}.mnj-page-viewer .pdf-page>.annotationLayer>section{position:absolute}.mnj-page-viewer .pdf-page>.annotationLayer .buttonWidgetAnnotation.pushButton>a,.mnj-page-viewer .pdf-page>.annotationLayer .linkAnnotation>a{font-size:1em;height:100%;left:0;position:absolute;top:0;width:100%}.mnj-thumbnail-viewer .pdf-thumbnail{margin:10px auto}.mnj-toc-viewer .outlineWithDeepNesting>.outlineItem{margin:0 10px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler{float:left;height:0;position:relative;width:0}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler:before{content:\\\"\\\";display:inline-block;height:15px;position:absolute;width:15px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler.outlineItemsHidden~.outlineItems{display:none}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>a{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border-radius:2px;display:inline-block;font-size:13px;height:auto;line-height:15px;margin-bottom:1px;margin-left:15px;min-width:calc(100% - 15px);padding:2px 0 5px 4px;text-decoration:none;user-select:none;white-space:normal}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>.outlineItems{margin-left:20px}.mnj-attachments-viewer .attachmentsItem>button{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border:1px solid;box-sizing:border-box;cursor:pointer;display:inline-block;height:40px;margin:0;outline:none;overflow:visible;padding:0 15px;position:relative;text-align:center;text-decoration:none;user-select:none;vertical-align:baseline;white-space:nowrap}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfThumbnailViewer, [{\n        type: Component,\n        args: [{\n                selector: 'mnj-pdf-thumbnail-viewer, [mnjPdfThumbnailViewer]',\n                template: '',\n                styleUrls: ['./pdf-viewer.scss'],\n                encapsulation: ViewEncapsulation.None,\n                host: { class: 'mnj-thumbnail-viewer' },\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }]; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfTocViewer {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    get pdfViewer() {\n        return this._pdfViewer;\n    }\n    set pdfViewer(value) {\n        if (this._pdfViewer !== value) {\n            if (this.outlineViewerRef) {\n                this.outlineViewerRef.dispose();\n                this.outlineViewerRef = null;\n            }\n            this._pdfViewer = value;\n            this.outlineViewerRef = this._pdfViewer.registerOutlineViewer();\n        }\n    }\n    ngAfterViewInit() {\n        this.outlineViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n    }\n}\nPdfTocViewer.ɵfac = function PdfTocViewer_Factory(t) { return new (t || PdfTocViewer)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(Renderer2)); };\nPdfTocViewer.ɵcmp = ɵɵdefineComponent({ type: PdfTocViewer, selectors: [[\"mnj-pdf-toc-viewer\"], [\"\", \"mnjPdfTocViewer\", \"\"]], hostAttrs: [1, \"mnj-toc-viewer\"], inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, decls: 0, vars: 0, template: function PdfTocViewer_Template(rf, ctx) { }, styles: [\".mnj-page-viewer .pdf-page{margin:10px auto}.mnj-page-viewer .pdf-page>.textLayer>span{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper{position:absolute;width:10em}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup{border-radius:2px;cursor:pointer;margin-left:5px;max-width:20em;padding:6px;position:absolute;word-wrap:break-word;z-index:200}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup>*{font-size:9px}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup h1,.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup span{display:inline-block}.mnj-page-viewer .pdf-page>.annotationLayer .popupWrapper .popup p{border-top:1px solid;margin-top:2px;padding-top:2px}.mnj-page-viewer .pdf-page>.annotationLayer>section{position:absolute}.mnj-page-viewer .pdf-page>.annotationLayer .buttonWidgetAnnotation.pushButton>a,.mnj-page-viewer .pdf-page>.annotationLayer .linkAnnotation>a{font-size:1em;height:100%;left:0;position:absolute;top:0;width:100%}.mnj-thumbnail-viewer .pdf-thumbnail{margin:10px auto}.mnj-toc-viewer .outlineWithDeepNesting>.outlineItem{margin:0 10px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler{float:left;height:0;position:relative;width:0}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler:before{content:\\\"\\\";display:inline-block;height:15px;position:absolute;width:15px}.mnj-toc-viewer .outlineWithDeepNesting .outlineItemToggler.outlineItemsHidden~.outlineItems{display:none}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>a{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border-radius:2px;display:inline-block;font-size:13px;height:auto;line-height:15px;margin-bottom:1px;margin-left:15px;min-width:calc(100% - 15px);padding:2px 0 5px 4px;text-decoration:none;user-select:none;white-space:normal}.mnj-toc-viewer .outlineWithDeepNesting .outlineItem>.outlineItems{margin-left:20px}.mnj-attachments-viewer .attachmentsItem>button{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border:1px solid;box-sizing:border-box;cursor:pointer;display:inline-block;height:40px;margin:0;outline:none;overflow:visible;padding:0 15px;position:relative;text-align:center;text-decoration:none;user-select:none;vertical-align:baseline;white-space:nowrap}\"], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfTocViewer, [{\n        type: Component,\n        args: [{\n                selector: 'mnj-pdf-toc-viewer, [mnjPdfTocViewer]',\n                template: '',\n                styleUrls: ['./pdf-viewer.scss'],\n                encapsulation: ViewEncapsulation.None,\n                host: { class: 'mnj-toc-viewer' },\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }]; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }] }); })();\n\nclass PdfUploadButton {\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.fileLoaded = new EventEmitter();\n    }\n    ngOnInit() {\n        this.fileInput = this._buildFileInput();\n        this.renderer.appendChild(this.elementRef.nativeElement, this.fileInput);\n    }\n    onCLick(event) {\n        if (this.pdfViewer) {\n            this.fileInput.click();\n        }\n    }\n    upload(event) {\n        const pdfFile = event.target.files[0];\n        if (URL.createObjectURL) {\n            this.pdfViewer.pdfSrc = URL.createObjectURL(pdfFile);\n        }\n        else {\n            // Read the local file into a Uint8Array.\n            const fileReader = new FileReader();\n            fileReader.onload = (evt) => {\n                // @ts-ignore\n                const buffer = evt.target.result;\n                this.pdfViewer.pdfSrc = new Uint8Array(buffer);\n            };\n            fileReader.readAsArrayBuffer(pdfFile);\n        }\n        this.fileLoaded.emit(pdfFile);\n    }\n    _buildFileInput() {\n        const fileInput = this.renderer.createElement('input');\n        this.renderer.setProperty(fileInput, 'type', 'file');\n        this.renderer.setProperty(fileInput, 'accept', '.pdf, application/pdf');\n        this.renderer.listen(fileInput, 'change', (event) => this.upload(event));\n        this.renderer.addClass(fileInput, 'cdk-visually-hidden');\n        return fileInput;\n    }\n}\nPdfUploadButton.ɵfac = function PdfUploadButton_Factory(t) { return new (t || PdfUploadButton)(ɵɵdirectiveInject(ElementRef), ɵɵdirectiveInject(Renderer2)); };\nPdfUploadButton.ɵdir = ɵɵdefineDirective({ type: PdfUploadButton, selectors: [[\"button\", \"mnjPdfUpload\", \"\"]], hostBindings: function PdfUploadButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵɵlistener(\"click\", function PdfUploadButton_click_HostBindingHandler($event) { return ctx.onCLick($event); });\n    } }, inputs: { pdfViewer: [\"for\", \"pdfViewer\"] }, outputs: { fileLoaded: \"fileLoaded\" } });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfUploadButton, [{\n        type: Directive,\n        args: [{\n                selector: 'button[mnjPdfUpload]',\n                host: { '(click)': 'onCLick($event)' },\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }]; }, { pdfViewer: [{\n            type: Input,\n            args: ['for']\n        }], fileLoaded: [{\n            type: Output\n        }] }); })();\n\nclass PdfAttachmentViewerRef {\n    constructor(downloadManager) {\n        this.downloadManager = downloadManager;\n        //Events\n        this.attachmentsLoaded = new Subject();\n    }\n    withRenderer(renderer) {\n        this.renderer = renderer;\n        return this;\n    }\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        this.renderer.setStyle(element, 'overflow', 'auto');\n        this.renderer.setStyle(element, 'height', '100%');\n        this.renderer.setStyle(element, 'display', 'block');\n        if (element !== this.container) {\n            this._container = element;\n            this.reset();\n        }\n        return this;\n    }\n    dispose() {\n        this.reset();\n        this.attachmentsLoaded.complete();\n    }\n    setDocument(pdfDocument) {\n        this.pdfDocument = pdfDocument;\n        this.pdfDocument.getAttachments().then((attachments) => this.render({ attachments }));\n    }\n    reset(keepRenderedCapability = false) {\n        this.attachments = null;\n        this.container.textContent = '';\n        if (!keepRenderedCapability) {\n            this._renderedCapability = createPromiseCapability();\n        }\n    }\n    render({ attachments, keepRenderedCapability = false }) {\n        let attachmentsCount = 0;\n        if (this.attachments) {\n            this.reset(keepRenderedCapability === true);\n        }\n        this.attachments = attachments || null;\n        if (!attachments) {\n            this._dispatchEvent(attachmentsCount);\n            return;\n        }\n        const names = Object.keys(attachments).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n        attachmentsCount = names.length;\n        for (let i = 0; i < attachmentsCount; i++) {\n            const item = attachments[names[i]];\n            const filename = removeNullCharacters(getFilenameFromUrl(item.filename));\n            const div = document.createElement('div');\n            div.className = 'attachmentsItem';\n            const button = document.createElement('button');\n            button.textContent = filename;\n            if (/\\.pdf$/i.test(filename)) {\n                this._bindPdfLink(button, item.content, filename);\n            }\n            else {\n                this._bindLink(button, item.content, filename);\n            }\n            div.appendChild(button);\n            this._container.appendChild(div);\n        }\n        this._dispatchEvent(attachmentsCount);\n    }\n    /**\n     * Used to append FileAttachment annotations to the sidebar.\n     * @private\n     */\n    _appendAttachment({ id, filename, content }) {\n        this._renderedCapability.promise.then(() => {\n            let attachments = this.attachments;\n            if (!attachments) {\n                attachments = Object.create(null);\n            }\n            else {\n                for (const name in attachments) {\n                    if (id === name) {\n                        return; // Ignore the new attachment if it already exists.\n                    }\n                }\n            }\n            attachments[id] = {\n                filename,\n                content,\n            };\n            this.render({\n                attachments,\n                keepRenderedCapability: true,\n            });\n        });\n    }\n    _bindPdfLink(button, content, filename) {\n        button.onclick = () => {\n            const blobUrl = createObjectURL(content, 'application/pdf');\n            const viewerUrl = '?file=' + encodeURIComponent(blobUrl + '#' + filename);\n            window.open(viewerUrl);\n            return false;\n        };\n    }\n    _bindLink(button, content, filename) {\n        button.onclick = () => {\n            this.downloadManager.downloadData(content, filename, '');\n            return false;\n        };\n    }\n    _dispatchEvent(attachmentsCount) {\n        this._renderedCapability.resolve();\n        this.attachmentsLoaded.next({ count: attachmentsCount });\n    }\n    get container() {\n        return this._container;\n    }\n}\n\nconst DEFAULT_TITLE = '\\u2013';\nclass PdfOutlineViewerRef {\n    constructor(linkService) {\n        this.linkService = linkService;\n        //Events\n        this.outlineLoaded = new Subject();\n    }\n    withRenderer(renderer) {\n        this.renderer = renderer;\n        return this;\n    }\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        this.renderer.setStyle(element, 'overflow', 'auto');\n        this.renderer.setStyle(element, 'height', '100%');\n        if (element !== this.container) {\n            this._container = element;\n            this.reset();\n        }\n        return this;\n    }\n    dispose() {\n        this.reset();\n        this.outlineLoaded.complete();\n    }\n    setDocument(pdfDocument) {\n        this.pdfDocument = pdfDocument;\n        pdfDocument.getOutline().then((outline) => this.render({ outline }));\n    }\n    reset() {\n        this.outline = null;\n        this.lastToggleIsShow = true;\n        // Remove the outline from the DOM.\n        this.container.textContent = '';\n        // Ensure that the left (right in RTL locales) margin is always reset,\n        // to prevent incorrect outline alignment if a new document is opened.\n        this.container.classList.remove('outlineWithDeepNesting');\n    }\n    _bindLink(element, { url, newWindow, dest }) {\n        const { linkService } = this;\n        if (url) {\n            addLinkAttributes(element, {\n                url,\n                target: newWindow ? LinkTarget.BLANK : linkService.externalLinkTarget,\n                rel: linkService.externalLinkRel,\n                enabled: linkService.externalLinkEnabled,\n            });\n            return;\n        }\n        element.href = linkService.getDestinationHash(dest);\n        element.onclick = () => {\n            if (dest) {\n                linkService.navigateTo(dest);\n            }\n            return false;\n        };\n    }\n    _setStyles(element, { bold, italic }) {\n        if (bold) {\n            element.style.fontWeight = 'bold';\n        }\n        if (italic) {\n            element.style.fontStyle = 'italic';\n        }\n    }\n    /**\n     * Prepend a button before an outline item which allows the user to toggle\n     * the visibility of all outline items at that level.\n     *\n     * @private\n     */\n    _addToggleButton(div, { count, items }) {\n        const toggler = document.createElement('div');\n        toggler.className = 'outlineItemToggler';\n        if (count < 0 && Math.abs(count) === items.length) {\n            toggler.classList.add('outlineItemsHidden');\n        }\n        toggler.onclick = (evt) => {\n            evt.stopPropagation();\n            toggler.classList.toggle('outlineItemsHidden');\n            if (evt.shiftKey) {\n                const shouldShowAll = !toggler.classList.contains('outlineItemsHidden');\n                this._toggleOutlineItem(div, shouldShowAll);\n            }\n        };\n        div.insertBefore(toggler, div.firstChild);\n    }\n    /**\n     * Toggle the visibility of the subtree of an outline item.\n     *\n     * @param {Element} root - the root of the outline (sub)tree.\n     * @param {boolean} show - whether to show the outline (sub)tree. If false,\n     *   the outline subtree rooted at |root| will be collapsed.\n     *\n     * @private\n     */\n    _toggleOutlineItem(root, show = false) {\n        this.lastToggleIsShow = show;\n        for (const toggler of root.querySelectorAll('.outlineItemToggler')) {\n            toggler.classList.toggle('outlineItemsHidden', !show);\n        }\n    }\n    /**\n     * Collapse or expand all subtrees of the outline.\n     */\n    toggleOutlineTree() {\n        if (!this.outline) {\n            return;\n        }\n        this._toggleOutlineItem(this.container, !this.lastToggleIsShow);\n    }\n    /**\n     * @param params\n     */\n    render({ outline }) {\n        let outlineCount = 0;\n        if (this.outline) {\n            this.reset();\n        }\n        this.outline = outline || null;\n        if (!outline) {\n            this._dispatchEvent(outlineCount);\n            return;\n        }\n        const fragment = document.createDocumentFragment();\n        const queue = [{ parent: fragment, items: this.outline }];\n        let hasAnyNesting = false;\n        while (queue.length > 0) {\n            const levelData = queue.shift();\n            for (const item of levelData.items) {\n                const div = document.createElement('div');\n                div.className = 'outlineItem';\n                const element = document.createElement('a');\n                this._bindLink(element, item);\n                this._setStyles(element, item);\n                element.textContent = removeNullCharacters(item.title) || DEFAULT_TITLE;\n                div.appendChild(element);\n                if (item.items.length > 0) {\n                    hasAnyNesting = true;\n                    this._addToggleButton(div, item);\n                    const itemsDiv = document.createElement('div');\n                    itemsDiv.className = 'outlineItems';\n                    div.appendChild(itemsDiv);\n                    queue.push({ parent: itemsDiv, items: item.items });\n                }\n                levelData.parent.appendChild(div);\n                outlineCount++;\n            }\n        }\n        if (hasAnyNesting) {\n            this.container.classList.add('outlineWithDeepNesting');\n            this.lastToggleIsShow = fragment.querySelectorAll('.outlineItemsHidden').length === 0;\n        }\n        this.container.appendChild(fragment);\n        this._dispatchEvent(outlineCount);\n    }\n    /**\n     * @private\n     */\n    _dispatchEvent(outlineCount) {\n        this.outlineLoaded.next({ count: outlineCount });\n    }\n    get container() {\n        return this._container;\n    }\n}\n\nconst MAX_AUTO_SCALE = 1.25;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DEFAULT_SCALE_VALUE = 'auto';\n\nvar RendererType;\n(function (RendererType) {\n    RendererType[\"CANVAS\"] = \"canvas\";\n    RendererType[\"SVG\"] = \"svg\";\n})(RendererType || (RendererType = {}));\nvar SpreadMode;\n(function (SpreadMode) {\n    SpreadMode[SpreadMode[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n    SpreadMode[SpreadMode[\"NONE\"] = 0] = \"NONE\";\n    SpreadMode[SpreadMode[\"ODD\"] = 1] = \"ODD\";\n    SpreadMode[SpreadMode[\"EVEN\"] = 2] = \"EVEN\";\n})(SpreadMode || (SpreadMode = {}));\nvar ScrollMode;\n(function (ScrollMode) {\n    ScrollMode[ScrollMode[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n    ScrollMode[ScrollMode[\"VERTICAL\"] = 0] = \"VERTICAL\";\n    ScrollMode[ScrollMode[\"HORIZONTAL\"] = 1] = \"HORIZONTAL\";\n    ScrollMode[ScrollMode[\"WRAPPED\"] = 2] = \"WRAPPED\";\n})(ScrollMode || (ScrollMode = {}));\nvar TextLayerMode;\n(function (TextLayerMode) {\n    TextLayerMode[TextLayerMode[\"DISABLE\"] = 0] = \"DISABLE\";\n    TextLayerMode[TextLayerMode[\"ENABLE\"] = 1] = \"ENABLE\";\n    TextLayerMode[TextLayerMode[\"ENABLE_ENHANCE\"] = 2] = \"ENABLE_ENHANCE\";\n})(TextLayerMode || (TextLayerMode = {}));\nvar PresentationModeState;\n(function (PresentationModeState) {\n    PresentationModeState[PresentationModeState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    PresentationModeState[PresentationModeState[\"NORMAL\"] = 1] = \"NORMAL\";\n    PresentationModeState[PresentationModeState[\"CHANGING\"] = 2] = \"CHANGING\";\n    PresentationModeState[PresentationModeState[\"FULLSCREEN\"] = 3] = \"FULLSCREEN\";\n})(PresentationModeState || (PresentationModeState = {}));\n\nclass PdfDownloadManager {\n    constructor() { }\n    downloadUrl(url, filename) {\n        if (!createValidAbsoluteUrl(url, 'http://example.com')) {\n            return; // restricted/invalid URL\n        }\n        this._download(url + '#pdfjs.action=download', filename);\n    }\n    downloadData(data, filename, contentType) {\n        const blobUrl = createObjectURL(data, contentType, false);\n        this._download(blobUrl, filename);\n    }\n    download(blob, url, filename) {\n        const blobUrl = URL.createObjectURL(blob);\n        this._download(blobUrl, filename);\n        URL.revokeObjectURL(blobUrl);\n    }\n    _download(blobUrl, filename) {\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = blobUrl;\n        a.target = '_parent';\n        // Use a.download if available. This increases the likelihood that\n        // the file is downloaded instead of opened by another PDF plugin.\n        if ('download' in a) {\n            a.download = filename;\n        }\n        // <a> must be in the document for IE and recent Firefox versions,\n        // otherwise .click() is ignored.\n        (document.body || document.documentElement).appendChild(a);\n        a.click();\n        a.remove();\n    }\n}\nPdfDownloadManager.ɵfac = function PdfDownloadManager_Factory(t) { return new (t || PdfDownloadManager)(); };\nPdfDownloadManager.ɵprov = ɵɵdefineInjectable({ token: PdfDownloadManager, factory: PdfDownloadManager.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfDownloadManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nclass AnnotationLayerBuilder {\n    constructor(pageDiv, pdfPage, linkService, downloadManager, imageResourcesPath = '', renderInteractiveForms = false) {\n        this.pageDiv = pageDiv;\n        this.pdfPage = pdfPage;\n        this.linkService = linkService;\n        this.downloadManager = downloadManager;\n        this.imageResourcesPath = imageResourcesPath;\n        this.renderInteractiveForms = renderInteractiveForms;\n        this.pageDiv = pageDiv;\n        this.pdfPage = pdfPage;\n        this.linkService = linkService;\n        this.downloadManager = downloadManager;\n        this.imageResourcesPath = imageResourcesPath;\n        this.renderInteractiveForms = renderInteractiveForms;\n        this.div = null;\n        this._cancelled = false;\n    }\n    /**\n     * @param viewport\n     * @param {string} intent (default value is 'display')\n     */\n    render(viewport, intent = 'display') {\n        this.pdfPage.getAnnotations({ intent }).then((annotations) => {\n            if (this._cancelled) {\n                return;\n            }\n            const parameters = {\n                viewport: viewport.clone({ dontFlip: true }),\n                div: this.div,\n                annotations,\n                page: this.pdfPage,\n                imageResourcesPath: this.imageResourcesPath,\n                renderInteractiveForms: this.renderInteractiveForms,\n                linkService: this.linkService,\n                downloadManager: this.downloadManager,\n            };\n            if (this.div) {\n                // If an annotationLayer already exists, refresh its children's\n                // transformation matrices.\n                AnnotationLayer.update(parameters);\n            }\n            else {\n                // Create an annotation layer div and render the annotations\n                // if there is at least one annotation.\n                if (annotations.length === 0) {\n                    return;\n                }\n                this.div = document.createElement('div');\n                this.div.className = 'annotationLayer';\n                this.pageDiv.appendChild(this.div);\n                parameters.div = this.div;\n                AnnotationLayer.render(parameters);\n            }\n        });\n    }\n    cancel() {\n        this._cancelled = true;\n    }\n    hide() {\n        if (!this.div) {\n            return;\n        }\n        this.div.setAttribute('hidden', 'true');\n    }\n}\nclass DefaultAnnotationLayerFactory {\n    static createAnnotationLayerBuilder(pageDiv, pdfPage, linkService, downloadManager, imageResourcesPath = 'assets/images/', renderInteractiveForms = false) {\n        return new AnnotationLayerBuilder(pageDiv, pdfPage, linkService, downloadManager, imageResourcesPath, renderInteractiveForms);\n    }\n}\n\nvar CharacterType;\n(function (CharacterType) {\n    CharacterType[CharacterType[\"SPACE\"] = 0] = \"SPACE\";\n    CharacterType[CharacterType[\"ALPHA_LETTER\"] = 1] = \"ALPHA_LETTER\";\n    CharacterType[CharacterType[\"PUNCT\"] = 2] = \"PUNCT\";\n    CharacterType[CharacterType[\"HAN_LETTER\"] = 3] = \"HAN_LETTER\";\n    CharacterType[CharacterType[\"KATAKANA_LETTER\"] = 4] = \"KATAKANA_LETTER\";\n    CharacterType[CharacterType[\"HIRAGANA_LETTER\"] = 5] = \"HIRAGANA_LETTER\";\n    CharacterType[CharacterType[\"HALFWIDTH_KATAKANA_LETTER\"] = 6] = \"HALFWIDTH_KATAKANA_LETTER\";\n    CharacterType[CharacterType[\"THAI_LETTER\"] = 7] = \"THAI_LETTER\";\n})(CharacterType || (CharacterType = {}));\nfunction isAlphabeticalScript(charCode) {\n    return charCode < 0x2e80;\n}\nfunction isAscii(charCode) {\n    return (charCode && 0xff80) === 0;\n}\nfunction isAsciiAlpha(charCode) {\n    return ((charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n        (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a));\n}\nfunction isAsciiDigit(charCode) {\n    return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\nfunction isAsciiSpace(charCode) {\n    return (charCode === /* SPACE = */ 0x20 ||\n        charCode === /* TAB = */ 0x09 ||\n        charCode === /* CR = */ 0x0d ||\n        charCode === /* LF = */ 0x0a);\n}\nfunction isHan(charCode) {\n    return (charCode >= 0x3400 && charCode <= 0x9fff) || (charCode >= 0xf900 && charCode <= 0xfaff);\n}\nfunction isKatakana(charCode) {\n    return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\nfunction isHiragana(charCode) {\n    return charCode >= 0x3040 && charCode <= 0x309f;\n}\nfunction isHalfwidthKatakana(charCode) {\n    return charCode >= 0xff60 && charCode <= 0xff9f;\n}\nfunction isThai(charCode) {\n    // tslint:disable-next-line:no-bitwise\n    return (charCode & 0xff80) === 0x0e00;\n}\nfunction getCharacterType(charCode) {\n    if (isAlphabeticalScript(charCode)) {\n        if (isAscii(charCode)) {\n            if (isAsciiSpace(charCode)) {\n                return CharacterType.SPACE;\n            }\n            else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === /* UNDERSCORE = */ 0x5f) {\n                return CharacterType.ALPHA_LETTER;\n            }\n            return CharacterType.PUNCT;\n        }\n        else if (isThai(charCode)) {\n            return CharacterType.THAI_LETTER;\n        }\n        else if (charCode === /* NBSP = */ 0xa0) {\n            return CharacterType.SPACE;\n        }\n        return CharacterType.ALPHA_LETTER;\n    }\n    if (isHan(charCode)) {\n        return CharacterType.HAN_LETTER;\n    }\n    else if (isKatakana(charCode)) {\n        return CharacterType.KATAKANA_LETTER;\n    }\n    else if (isHiragana(charCode)) {\n        return CharacterType.HIRAGANA_LETTER;\n    }\n    else if (isHalfwidthKatakana(charCode)) {\n        return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n    }\n    return CharacterType.ALPHA_LETTER;\n}\n\nclass PDFPageViewBuffer {\n    constructor(size) {\n        this.size = size;\n        this.data = [];\n    }\n    push(view) {\n        const i = this.data.findIndex((v) => v.id === view.id);\n        if (i >= 0) {\n            this.data.splice(i, 1);\n        }\n        this.data.push(view);\n        if (this.data.length > this.size) {\n            this.data.shift().destroy();\n        }\n    }\n    /**\n     * After calling resize, the size of the buffer will be newSize. The optional\n     * parameter pagesToKeep is, if present, an array of pages to push to the back\n     * of the buffer, delaying their destruction. The size of pagesToKeep has no\n     * impact on the final size of the buffer; if pagesToKeep has length larger\n     * than newSize, some of those pages will be destroyed anyway.\n     */\n    resize(newSize, pagesToKeep) {\n        this.size = newSize;\n        if (pagesToKeep) {\n            const pageIdsToKeep = new Set();\n            for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n                pageIdsToKeep.add(pagesToKeep[i].id);\n            }\n            moveToEndOfArray(this.data, function (page) {\n                return pageIdsToKeep.has(page.id);\n            });\n        }\n        while (this.data.length > this.size) {\n            this.data.shift().destroy();\n        }\n    }\n}\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n    const moved = [], len = arr.length;\n    let write = 0;\n    for (let read = 0; read < len; ++read) {\n        if (condition(arr[read])) {\n            moved.push(arr[read]);\n        }\n        else {\n            arr[write] = arr[read];\n            ++write;\n        }\n    }\n    for (let read = 0; write < len; ++read, ++write) {\n        arr[write] = moved[read];\n    }\n}\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nclass TextLayerBuilder {\n    constructor(textLayerDiv, pageIndex, viewport, findController = null, enhanceTextSelection = false) {\n        this.textLayerDiv = textLayerDiv;\n        this.pageIndex = pageIndex;\n        this.viewport = viewport;\n        this.findController = findController;\n        this.enhanceTextSelection = enhanceTextSelection;\n        this.renderingDone = false;\n        this.textContent = null;\n        this.textContentItemsStr = [];\n        this.textContentStream = null;\n        this.textDivs = [];\n        this.textLayerDiv = textLayerDiv;\n        this.textContent = null;\n        this.textContentItemsStr = [];\n        this.textContentStream = null;\n        this.renderingDone = false;\n        this.pageIdx = pageIndex;\n        this.pageNumber = this.pageIdx + 1;\n        this.matches = [];\n        this.viewport = viewport;\n        this.textDivs = [];\n        this.findController = findController;\n        this.textLayerRenderTask = null;\n        this.enhanceTextSelection = enhanceTextSelection;\n        this._bindMouse();\n    }\n    /**\n     * @private\n     */\n    _finishRendering() {\n        this.renderingDone = true;\n        if (!this.enhanceTextSelection) {\n            const endOfContent = document.createElement('div');\n            endOfContent.className = 'endOfContent';\n            this.textLayerDiv.appendChild(endOfContent);\n        }\n    }\n    /**\n     * Renders the text layer.\n     *\n     * @param {number} [timeout] - Wait for a specified amount of milliseconds\n     *                             before rendering.\n     */\n    render(timeout = 0) {\n        if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n            return;\n        }\n        this.cancel();\n        this.textDivs = [];\n        const textLayerFrag = document.createDocumentFragment();\n        this.textLayerRenderTask = renderTextLayer({\n            textContent: this.textContent,\n            textContentStream: this.textContentStream,\n            container: textLayerFrag,\n            viewport: this.viewport,\n            textDivs: this.textDivs,\n            textContentItemsStr: this.textContentItemsStr,\n            timeout,\n            enhanceTextSelection: this.enhanceTextSelection,\n        });\n        this.textLayerRenderTask.promise.then(() => {\n            this.textLayerDiv.appendChild(textLayerFrag);\n            this._finishRendering();\n            this._updateMatches();\n        });\n    }\n    /**\n     * Cancel rendering of the text layer.\n     */\n    cancel() {\n        if (this.textLayerRenderTask) {\n            this.textLayerRenderTask.cancel();\n            this.textLayerRenderTask = null;\n        }\n    }\n    setTextContentStream(readableStream) {\n        this.cancel();\n        this.textContentStream = readableStream;\n    }\n    setTextContent(textContent) {\n        this.cancel();\n        this.textContent = textContent;\n    }\n    _convertMatches(matches, matchesLength) {\n        // Early exit if there is nothing to convert.\n        if (!matches) {\n            return [];\n        }\n        const { findController, textContentItemsStr } = this;\n        let i = 0;\n        let iIndex = 0;\n        const end = textContentItemsStr.length - 1;\n        const queryLen = findController.state.query.length;\n        const result = [];\n        for (let m = 0, mm = matches.length; m < mm; m++) {\n            // Calculate the start position.\n            let matchIdx = matches[m];\n            // Loop over the divIdxs.\n            while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n                iIndex += textContentItemsStr[i].length;\n                i++;\n            }\n            if (i === textContentItemsStr.length) {\n                console.error('Could not find a matching mapping');\n            }\n            const match = {\n                begin: {\n                    divIdx: i,\n                    offset: matchIdx - iIndex,\n                },\n            };\n            // Calculate the end position.\n            if (matchesLength) {\n                // Multiterm search.\n                matchIdx += matchesLength[m];\n            }\n            else {\n                // Phrase search.\n                matchIdx += queryLen;\n            }\n            // Somewhat the same array as above, but use > instead of >= to get\n            // the end position right.\n            while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n                iIndex += textContentItemsStr[i].length;\n                i++;\n            }\n            match.end = {\n                divIdx: i,\n                offset: matchIdx - iIndex,\n            };\n            result.push(match);\n        }\n        return result;\n    }\n    _renderMatches(matches) {\n        // Early exit if there is nothing to render.\n        if (matches.length === 0) {\n            return;\n        }\n        const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n        const isSelectedPage = pageIdx === findController.selected.pageIdx;\n        const selectedMatchIdx = findController.selected.matchIdx;\n        const highlightAll = findController.state.highlightAll;\n        let prevEnd = null;\n        const infinity = {\n            divIdx: -1,\n            offset: undefined,\n        };\n        function beginText(begin, className) {\n            const divIdx = begin.divIdx;\n            textDivs[divIdx].textContent = '';\n            appendTextToDiv(divIdx, 0, begin.offset, className);\n        }\n        function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n            const div = textDivs[divIdx];\n            const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n            const node = document.createTextNode(content);\n            if (className) {\n                const span = document.createElement('span');\n                span.className = className;\n                span.appendChild(node);\n                div.appendChild(span);\n                return;\n            }\n            div.appendChild(node);\n        }\n        let i0 = selectedMatchIdx, i1 = i0 + 1;\n        if (highlightAll) {\n            i0 = 0;\n            i1 = matches.length;\n        }\n        else if (!isSelectedPage) {\n            // Not highlighting all and this isn't the selected page, so do nothing.\n            return;\n        }\n        for (let i = i0; i < i1; i++) {\n            const match = matches[i];\n            const begin = match.begin;\n            const end = match.end;\n            const isSelected = isSelectedPage && i === selectedMatchIdx;\n            const highlightSuffix = isSelected ? ' selected' : '';\n            if (isSelected) {\n                // Attempt to scroll the selected match into view.\n                findController.scrollMatchIntoView({\n                    element: textDivs[begin.divIdx],\n                    pageIndex: pageIdx,\n                    matchIndex: selectedMatchIdx,\n                });\n            }\n            // Match inside new div.\n            if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n                // If there was a previous div, then add the text at the end.\n                if (prevEnd !== null) {\n                    appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n                }\n                // Clear the divs and set the content until the starting point.\n                beginText(begin);\n            }\n            else {\n                appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n            }\n            if (begin.divIdx === end.divIdx) {\n                appendTextToDiv(begin.divIdx, begin.offset, end.offset, 'highlight' + highlightSuffix);\n            }\n            else {\n                appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, 'highlight begin' + highlightSuffix);\n                for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n                    textDivs[n0].className = 'highlight middle' + highlightSuffix;\n                }\n                beginText(end, 'highlight end' + highlightSuffix);\n            }\n            prevEnd = end;\n        }\n        if (prevEnd) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n    }\n    _updateMatches() {\n        // Only show matches when all rendering is done.\n        if (!this.renderingDone) {\n            return;\n        }\n        const { findController, matches, pageIdx, textContentItemsStr, textDivs } = this;\n        let clearedUntilDivIdx = -1;\n        // Clear all current matches.\n        for (let i = 0, ii = matches.length; i < ii; i++) {\n            const match = matches[i];\n            const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n            for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n                const div = textDivs[n];\n                div.textContent = textContentItemsStr[n];\n                div.className = '';\n            }\n            clearedUntilDivIdx = match.end.divIdx + 1;\n        }\n        if (!findController || !findController.highlightMatches) {\n            return;\n        }\n        // Convert the matches on the `findController` into the match format\n        // used for the textLayer.\n        const pageMatches = findController.pageMatches[pageIdx] || null;\n        const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n        this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n        this._renderMatches(this.matches);\n    }\n    /**\n     * Improves text selection by adding an additional div where the mouse was\n     * clicked. This reduces flickering of the content if the mouse is slowly\n     * moved up or down.\n     *\n     * @private\n     */\n    _bindMouse() {\n        const div = this.textLayerDiv;\n        div.addEventListener('mousedown', () => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n                this.textLayerRenderTask.expandTextDivs(true);\n                return;\n            }\n            const end = div.querySelector('.endOfContent');\n            if (!end) {\n                return;\n            }\n            end.classList.add('active');\n        });\n        div.addEventListener('mouseup', () => {\n            if (this.enhanceTextSelection && this.textLayerRenderTask) {\n                this.textLayerRenderTask.expandTextDivs(false);\n                return;\n            }\n            const end = div.querySelector('.endOfContent');\n            if (!end) {\n                return;\n            }\n            end.classList.remove('active');\n        });\n    }\n}\nclass DefaultTextLayerFactory {\n    /**\n     * @param {HTMLDivElement} textLayerDiv\n     * @param {number} pageIndex\n     * @param viewport\n     * @param {PdfFindController} findController\n     * @param {boolean} enhanceTextSelection\n     * @returns {TextLayerBuilder}\n     */\n    static createTextLayerBuilder(textLayerDiv, pageIndex, viewport, findController, enhanceTextSelection = true) {\n        return new TextLayerBuilder(textLayerDiv, pageIndex, viewport, findController, enhanceTextSelection);\n    }\n}\n\nfunction rotateLeft(actualRotation) {\n    return _rotate(actualRotation, -90);\n}\nfunction rotateRight(actualRotation) {\n    return _rotate(actualRotation, 90);\n}\nfunction isValidRotation(angle) {\n    return Number.isInteger(angle) && angle % 90 === 0;\n}\nfunction _rotate(actualRotation, degrees) {\n    return (actualRotation + 360 + degrees) % 360;\n}\n\nconst CSS_UNITS = 96.0 / 72.0;\nfunction parseQueryString(query) {\n    const parts = query.split('&');\n    const params = Object.create(null);\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n        const param = parts[i].split('=');\n        const key = param[0].toLowerCase();\n        const value = param.length > 1 ? param[1] : null;\n        params[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n    return params;\n}\nfunction getVisibleElements(container, views, sortByVisibility = false, horizontal = false) {\n    const top = container.scrollTop;\n    const bottom = top + container.clientHeight;\n    const left = container.scrollLeft;\n    const right = left + container.clientWidth;\n    const visible = [];\n    const numViews = views.length;\n    let firstVisibleElementInd;\n    if (numViews === 0) {\n        firstVisibleElementInd = 0;\n    }\n    else {\n        firstVisibleElementInd = binarySearchFirstItem(views, (view) => horizontal\n            ? isElementRightAfterViewLeft(container, view.container)\n            : isElementBottomAfterViewTop(container, view.container));\n    }\n    // Please note the return value of the `binarySearchFirstItem` function when\n    // no valid element is found (hence the `firstVisibleElementInd` check below).\n    if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n        // In wrapped scrolling (or vertical scrolling with spreads), with some page\n        // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n        // condition: there can be pages with bottoms above the view top between\n        // pages with bottoms below. This function detects and corrects that error;\n        // see it for more comments.\n        firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views.map((v) => v.container), top);\n    }\n    // lastEdge acts as a cutoff for us to stop looping, because we know all\n    // subsequent pages will be hidden.\n    //\n    // When using wrapped scrolling or vertical scrolling with spreads, we can't\n    // simply stop the first time we reach a page below the bottom of the view;\n    // the tops of subsequent pages on the same row could still be visible. In\n    // horizontal scrolling, we don't have that issue, so we can stop as soon as\n    // we pass `right`, without needing the code below that handles the -1 case.\n    let lastEdge = horizontal ? right : -1;\n    for (let i = firstVisibleElementInd; i < numViews; i++) {\n        const view = views[i];\n        const pageContainer = view.container;\n        const currentWidth = pageContainer.offsetLeft + pageContainer.clientLeft;\n        const currentHeight = pageContainer.offsetTop + pageContainer.clientTop;\n        const viewWidth = pageContainer.clientWidth;\n        const viewHeight = pageContainer.clientHeight;\n        const viewRight = currentWidth + viewWidth;\n        const viewBottom = currentHeight + viewHeight;\n        if (lastEdge === -1) {\n            // As commented above, this is only needed in non-horizontal cases.\n            // Setting lastEdge to the bottom of the first page that is partially\n            // visible ensures that the next page fully below lastEdge is on the\n            // next row, which has to be fully hidden along with all subsequent rows.\n            if (viewBottom >= bottom) {\n                lastEdge = viewBottom;\n            }\n        }\n        else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n            break;\n        }\n        if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n            continue;\n        }\n        const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n        const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n        // tslint:disable-next-line:no-bitwise\n        const percent = (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) / viewHeight / viewWidth) | 0;\n        visible.push({\n            id: view.id,\n            x: currentWidth,\n            y: currentHeight,\n            view,\n            percent,\n        });\n    }\n    const first = visible[0];\n    const last = visible[visible.length - 1];\n    if (sortByVisibility) {\n        visible.sort(function (a, b) {\n            const pc = a.percent - b.percent;\n            if (Math.abs(pc) > 0.001) {\n                return -pc;\n            }\n            return a.id - b.id; // ensure stability\n        });\n    }\n    return { first: first, last: last, views: visible };\n}\nfunction binarySearchFirstItem(items, condition) {\n    let minIndex = 0;\n    let maxIndex = items.length - 1;\n    if (items.length === 0 || !condition(items[maxIndex])) {\n        return items.length;\n    }\n    if (condition(items[minIndex])) {\n        return minIndex;\n    }\n    while (minIndex < maxIndex) {\n        // tslint:disable-next-line:no-bitwise\n        const currentIndex = (minIndex + maxIndex) >> 1;\n        const currentItem = items[currentIndex];\n        if (condition(currentItem)) {\n            maxIndex = currentIndex;\n        }\n        else {\n            minIndex = currentIndex + 1;\n        }\n    }\n    return minIndex; /* === maxIndex */\n}\nfunction isElementBottomAfterViewTop(element, view) {\n    const viewBottom = view.offsetTop + view.clientTop + view.clientHeight;\n    return viewBottom > element.scrollTop;\n}\nfunction isElementRightAfterViewLeft(element, view) {\n    const viewRight = view.offsetLeft + view.clientLeft + view.clientWidth;\n    return viewRight > element.scrollLeft;\n}\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n    // binarySearchFirstItem's assumption is that the input is ordered, with only\n    // one index where the conditions flips from false to true: [false ...,\n    // true...]. With vertical scrolling and spreads, it is possible to have\n    // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n    // similar sequence, with many more mixed true and false in the middle.\n    //\n    // So there is no guarantee that the binary search yields the index of the\n    // first visible element. It could have been any of the other visible elements\n    // that were preceded by a hidden element.\n    // Of course, if either this element or the previous (hidden) element is also\n    // the first element, there's nothing to worry about.\n    if (index < 2) {\n        return index;\n    }\n    // That aside, the possible cases are represented below.\n    //\n    //     ****  = fully hidden\n    //     A*B*  = mix of partially visible and/or hidden pages\n    //     CDEF  = fully visible\n    //\n    // (1) Binary search could have returned A, in which case we can stop.\n    // (2) Binary search could also have returned B, in which case we need to\n    // check the whole row.\n    // (3) Binary search could also have returned C, in which case we need to\n    // check the whole previous row.\n    //\n    // There's one other possibility:\n    //\n    //     ****  = fully hidden\n    //     ABCD  = mix of fully and/or partially visible pages\n    //\n    // (4) Binary search could only have returned A.\n    // Initially assume that we need to find the beginning of the current row\n    // (case 1, 2, or 4), which means finding a page that is above the current\n    // page's top. If the found page is partially visible, we're definitely not in\n    // case 3, and this assumption is correct.\n    let elt = views[index];\n    let pageTop = elt.offsetTop + elt.clientTop;\n    if (pageTop >= top) {\n        // The found page is fully visible, so we're actually either in case 3 or 4,\n        // and unfortunately we can't tell the difference between them without\n        // scanning the entire previous row, so we just conservatively assume that\n        // we do need to backtrack to that row. In both cases, the previous page is\n        // in the previous row, so use its top instead.\n        elt = views[index - 1];\n        pageTop = elt.offsetTop + elt.clientTop;\n    }\n    // Now we backtrack to the first page that still has its bottom below\n    // `pageTop`, which is the top of a page in the first visible row (unless\n    // we're in case 4, in which case it's the row before that).\n    // `index` is found by binary search, so the page at `index - 1` is\n    // invisible and we can start looking for potentially visible pages from\n    // `index - 2`. (However, if this loop terminates on its first iteration,\n    // which is the case when pages are stacked vertically, `index` should remain\n    // unchanged, so we use a distinct loop variable.)\n    for (let i = index - 2; i >= 0; --i) {\n        elt = views[i];\n        if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n            // We have reached the previous row, so stop now.\n            // This loop is expected to terminate relatively quickly because the\n            // number of pages per row is expected to be small.\n            break;\n        }\n        index = i;\n    }\n    return index;\n}\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n        ctx.mozBackingStorePixelRatio ||\n        ctx.msBackingStorePixelRatio ||\n        ctx.oBackingStorePixelRatio ||\n        ctx.backingStorePixelRatio ||\n        1;\n    const pixelRatio = devicePixelRatio / backingStoreRatio;\n    return {\n        sx: pixelRatio,\n        sy: pixelRatio,\n        scaled: pixelRatio !== 1,\n    };\n}\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n    // Fast paths for int numbers or their inversions.\n    if (Math.floor(x) === x) {\n        return [x, 1];\n    }\n    const xinv = 1 / x;\n    const limit = 8;\n    if (xinv > limit) {\n        return [1, limit];\n    }\n    else if (Math.floor(xinv) === xinv) {\n        return [1, xinv];\n    }\n    const x_ = x > 1 ? xinv : x;\n    // a/b and c/d are neighbours in Farey sequence.\n    let a = 0, b = 1, c = 1, d = 1;\n    // Limiting search to order 8.\n    while (true) {\n        // Generating next term in sequence (order of q).\n        const p = a + c, q = b + d;\n        if (q > limit) {\n            break;\n        }\n        if (x_ <= p / q) {\n            c = p;\n            d = q;\n        }\n        else {\n            a = p;\n            b = q;\n        }\n    }\n    let result;\n    // Select closest of the neighbours to x.\n    if (x_ - a / b < c / d - x_) {\n        result = x_ === x ? [a, b] : [b, a];\n    }\n    else {\n        result = x_ === x ? [c, d] : [d, c];\n    }\n    return result;\n}\nfunction roundToDivide(elem, div) {\n    const r = elem % div;\n    return r === 0 ? elem : Math.round(elem - r + div);\n}\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n    const debounceScroll = () => {\n        if (rAF) {\n            return;\n        }\n        // schedule an invocation of scroll for next animation frame.\n        rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n            rAF = null;\n            const currentX = viewAreaElement.scrollLeft;\n            const lastX = state.lastX;\n            if (currentX !== lastX) {\n                state.right = currentX > lastX;\n            }\n            state.lastX = currentX;\n            const currentY = viewAreaElement.scrollTop;\n            const lastY = state.lastY;\n            if (currentY !== lastY) {\n                state.down = currentY > lastY;\n            }\n            state.lastY = currentY;\n            callback(state);\n        });\n    };\n    const state = {\n        right: true,\n        down: true,\n        lastX: viewAreaElement.scrollLeft,\n        lastY: viewAreaElement.scrollTop,\n        _eventHandler: debounceScroll,\n    };\n    let rAF = null;\n    viewAreaElement.addEventListener('scroll', debounceScroll, true);\n    return state;\n}\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param parent - The element containing the item we want to make visible\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nfunction scrollIntoView(element, parent, spot, skipOverflowHiddenElements = false) {\n    // Assuming offsetParent is available (it's not available when viewer is in\n    // hidden iframe or object). We have to scroll: if the offsetParent is not set\n    // producing the error. See also animationStarted.\n    parent = parent || element.offsetParent;\n    if (!parent) {\n        console.error('offsetParent is not set -- cannot scroll');\n        return;\n    }\n    let offsetY = element.offsetTop + element.clientTop - parent.offsetTop;\n    let offsetX = element.offsetLeft + element.clientLeft - parent.offsetLeft;\n    while ((parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth) ||\n        (skipOverflowHiddenElements && getComputedStyle(parent).overflow === 'hidden')) {\n        if (parent.dataset._scaleY) {\n            offsetY /= parent.dataset._scaleY;\n            offsetX /= parent.dataset._scaleX;\n        }\n        offsetY += parent.offsetTop;\n        offsetX += parent.offsetLeft;\n        parent = parent.offsetParent;\n        if (!parent) {\n            return; // no need to scroll\n        }\n    }\n    if (spot) {\n        if (spot.top !== undefined) {\n            offsetY += spot.top;\n        }\n        if (spot.left !== undefined) {\n            offsetX += spot.left;\n            parent.scrollLeft = offsetX;\n        }\n    }\n    parent.scrollTop = offsetY;\n}\nfunction isPortraitOrientation(size) {\n    return size.width <= size.height;\n}\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPDFFileNameFromURL(url, defaultFilename = 'document.pdf') {\n    if (typeof url !== 'string') {\n        return defaultFilename;\n    }\n    if (isDataSchema(url)) {\n        console.warn('getPDFFileNameFromURL: ' + 'ignoring \"data:\" URL for performance reasons.');\n        return defaultFilename;\n    }\n    const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n    //            SCHEME        HOST         1.PATH  2.QUERY   3.REF\n    // Pattern to get last matching NAME.pdf\n    const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n    const splitURI = reURI.exec(url);\n    let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n    if (suggestedFilename) {\n        suggestedFilename = suggestedFilename[0];\n        if (suggestedFilename.includes('%')) {\n            // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n            try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n            }\n            catch (ex) {\n                // Possible (extremely rare) errors:\n                // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n                // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n            }\n        }\n    }\n    return suggestedFilename || defaultFilename;\n}\nfunction isDataSchema(url) {\n    let i = 0;\n    const ii = url.length;\n    while (i < ii && url[i].trim() === '') {\n        i++;\n    }\n    return url.substring(i, i + 5).toLowerCase() === 'data:';\n}\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nfunction getPageSizeMilliliters({ view, userUnit, rotate }) {\n    const [x1, y1, x2, y2] = view;\n    // We need to take the page rotation into account as well.\n    const changeOrientation = rotate % 180 !== 0;\n    const width = ((x2 - x1) / 72) * userUnit;\n    const height = ((y2 - y1) / 72) * userUnit;\n    // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n    const sizeMillimeters = {\n        width: Math.round(width * 25.4 * 10) / 10,\n        height: Math.round(height * 25.4 * 10) / 10,\n    };\n    return {\n        width: changeOrientation ? sizeMillimeters.height : sizeMillimeters.width,\n        height: changeOrientation ? sizeMillimeters.width : sizeMillimeters.height,\n    };\n}\n\nvar FindState;\n(function (FindState) {\n    FindState[FindState[\"FOUND\"] = 0] = \"FOUND\";\n    FindState[FindState[\"NOT_FOUND\"] = 1] = \"NOT_FOUND\";\n    FindState[FindState[\"WRAPPED\"] = 2] = \"WRAPPED\";\n    FindState[FindState[\"PENDING\"] = 3] = \"PENDING\";\n})(FindState || (FindState = {}));\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\nconst CHARACTERS_TO_NORMALIZE = {\n    '\\u2018': \"'\",\n    '\\u2019': \"'\",\n    '\\u201A': \"'\",\n    '\\u201B': \"'\",\n    '\\u201C': '\"',\n    '\\u201D': '\"',\n    '\\u201E': '\"',\n    '\\u201F': '\"',\n    '\\u00BC': '1/4',\n    '\\u00BD': '1/2',\n    '\\u00BE': '3/4',\n};\nlet normalizationRegex = null;\nfunction normalize(text) {\n    if (!normalizationRegex) {\n        // Compile the regular expression for text normalization once.\n        const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join('');\n        normalizationRegex = new RegExp(`[${replace}]`, 'g');\n    }\n    return text.replace(normalizationRegex, function (ch) {\n        return CHARACTERS_TO_NORMALIZE[ch];\n    });\n}\nclass PdfFindController {\n    constructor() {\n        this._extractTextPromises = [];\n        this._pageContents = []; // Stores the normalized text for each page.\n        this._matchesCountTotal = 0;\n        this._pagesToSearch = null;\n        // Events\n        this.searchComplete = new Subject();\n        this.searchState = new Subject();\n        this._reset();\n    }\n    get highlightMatches() {\n        return this._highlightMatches;\n    }\n    get pageMatches() {\n        return this._pageMatches;\n    }\n    get pageMatchesLength() {\n        return this._pageMatchesLength;\n    }\n    get selected() {\n        return this._selected;\n    }\n    get state() {\n        return this._state;\n    }\n    /**\n     * Set a reference to the PDF document in order to search it.\n     * Note that searching is not possible if this method is not called.\n     *\n     * @param pdfDocument - The PDF document to search.\n     */\n    setDocument(pdfDocument) {\n        if (this._pdfDocument) {\n            this._reset();\n        }\n        if (!pdfDocument) {\n            return;\n        }\n        this._pdfDocument = pdfDocument;\n        this._firstPageCapability.resolve();\n    }\n    executeCommand(cmd, state) {\n        if (!state) {\n            return;\n        }\n        const pdfDocument = this._pdfDocument;\n        if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n            this._dirtyMatch = true;\n        }\n        this._state = state;\n        if (cmd !== 'findhighlightallchange') {\n            this._updateUIState(FindState.PENDING);\n        }\n        this._firstPageCapability.promise.then(() => {\n            // If the document was closed before searching began, or if the search\n            // operation was relevant for a previously opened document, do nothing.\n            if (!this._pdfDocument || (pdfDocument && this._pdfDocument !== pdfDocument)) {\n                return;\n            }\n            this._extractText();\n            const findbarClosed = !this._highlightMatches;\n            const pendingTimeout = !!this._findTimeout;\n            if (this._findTimeout) {\n                clearTimeout(this._findTimeout);\n                this._findTimeout = null;\n            }\n            if (cmd === 'find') {\n                // Trigger the find action with a small delay to avoid starting the\n                // search when the user is still typing (saving resources).\n                this._findTimeout = setTimeout(() => {\n                    this._nextMatch();\n                    this._findTimeout = null;\n                }, FIND_TIMEOUT);\n            }\n            else if (this._dirtyMatch) {\n                // Immediately trigger searching for non-'find' operations, when the\n                // current state needs to be reset and matches re-calculated.\n                this._nextMatch();\n            }\n            else if (cmd === 'findagain') {\n                this._nextMatch();\n                // When the findbar was previously closed, and `highlightAll` is set,\n                // ensure that the matches on all active pages are highlighted again.\n                if (findbarClosed && this._state.highlightAll) {\n                    this._updateAllPages();\n                }\n            }\n            else if (cmd === 'findhighlightallchange') {\n                // If there was a pending search operation, synchronously trigger a new\n                // search *first* to ensure that the correct matches are highlighted.\n                if (pendingTimeout) {\n                    this._nextMatch();\n                }\n                else {\n                    this._highlightMatches = true;\n                }\n                this._updateAllPages(); // Update the highlighting on all active pages.\n            }\n            else {\n                this._nextMatch();\n            }\n        });\n    }\n    scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n        if (!this._scrollMatches || !element) {\n            return;\n        }\n        else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n            return;\n        }\n        else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n            return;\n        }\n        this._scrollMatches = false; // Ensure that scrolling only happens once.\n        const spot = {\n            top: MATCH_SCROLL_OFFSET_TOP,\n            left: MATCH_SCROLL_OFFSET_LEFT,\n        };\n        scrollIntoView(element, null, spot, true);\n    }\n    _reset() {\n        this._highlightMatches = false;\n        this._scrollMatches = false;\n        this._pdfDocument = null;\n        this._pageMatches = [];\n        this._pageMatchesLength = [];\n        this._state = null;\n        // Currently selected match.\n        this._selected = {\n            pageIdx: -1,\n            matchIdx: -1,\n        };\n        // Where the find algorithm currently is in the document.\n        this._offset = {\n            pageIdx: null,\n            matchIdx: null,\n            wrapped: false,\n        };\n        this._extractTextPromises = [];\n        this._pageContents = []; // Stores the normalized text for each page.\n        this._matchesCountTotal = 0;\n        this._pagesToSearch = null;\n        this._pendingFindMatches = Object.create(null);\n        this._resumePageIdx = null;\n        this._dirtyMatch = false;\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n        this._firstPageCapability = createPromiseCapability();\n    }\n    /**\n     * @type {string} The (current) normalized search query.\n     */\n    get _query() {\n        if (this._state.query !== this._rawQuery) {\n            this._rawQuery = this._state.query;\n            this._normalizedQuery = normalize(this._state.query);\n        }\n        return this._normalizedQuery;\n    }\n    _shouldDirtyMatch(cmd, state) {\n        // When the search query changes, regardless of the actual search command\n        // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n        if (state.query !== this._state.query) {\n            return true;\n        }\n        switch (cmd) {\n            case 'findagain':\n                const pageNumber = this._selected.pageIdx + 1;\n                const linkService = this.linkService;\n                // Only treat a 'findagain' event as a new search operation when it's\n                // *absolutely* certain that the currently selected match is no longer\n                // visible, e.g. as a result of the user scrolling in the document.\n                //\n                // NOTE: If only a simple `this._linkService.page` check was used here,\n                // there's a risk that consecutive 'findagain' operations could \"skip\"\n                // over matches at the top/bottom of pages thus making them completely\n                // inaccessible when there's multiple pages visible in the viewer.\n                return (pageNumber >= 1 &&\n                    pageNumber <= linkService.pagesCount &&\n                    pageNumber !== linkService.page &&\n                    !linkService.isPageVisible(pageNumber));\n            case 'findhighlightallchange':\n                return false;\n        }\n        return true;\n    }\n    /**\n     * Helper for multi-term search that fills the `matchesWithLength` array\n     * and handles cases where one search term includes another search term (for\n     * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n     * the `matches` and keeps elements with a longer match length.\n     */\n    _prepareMatches(matchesWithLength, matches, matchesLength) {\n        // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n        // objects on increasing index first and on the length otherwise.\n        matchesWithLength.sort((a, b) => (a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match));\n        for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n            if (this._isSubTerm(matchesWithLength, i)) {\n                continue;\n            }\n            matches.push(matchesWithLength[i].match);\n            matchesLength.push(matchesWithLength[i].matchLength);\n        }\n    }\n    _isSubTerm(matchesWithLength, currentIndex) {\n        const currentElem = matchesWithLength[currentIndex];\n        const nextElem = matchesWithLength[currentIndex + 1];\n        // Check for cases like \"TAMEd TAME\".\n        if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n            currentElem.skipped = true;\n            return true;\n        }\n        // Check for cases like \"thIS IS\".\n        for (let i = currentIndex - 1; i >= 0; i--) {\n            const prevElem = matchesWithLength[i];\n            if (prevElem.skipped) {\n                continue;\n            }\n            if (prevElem.match + prevElem.matchLength < currentElem.match) {\n                break;\n            }\n            if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n                currentElem.skipped = true;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Determine if the search query constitutes a \"whole word\", by comparing the\n     * first/last character type with the preceding/following character type.\n     */\n    _isEntireWord(content, startIdx, length) {\n        if (startIdx > 0) {\n            const first = content.charCodeAt(startIdx);\n            const limit = content.charCodeAt(startIdx - 1);\n            if (getCharacterType(first) === getCharacterType(limit)) {\n                return false;\n            }\n        }\n        const endIdx = startIdx + length - 1;\n        if (endIdx < content.length - 1) {\n            const last = content.charCodeAt(endIdx);\n            const limit = content.charCodeAt(endIdx + 1);\n            if (getCharacterType(last) === getCharacterType(limit)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n        const matches = [];\n        const queryLen = query.length;\n        let matchIdx = -queryLen;\n        while (true) {\n            matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n            if (matchIdx === -1) {\n                break;\n            }\n            if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n                continue;\n            }\n            matches.push(matchIdx);\n        }\n        this._pageMatches[pageIndex] = matches;\n    }\n    _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n        const matchesWithLength = [];\n        // Divide the query into pieces and search for text in each piece.\n        const queryArray = query.match(/\\S+/g);\n        for (let i = 0, len = queryArray.length; i < len; i++) {\n            const subquery = queryArray[i];\n            const subqueryLen = subquery.length;\n            let matchIdx = -subqueryLen;\n            while (true) {\n                matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n                if (matchIdx === -1) {\n                    break;\n                }\n                if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n                    continue;\n                }\n                // Other searches do not, so we store the length.\n                matchesWithLength.push({\n                    match: matchIdx,\n                    matchLength: subqueryLen,\n                    skipped: false,\n                });\n            }\n        }\n        // Prepare arrays for storing the matches.\n        this._pageMatchesLength[pageIndex] = [];\n        this._pageMatches[pageIndex] = [];\n        // Sort `matchesWithLength`, remove intersecting terms and put the result\n        // into the two arrays.\n        this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n    }\n    _calculateMatch(pageIndex) {\n        let pageContent = this._pageContents[pageIndex];\n        let query = this._query;\n        const { caseSensitive, entireWord, phraseSearch } = this._state;\n        if (query.length === 0) {\n            // Do nothing: the matches should be wiped out already.\n            return;\n        }\n        if (!caseSensitive) {\n            pageContent = pageContent.toLowerCase();\n            query = query.toLowerCase();\n        }\n        if (phraseSearch) {\n            this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n        }\n        else {\n            this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n        }\n        // When `highlightAll` is set, ensure that the matches on previously\n        // rendered (and still active) pages are correctly highlighted.\n        if (this._state.highlightAll) {\n            this._updatePage(pageIndex);\n        }\n        if (this._resumePageIdx === pageIndex) {\n            this._resumePageIdx = null;\n            this._nextPageMatch();\n        }\n        // Update the match count.\n        const pageMatchesCount = this._pageMatches[pageIndex].length;\n        if (pageMatchesCount > 0) {\n            this._matchesCountTotal += pageMatchesCount;\n            this._updateUIResultsCount();\n        }\n    }\n    _extractText() {\n        // Perform text extraction once if this method is called multiple times.\n        if (this._extractTextPromises.length > 0) {\n            return;\n        }\n        let promise = Promise.resolve();\n        for (let i = 0, ii = this.linkService.pagesCount; i < ii; i++) {\n            const extractTextCapability = createPromiseCapability();\n            this._extractTextPromises[i] = extractTextCapability.promise;\n            promise = promise.then(() => {\n                return this._pdfDocument\n                    .getPage(i + 1)\n                    .then((pdfPage) => {\n                    return pdfPage.getTextContent({\n                        normalizeWhitespace: true,\n                    });\n                })\n                    .then((textContent) => {\n                    const textItems = textContent.items;\n                    const strBuf = [];\n                    for (let j = 0, jj = textItems.length; j < jj; j++) {\n                        strBuf.push(textItems[j].str);\n                    }\n                    // Store the normalized page content (text items) as one string.\n                    this._pageContents[i] = normalize(strBuf.join(''));\n                    extractTextCapability.resolve(i);\n                }, (reason) => {\n                    console.error(`Unable to get text content for page ${i + 1}`, reason);\n                    // Page error -- assuming no text content.\n                    this._pageContents[i] = '';\n                    extractTextCapability.resolve(i);\n                });\n            });\n        }\n    }\n    _updatePage(index) {\n        if (this._scrollMatches && this._selected.pageIdx === index) {\n            // If the page is selected, scroll the page into view, which triggers\n            // rendering the page, which adds the text layer. Once the text layer\n            // is built, it will attempt to scroll the selected match into view.\n            this.linkService.page = index + 1;\n        }\n        this._pdfPageContainer.updateMatches(index);\n    }\n    _updateAllPages() {\n        this._pdfPageContainer.updateMatches(-1);\n    }\n    _nextMatch() {\n        const previous = this._state.findPrevious;\n        const currentPageIndex = this.linkService.page - 1;\n        const numPages = this.linkService.pagesCount;\n        this._highlightMatches = true;\n        if (this._dirtyMatch) {\n            // Need to recalculate the matches, reset everything.\n            this._dirtyMatch = false;\n            this._selected.pageIdx = this._selected.matchIdx = -1;\n            this._offset.pageIdx = currentPageIndex;\n            this._offset.matchIdx = null;\n            this._offset.wrapped = false;\n            this._resumePageIdx = null;\n            this._pageMatches.length = 0;\n            this._pageMatchesLength.length = 0;\n            this._matchesCountTotal = 0;\n            this._updateAllPages(); // Wipe out any previously highlighted matches.\n            for (let i = 0; i < numPages; i++) {\n                // Start finding the matches as soon as the text is extracted.\n                if (this._pendingFindMatches[i] === true) {\n                    continue;\n                }\n                this._pendingFindMatches[i] = true;\n                this._extractTextPromises[i].then((pageIdx) => {\n                    delete this._pendingFindMatches[pageIdx];\n                    this._calculateMatch(pageIdx);\n                });\n            }\n        }\n        // If there's no query there's no point in searching.\n        if (this._query === '') {\n            this._updateUIState(FindState.FOUND);\n            return;\n        }\n        // If we're waiting on a page, we return since we can't do anything else.\n        if (this._resumePageIdx) {\n            return;\n        }\n        const offset = this._offset;\n        // Keep track of how many pages we should maximally iterate through.\n        this._pagesToSearch = numPages;\n        // If there's already a `matchIdx` that means we are iterating through a\n        // page's matches.\n        if (offset.matchIdx !== null) {\n            const numPageMatches = this._pageMatches[offset.pageIdx].length;\n            if ((!previous && offset.matchIdx + 1 < numPageMatches) || (previous && offset.matchIdx > 0)) {\n                // The simple case; we just have advance the matchIdx to select\n                // the next match on the page.\n                offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n                this._updateMatch(/* found = */ true);\n                return;\n            }\n            // We went beyond the current page's matches, so we advance to\n            // the next page.\n            this._advanceOffsetPage(previous);\n        }\n        // Start searching through the page.\n        this._nextPageMatch();\n    }\n    _matchesReady(matches) {\n        const offset = this._offset;\n        const numMatches = matches.length;\n        const previous = this._state.findPrevious;\n        if (numMatches) {\n            // There were matches for the page, so initialize `matchIdx`.\n            offset.matchIdx = previous ? numMatches - 1 : 0;\n            this._updateMatch(/* found = */ true);\n            return true;\n        }\n        // No matches, so attempt to search the next page.\n        this._advanceOffsetPage(previous);\n        if (offset.wrapped) {\n            offset.matchIdx = null;\n            if (this._pagesToSearch < 0) {\n                // No point in wrapping again, there were no matches.\n                this._updateMatch(/* found = */ false);\n                // While matches were not found, searching for a page\n                // with matches should nevertheless halt.\n                return true;\n            }\n        }\n        // Matches were not found (and searching is not done).\n        return false;\n    }\n    _nextPageMatch() {\n        if (this._resumePageIdx !== null) {\n            console.error('There can only be one pending page.');\n        }\n        let matches = null;\n        do {\n            const pageIdx = this._offset.pageIdx;\n            matches = this._pageMatches[pageIdx];\n            if (!matches) {\n                // The matches don't exist yet for processing by `_matchesReady`,\n                // so set a resume point for when they do exist.\n                this._resumePageIdx = pageIdx;\n                break;\n            }\n        } while (!this._matchesReady(matches));\n    }\n    _advanceOffsetPage(previous) {\n        const offset = this._offset;\n        const numPages = this.linkService.pagesCount;\n        offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n        offset.matchIdx = null;\n        this._pagesToSearch--;\n        if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n            offset.pageIdx = previous ? numPages - 1 : 0;\n            offset.wrapped = true;\n        }\n    }\n    _updateMatch(found = false) {\n        let state = FindState.NOT_FOUND;\n        const wrapped = this._offset.wrapped;\n        this._offset.wrapped = false;\n        if (found) {\n            const previousPage = this._selected.pageIdx;\n            this._selected.pageIdx = this._offset.pageIdx;\n            this._selected.matchIdx = this._offset.matchIdx;\n            state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n            // Update the currently selected page to wipe out any selected matches.\n            if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n                this._updatePage(previousPage);\n            }\n        }\n        this._updateUIState(state, this._state.findPrevious);\n        if (this._selected.pageIdx !== -1) {\n            // Ensure that the match will be scrolled into view.\n            this._scrollMatches = true;\n            this._updatePage(this._selected.pageIdx);\n        }\n    }\n    _requestMatchesCount() {\n        const { pageIdx, matchIdx } = this._selected;\n        let current = 0, total = this._matchesCountTotal;\n        if (matchIdx !== -1) {\n            for (let i = 0; i < pageIdx; i++) {\n                current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n            }\n            current += matchIdx + 1;\n        }\n        // When searching starts, this method may be called before the `pageMatches`\n        // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n        // temporarily broken state when the active find result doesn't make sense.\n        if (current < 1 || current > total) {\n            current = total = 0;\n        }\n        return { current, total };\n    }\n    _updateUIResultsCount() {\n        this.searchComplete.next({ matchesCount: this._requestMatchesCount() });\n    }\n    _updateUIState(state, previous) {\n        this.searchState.next({\n            state: state,\n            previous: previous,\n            matchesCount: this._requestMatchesCount(),\n        });\n    }\n    get pdfPageContainer() {\n        return this._pdfPageContainer;\n    }\n    set pdfPageContainer(value) {\n        this._pdfPageContainer = value;\n    }\n    get linkService() {\n        return this._linkService;\n    }\n    set linkService(value) {\n        this._linkService = value;\n    }\n}\nPdfFindController.ɵfac = function PdfFindController_Factory(t) { return new (t || PdfFindController)(); };\nPdfFindController.ɵprov = ɵɵdefineInjectable({ token: PdfFindController, factory: PdfFindController.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfFindController, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nconst CLEANUP_TIMEOUT = 30000;\nvar RenderingStates;\n(function (RenderingStates) {\n    RenderingStates[RenderingStates[\"INITIAL\"] = 0] = \"INITIAL\";\n    RenderingStates[RenderingStates[\"RUNNING\"] = 1] = \"RUNNING\";\n    RenderingStates[RenderingStates[\"PAUSED\"] = 2] = \"PAUSED\";\n    RenderingStates[RenderingStates[\"FINISHED\"] = 3] = \"FINISHED\";\n})(RenderingStates || (RenderingStates = {}));\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PdfRenderingQueue {\n    constructor() {\n        this.printing = false;\n        this.isThumbnailViewEnabled = false;\n        this.pdfViewer = null;\n        this.pdfThumbnailViewer = null;\n        this.onIdle = null;\n        this.highestPriorityPage = null;\n        this.idleTimeout = null;\n        this.printing = false;\n        this.isThumbnailViewEnabled = false;\n    }\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n    /**\n     * @param {PdfContainerItem} view\n     * @returns {boolean}\n     */\n    isHighestPriority(view) {\n        return this.highestPriorityPage === view.renderingId;\n    }\n    /**\n     * @param {Object} currentlyVisiblePages\n     */\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer && this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering, so check thumbnails.\n        if (this.pdfThumbnailViewer && this.pdfThumbnailViewer.forceRendering()) {\n            return;\n        }\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle, CLEANUP_TIMEOUT);\n        }\n    }\n    /**\n     * @param {Object} visible\n     * @param {Array} views\n     * @param {boolean} scrolledDown\n     */\n    getHighestPriority(visible, views, scrolledDown) {\n        /**\n         * The state has changed. Figure out which page has the highest priority to\n         * render next (if any).\n         *\n         * Priority:\n         * 1. visible pages\n         * 2. if last scrolled down, the page after the visible pages, or\n         *    if last scrolled up, the page before the visible pages\n         */\n        const visibleViews = visible.views;\n        const numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return null;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n        // All the visible views have rendered; try to render next/previous pages.\n        if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            // IDs start at 1, so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        }\n        else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n    /**\n     * @param {PdfContainerItem} view\n     * @returns {boolean}\n     */\n    isViewFinished(view) {\n        return view.renderingState === RenderingStates.FINISHED;\n    }\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * `false`.\n     *\n     * @param {PdfContainerItem} view\n     */\n    renderView(view) {\n        switch (view.renderingState) {\n            case RenderingStates.FINISHED:\n                return false;\n            case RenderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case RenderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case RenderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                view.draw().finally(() => this.renderHighestPriority());\n                break;\n        }\n        return true;\n    }\n}\nPdfRenderingQueue.ɵfac = function PdfRenderingQueue_Factory(t) { return new (t || PdfRenderingQueue)(); };\nPdfRenderingQueue.ɵprov = ɵɵdefineInjectable({ token: PdfRenderingQueue, factory: PdfRenderingQueue.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfRenderingQueue, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nclass PdfLinkService {\n    constructor() {\n        this.externalLinkEnabled = true;\n    }\n    setDocument(pdfDocument, baseUrl = null) {\n        this.baseUrl = baseUrl;\n        this.pdfDocument = pdfDocument;\n        this._pagesRefCache = Object.create(null);\n    }\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n    setHistory(pdfHistory) {\n        this.pdfHistory = pdfHistory;\n    }\n    /**\n     * @type {number}\n     */\n    get pagesCount() {\n        return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n    /**\n     * @type {number}\n     */\n    get page() {\n        return this.pdfViewer.currentPageNumber;\n    }\n    /**\n     * @param {number} value\n     */\n    set page(value) {\n        this.pdfViewer.currentPageNumber = value;\n    }\n    /**\n     * @type {number}\n     */\n    get rotation() {\n        return this.pdfViewer.pagesRotation;\n    }\n    /**\n     * @param {number} value\n     */\n    set rotation(value) {\n        this.pdfViewer.pagesRotation = value;\n    }\n    /**\n     * @param {string|Array} dest - The named, or explicit, PDF destination.\n     */\n    navigateTo(dest) {\n        const goToDestination = ({ namedDest, explicitDest }) => {\n            // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n            const destRef = explicitDest[0];\n            let pageNumber;\n            if (destRef instanceof Object) {\n                pageNumber = this._cachedPageNumber(destRef);\n                if (pageNumber === null) {\n                    // Fetch the page reference if it's not yet available. This could\n                    // only occur during loading, before all pages have been resolved.\n                    this.pdfDocument\n                        .getPageIndex(destRef)\n                        .then((pageIndex) => {\n                        this.cachePageRef(pageIndex + 1, destRef);\n                        goToDestination({ namedDest, explicitDest });\n                    })\n                        .catch(() => console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${dest}\".`));\n                    return;\n                }\n            }\n            else if (Number.isInteger(destRef)) {\n                pageNumber = destRef + 1;\n            }\n            else {\n                console.error(`PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${dest}\".`);\n                return;\n            }\n            if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n                console.error(`PDFLinkService.navigateTo: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${dest}\".`);\n                return;\n            }\n            if (this.pdfHistory) {\n                // Update the browser history before scrolling the new destination into\n                // view, to be able to accurately capture the current document position.\n                this.pdfHistory.pushCurrentPosition();\n                this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n            }\n            this.pdfViewer.scrollPageIntoView({\n                pageNumber,\n                destArray: explicitDest,\n            });\n        };\n        new Promise((resolve) => {\n            if (typeof dest === 'string') {\n                this.pdfDocument.getDestination(dest).then((destArray) => {\n                    resolve({\n                        namedDest: dest,\n                        explicitDest: destArray,\n                    });\n                });\n                return;\n            }\n            const data = {\n                namedDest: '',\n                explicitDest: dest,\n            };\n            resolve(data);\n        }).then((data) => {\n            if (!Array.isArray(data.explicitDest)) {\n                console.error(`PDFLinkService.navigateTo: \"${data.explicitDest}\" is` + ` not a valid destination array, for dest=\"${dest}\".`);\n                return;\n            }\n            goToDestination(data);\n        });\n    }\n    /**\n     * @param {string|Array} dest - The PDF destination object.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getDestinationHash(dest) {\n        if (typeof dest === 'string') {\n            return this.getAnchorUrl('#' + escape(dest));\n        }\n        if (Array.isArray(dest)) {\n            const str = JSON.stringify(dest);\n            return this.getAnchorUrl('#' + escape(str));\n        }\n        return this.getAnchorUrl('');\n    }\n    /**\n     * Prefix the full url on anchor links to make sure that links are resolved\n     * relative to the current URL instead of the one defined in <base href>.\n     * @param {string} anchor The anchor hash, including the #.\n     * @returns {string} The hyperlink to the PDF object.\n     */\n    getAnchorUrl(anchor) {\n        return (this.baseUrl || '') + anchor;\n    }\n    /**\n     * @param {string} hash\n     */\n    setHash(hash) {\n        let pageNumber, dest;\n        if (hash.includes('=')) {\n            const params = parseQueryString(hash);\n            // borrowing syntax from \"Parameters for Opening PDF Files\"\n            if ('nameddest' in params) {\n                this.navigateTo(params.nameddest);\n                return;\n            }\n            if ('page' in params) {\n                pageNumber = params.page | 0 || 1;\n            }\n            if ('zoom' in params) {\n                // Build the destination array.\n                const zoomArgs = params.zoom.split(','); // scale,left,top\n                const zoomArg = zoomArgs[0];\n                const zoomArgNumber = parseFloat(zoomArg);\n                if (!zoomArg.includes('Fit')) {\n                    // If the zoomArg is a number, it has to get divided by 100. If it's\n                    // a string, it should stay as it is.\n                    dest = [\n                        null,\n                        { name: 'XYZ' },\n                        zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n                        zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n                        zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n                    ];\n                }\n                else {\n                    if (zoomArg === 'Fit' || zoomArg === 'FitB') {\n                        dest = [null, { name: zoomArg }];\n                    }\n                    else if (zoomArg === 'FitH' || zoomArg === 'FitBH' || zoomArg === 'FitV' || zoomArg === 'FitBV') {\n                        dest = [null, { name: zoomArg }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n                    }\n                    else if (zoomArg === 'FitR') {\n                        if (zoomArgs.length !== 5) {\n                            console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n                        }\n                        else {\n                            dest = [null, { name: zoomArg }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n                        }\n                    }\n                    else {\n                        console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + 'a valid zoom value.');\n                    }\n                }\n            }\n            if (dest) {\n                this.pdfViewer.scrollPageIntoView({\n                    pageNumber: pageNumber || this.page,\n                    destArray: dest,\n                    allowNegativeOffset: true,\n                });\n            }\n            else if (pageNumber) {\n                this.page = pageNumber; // simple page\n            }\n            // Named (or explicit) destination.\n            dest = unescape(hash);\n            try {\n                dest = JSON.parse(dest);\n                if (!Array.isArray(dest)) {\n                    // Avoid incorrectly rejecting a valid named destination, such as\n                    // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n                    dest = dest.toString();\n                }\n            }\n            catch (ex) { }\n            if (typeof dest === 'string' || this.isValidExplicitDestination(dest)) {\n                this.navigateTo(dest);\n                return;\n            }\n            console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + 'a valid destination.');\n        }\n    }\n    /**\n     * @param {string} action\n     */\n    executeNamedAction(action) {\n        // See PDF reference, table 8.45 - Named action\n        switch (action) {\n            case 'GoBack':\n                if (this.pdfHistory) {\n                    this.pdfHistory.back();\n                }\n                break;\n            case 'GoForward':\n                if (this.pdfHistory) {\n                    this.pdfHistory.forward();\n                }\n                break;\n            case 'NextPage':\n                if (this.page < this.pagesCount) {\n                    this.page++;\n                }\n                break;\n            case 'PrevPage':\n                if (this.page > 1) {\n                    this.page--;\n                }\n                break;\n            case 'LastPage':\n                this.page = this.pagesCount;\n                break;\n            case 'FirstPage':\n                this.page = 1;\n                break;\n            default:\n                break; // No action according to spec\n        }\n    }\n    isValidExplicitDestination(dest) {\n        if (!Array.isArray(dest)) {\n            return false;\n        }\n        const destLength = dest.length;\n        if (destLength < 2) {\n            return false;\n        }\n        const page = dest[0];\n        if (!(typeof page === 'object' && Number.isInteger(page.num) && Number.isInteger(page.gen)) &&\n            !(Number.isInteger(page) && page >= 0)) {\n            return false;\n        }\n        const zoom = dest[1];\n        if (!(typeof zoom === 'object' && typeof zoom.name === 'string')) {\n            return false;\n        }\n        let allowNull = true;\n        switch (zoom.name) {\n            case 'XYZ':\n                if (destLength !== 5) {\n                    return false;\n                }\n                break;\n            case 'Fit':\n            case 'FitB':\n                return destLength === 2;\n            case 'FitH':\n            case 'FitBH':\n            case 'FitV':\n            case 'FitBV':\n                if (destLength !== 3) {\n                    return false;\n                }\n                break;\n            case 'FitR':\n                if (destLength !== 6) {\n                    return false;\n                }\n                allowNull = false;\n                break;\n            default:\n                return false;\n        }\n        for (let i = 2; i < destLength; i++) {\n            const param = dest[i];\n            if (!(typeof param === 'number' || (allowNull && param === null))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {number} pageNum - page number.\n     * @param {Object} pageRef - reference to the page.\n     */\n    cachePageRef(pageNum, pageRef) {\n        if (!pageRef) {\n            return;\n        }\n        const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n        this._pagesRefCache[refStr] = pageNum;\n    }\n    _cachedPageNumber(pageRef) {\n        const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n        return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n    }\n    /**\n     * @param {number} pageNumber\n     */\n    isPageVisible(pageNumber) {\n        return this.pdfViewer.isPageVisible(pageNumber);\n    }\n}\nPdfLinkService.ɵfac = function PdfLinkService_Factory(t) { return new (t || PdfLinkService)(); };\nPdfLinkService.ɵprov = ɵɵdefineInjectable({ token: PdfLinkService, factory: PdfLinkService.ɵfac });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfLinkService, [{\n        type: Injectable\n    }], null, null); })();\n\nvar PrintDPI;\n(function (PrintDPI) {\n    PrintDPI[PrintDPI[\"LOW\"] = 150] = \"LOW\";\n    PrintDPI[PrintDPI[\"MEDIUM\"] = 300] = \"MEDIUM\";\n    PrintDPI[PrintDPI[\"HIGH\"] = 600] = \"HIGH\";\n    PrintDPI[PrintDPI[\"ULTRA\"] = 1200] = \"ULTRA\";\n})(PrintDPI || (PrintDPI = {}));\nclass PdfPrintManager {\n    constructor() { }\n    print(pdfViewer, pdfDocument, pagesOverview, printDpi) {\n        if (this.activeService) {\n            console.warn('Ignored window.print() because of a pending print job.');\n            return;\n        }\n        this._pdfViewer = pdfViewer;\n        this.ensureOverlay();\n        try {\n            this._dispatchEvent('beforeprint');\n        }\n        finally {\n            if (!this.activeService) {\n                console.error('Expected print service to be initialized.');\n                this.ensureOverlay();\n            }\n            else {\n                this.layout(pagesOverview)\n                    .then(() => this.renderPages(pdfDocument, pagesOverview, printDpi).then(() => this.performPrint()))\n                    .then(() => {\n                    // aborts acts on the \"active\" print request, so we need to check\n                    // whether the print request (activeServiceOnEntry) is still active.\n                    // Without the check, an unrelated print request (created after aborting\n                    // this print request while the pages were being generated) would be\n                    // aborted.\n                    if (this.active) {\n                        this._abort();\n                    }\n                });\n            }\n        }\n    }\n    layout(pagesOverview) {\n        return new Promise((resolve) => {\n            this.throwIfInactive();\n            const body = document.querySelector('body');\n            this.printContainer = document.createElement('div');\n            this.printContainer.classList.add('docu-printable');\n            this.printContainer.style.display = 'none';\n            body.appendChild(this.printContainer);\n            body.setAttribute('data-pdf-printing', `${true}`);\n            const hasEqualPageSizes = pagesOverview.every((size) => size.width === pagesOverview[0].width && size.height === pagesOverview[0].height);\n            if (!hasEqualPageSizes) {\n                console.warn('Not all pages have the same size. The printed result may be incorrect!');\n            }\n            const pageSize = pagesOverview[0];\n            // Insert a @page + size rule to make sure that the page size is correctly\n            // set. Note that we assume that all pages have the same size, because\n            // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n            this.pageStyleSheet = document.createElement('style');\n            this.pageStyleSheet.textContent = this._addStylesForPrinting(pageSize.width, pageSize.height);\n            body.appendChild(this.pageStyleSheet);\n            resolve();\n        });\n    }\n    renderProgress(index, total) {\n        const progress = Math.round((index / total) * 100);\n        this._pdfViewer.pdfPrintProgress.next({ progress });\n    }\n    renderPages(pdfDocument, pagesOverview, printDpi) {\n        let currentPage = -1;\n        const pageCount = pagesOverview.length;\n        const renderNextPage = (resolve, reject) => {\n            this.throwIfInactive();\n            if (++currentPage >= pageCount) {\n                this.renderProgress(pageCount, pageCount);\n                resolve();\n                return;\n            }\n            const index = currentPage;\n            this.renderProgress(index, pageCount);\n            this.renderPage(pdfDocument, index + 1, pagesOverview[index], printDpi)\n                .then((page) => this.useRenderedPage(page))\n                .then(() => renderNextPage(resolve, reject), reject);\n        };\n        return new Promise(renderNextPage);\n    }\n    destroy() {\n        if (this.activeService !== this) {\n            // |activeService| cannot be replaced without calling destroy() first,\n            // so if it differs then an external consumer has a stale reference to\n            // us.\n            return;\n        }\n        const body = document.querySelector('body');\n        body.removeAttribute('data-pdfprinting');\n        this.printContainer.remove();\n        this.printContainer = null;\n        if (this.pageStyleSheet) {\n            this.pageStyleSheet.remove();\n            this.pageStyleSheet = null;\n        }\n        this.scratchCanvas.width = this.scratchCanvas.height = 0;\n        this.scratchCanvas = null;\n        this.activeService = null;\n    }\n    renderPage(pdfDocument, pageNumber, size, printDpi) {\n        const scratchCanvas = this.activeService.scratchCanvas;\n        // The size of the canvas in pixels for printing.\n        const PRINT_UNITS = printDpi / 72.0;\n        scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n        scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n        // The physical size of the img as specified by the PDF document.\n        const width = Math.floor(size.width * CSS_UNITS) + 'px';\n        const height = Math.floor(size.height * CSS_UNITS) + 'px';\n        const ctx = scratchCanvas.getContext('2d');\n        ctx.save();\n        ctx.fillStyle = 'rgb(255, 255, 255)';\n        ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n        ctx.restore();\n        return pdfDocument\n            .getPage(pageNumber)\n            .then((pdfPage) => {\n            const renderContext = {\n                canvasContext: ctx,\n                transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n                viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n                intent: 'print',\n            };\n            return pdfPage.render(renderContext).promise;\n        })\n            .then(() => ({ width, height }));\n    }\n    useRenderedPage(printItem) {\n        this.throwIfInactive();\n        const img = document.createElement('img');\n        img.style.width = printItem.width;\n        img.style.height = printItem.height;\n        const scratchCanvas = this.scratchCanvas;\n        if ('toBlob' in scratchCanvas) {\n            scratchCanvas.toBlob((blob) => (img.src = URL.createObjectURL(blob)));\n        }\n        else {\n            // @ts-ignore\n            img.src = scratchCanvas.toDataURL();\n        }\n        const wrapper = document.createElement('div');\n        wrapper.appendChild(img);\n        this.printContainer.appendChild(wrapper);\n        return new Promise((resolve, reject) => {\n            img.onload = resolve;\n            img.onerror = reject;\n        });\n    }\n    performPrint() {\n        this.throwIfInactive();\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                if (!this.active) {\n                    resolve();\n                    return;\n                }\n                this.printContainer.style.display = 'block';\n                print.call(window);\n                // Delay promise resolution in case print() was not synchronous.\n                setTimeout(resolve, 20); // Tidy-up.\n            }, 0);\n        });\n    }\n    ensureOverlay() {\n        if (!this.overlayPromise) {\n            this.overlayPromise = new Promise((resolve) => resolve());\n        }\n        this.scratchCanvas = document.createElement('canvas');\n        this.activeService = this;\n        return this.overlayPromise;\n    }\n    throwIfInactive() {\n        if (!this.active) {\n            throw new Error('This print request was cancelled or completed.');\n        }\n    }\n    _dispatchEvent(eventType) {\n        const event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventType, false, false, 'custom');\n        window.dispatchEvent(event);\n    }\n    _abort() {\n        if (this.activeService) {\n            this.destroy();\n        }\n    }\n    _addStylesForPrinting(width, height) {\n        // Insert a @page + size rule to make sure that the page size is correctly\n        // set. Note that we assume that all pages have the same size, because\n        // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n        // \"size:<width> <height>\" is what we need. But also add \"A4\" because\n        // Firefox incorrectly reports support for the other value.\n        const pageStyle = '@supports ((size:A4) and (size:1pt 1pt)) {' +\n            '@page { size: ' +\n            width +\n            'pt ' +\n            height +\n            'pt;' +\n            ' margin: 0; }' +\n            '}';\n        // Print styles for the whole document to avoid getting non related pdf elements from the DOM\n        const documentStyles = '@media print {' +\n            '* { margin: 0; padding: 0; }' +\n            'body > *:not(.mnj-printable) { display: none; }' +\n            '.mnj-printable { height: 100%; }' +\n            '.mnj-printable > div { ' +\n            'position: relative; top: 0; left: 0; width: 1px; height: 1px; overflow: visible; ' +\n            'page-break-after: always; page-break-inside: avoid;' +\n            '}' +\n            '.mnj-printable canvas, .mnj-printable img { display: block; }';\n        return pageStyle + documentStyles;\n    }\n    get active() {\n        return this === this.activeService;\n    }\n}\nPdfPrintManager.ɵfac = function PdfPrintManager_Factory(t) { return new (t || PdfPrintManager)(); };\nPdfPrintManager.ɵprov = ɵɵdefineInjectable({ token: PdfPrintManager, factory: PdfPrintManager.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfPrintManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nclass PdfContainer {\n    constructor(renderingQueue) {\n        this.renderingQueue = renderingQueue;\n        this._pageLabels = null;\n        this._pagesRequests = new WeakMap();\n    }\n    withRenderer(renderer) {\n        this.renderer = renderer;\n        return this;\n    }\n    _resetView() {\n        this.items = [];\n        this._currentPageNumber = 1;\n        this._pageLabels = null;\n        this._pagesRotation = 0;\n        this._pagesRequests = new WeakMap();\n        // Remove children from the DOM\n        this.container.textContent = '';\n    }\n    cleanup() {\n        this.cancelRendering();\n        this.items.forEach((i) => i.reset());\n        this.setDocument(null);\n    }\n    cancelRendering() {\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            if (this.items[i]) {\n                this.items[i].cancelRendering();\n            }\n        }\n    }\n    /**\n     * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n     * @private\n     */\n    setPageLabels(labels) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        if (!labels) {\n            this._pageLabels = null;\n        }\n        else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n            this._pageLabels = null;\n            console.error('PDFThumbnailViewer_setPageLabels: Invalid page labels.');\n        }\n        else {\n            this._pageLabels = labels;\n        }\n        // Update all the `PDFThumbnailView` instances.\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            const label = this._pageLabels && this._pageLabels[i];\n            this.items[i].setPageLabel(label);\n        }\n    }\n    _ensurePdfPageLoaded(itemView) {\n        if (itemView.pdfPage) {\n            return Promise.resolve(itemView.pdfPage);\n        }\n        if (this._pagesRequests.has(itemView)) {\n            return this._pagesRequests.get(itemView);\n        }\n        const promise = this.pdfDocument\n            .getPage(itemView.id)\n            .then((pdfPage) => {\n            if (!itemView.pdfPage) {\n                itemView.setPdfPage(pdfPage);\n            }\n            this._pagesRequests.delete(itemView);\n            return pdfPage;\n        })\n            .catch((reason) => {\n            console.error('Unable to get page for page view', reason);\n            // Page error -- there is nothing that can be done.\n            this._pagesRequests.delete(itemView);\n        });\n        this._pagesRequests.set(itemView, promise);\n        return promise;\n    }\n}\nclass PdfContainerItem {\n    constructor(id, defaultViewport, renderingQueue, renderer) {\n        this.id = id;\n        this.defaultViewport = defaultViewport;\n        this.renderingQueue = renderingQueue;\n        this.renderer = renderer;\n        this.rotation = 0;\n        this._renderingState = RenderingStates.INITIAL;\n        this._viewport = defaultViewport;\n        this.pdfPageRotate = defaultViewport.rotation;\n    }\n    get pdfPage() {\n        return this._pdfPage;\n    }\n    get container() {\n        return this._container;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    get renderingState() {\n        return this._renderingState;\n    }\n    get width() {\n        return this.viewport.width;\n    }\n    get height() {\n        return this.viewport.height;\n    }\n}\n\nclass PdfPageRef extends PdfContainerItem {\n    // TODO move page description params to each PdfPageRef to print pdf with different page sizes\n    constructor(pagesContainer, id, defaultViewport, findController, linkService, downloadManager, renderingQueue, renderer) {\n        super(id, defaultViewport, renderingQueue, renderer);\n        this.pagesContainer = pagesContainer;\n        this.id = id;\n        this.defaultViewport = defaultViewport;\n        this.findController = findController;\n        this.linkService = linkService;\n        this.downloadManager = downloadManager;\n        this.renderingQueue = renderingQueue;\n        this.renderer = renderer;\n        this.scaleNumber = defaultViewport.scale;\n        this.renderingQueue = renderingQueue;\n        this._container = this.createItemContainer(defaultViewport);\n        this.pagesContainer.appendChild(this.container);\n    }\n    setPdfPage(page) {\n        this._pdfPage = page;\n        this.pdfPageRotate = page.rotate;\n        const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n        this._viewport = page.getViewport({\n            scale: this.scaleNumber,\n            rotation: totalRotation,\n        });\n        this.stats = page.stats;\n        this.reset();\n    }\n    destroy() {\n        this.reset();\n        if (this._pdfPage) {\n            this._pdfPage.cleanup();\n        }\n    }\n    draw() {\n        if (this.renderingState !== RenderingStates.INITIAL) {\n            console.error('Must be in new state before drawing');\n            this.reset(); // Ensure that we reset all state to prevent issues.\n        }\n        if (!this.pdfPage) {\n            this._renderingState = RenderingStates.FINISHED;\n            return Promise.reject(new Error('Page is not loaded'));\n        }\n        this._renderingState = RenderingStates.RUNNING;\n        const pdfPage = this.pdfPage;\n        const div = this.container;\n        // Wrap the canvas so that if it has a CSS transform for high DPI the\n        // overflow will be hidden in Firefox.\n        const canvasWrapper = this._getOrBuildCanvas();\n        if (this._annotationLayer && this._annotationLayer.div) {\n            // The annotation layer needs to stay on top.\n            div.insertBefore(canvasWrapper, this._annotationLayer.div);\n        }\n        else {\n            div.appendChild(canvasWrapper);\n        }\n        const textLayerDiv = this._getOrBuildTextLayer();\n        if (this._annotationLayer && this._annotationLayer.div) {\n            // The annotation layer needs to stay on top.\n            div.insertBefore(textLayerDiv, this._annotationLayer.div);\n        }\n        else {\n            div.appendChild(textLayerDiv);\n        }\n        this._textLayer = DefaultTextLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.findController);\n        let renderContinueCallback = null;\n        if (this.renderingQueue) {\n            renderContinueCallback = (cont) => {\n                if (!this.renderingQueue.isHighestPriority(this)) {\n                    this._renderingState = RenderingStates.PAUSED;\n                    this.resume = () => {\n                        this._renderingState = RenderingStates.RUNNING;\n                        cont();\n                    };\n                    return;\n                }\n                cont();\n            };\n        }\n        const finishPaintTask = (error) => __awaiter(this, void 0, void 0, function* () {\n            // The paintTask may have been replaced by a new one, so only remove\n            // the reference to the paintTask if it matches the one that is\n            // triggering this callback.\n            if (paintTask === this.paintTask) {\n                this.paintTask = null;\n            }\n            if (error instanceof RenderingCancelledException) {\n                this.error = null;\n                return;\n            }\n            this._renderingState = RenderingStates.FINISHED;\n            this.error = error;\n            if (error) {\n                throw error;\n            }\n        });\n        const paintTask = this.paintOnCanvas(canvasWrapper);\n        paintTask.onRenderContinue = renderContinueCallback;\n        this.paintTask = paintTask;\n        const resultPromise = paintTask.promise.then(() => finishPaintTask(null).then(() => {\n            if (this._textLayer) {\n                const readableStream = pdfPage.streamTextContent({\n                    normalizeWhitespace: true,\n                });\n                this._textLayer.setTextContentStream(readableStream);\n                this._textLayer.render();\n            }\n        }), (reason) => finishPaintTask(reason));\n        if (!this._annotationLayer) {\n            this._annotationLayer = DefaultAnnotationLayerFactory.createAnnotationLayerBuilder(this.container, pdfPage, this.linkService, this.downloadManager);\n        }\n        this._annotationLayer.render(this.viewport);\n        div.setAttribute('data-loaded', `${true}`);\n        return resultPromise;\n    }\n    paintOnCanvas(canvasWrapper) {\n        const renderCapability = createPromiseCapability();\n        const result = {\n            promise: renderCapability.promise,\n            onRenderContinue(cont) {\n                cont();\n            },\n            cancel() {\n                renderTask.cancel();\n            },\n        };\n        const viewport = this.viewport;\n        const canvas = canvasWrapper;\n        // Keep the canvas hidden until the first draw callback, or until drawing\n        // is complete when `!this.renderingQueue`, to prevent black flickering.\n        canvas.setAttribute('hidden', 'hidden');\n        let isCanvasHidden = true;\n        const showCanvas = function () {\n            if (isCanvasHidden) {\n                canvas.removeAttribute('hidden');\n                isCanvasHidden = false;\n            }\n        };\n        const ctx = canvasWrapper.getContext('2d', { alpha: false });\n        const outputScale = getOutputScale(ctx);\n        /*if (this.useOnlyCssZoom) {\n                const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n                // Use a scale that makes the canvas have the originally intended size\n                // of the page.\n                outputScale.sx *= actualSizeViewport.width / viewport.width;\n                outputScale.sy *= actualSizeViewport.height / viewport.height;\n                outputScale.scaled = true;\n            }*/\n        const pixelsInViewport = viewport.width * viewport.height;\n        const maxScale = Math.sqrt(16777216 / pixelsInViewport);\n        if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n            outputScale.sx = maxScale;\n            outputScale.sy = maxScale;\n            outputScale.scaled = true;\n        }\n        const sfx = approximateFraction(outputScale.sx);\n        const sfy = approximateFraction(outputScale.sy);\n        canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n        canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n        canvas.style.width = roundToDivide(viewport.width, sfx[1]) + 'px';\n        canvas.style.height = roundToDivide(viewport.height, sfy[1]) + 'px';\n        // Add the viewport so it's known what it was originally drawn with.\n        //this.paintedViewportMap.set(canvas, viewport);\n        // Rendering area\n        const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n        const renderContext = {\n            canvasContext: ctx,\n            transform,\n            viewport: this.viewport,\n            enableWebGL: false,\n            renderInteractiveForms: false,\n        };\n        const renderTask = this.pdfPage.render(renderContext);\n        renderTask.onContinue = function (cont) {\n            showCanvas();\n            if (result.onRenderContinue) {\n                result.onRenderContinue(cont);\n            }\n            else {\n                cont();\n            }\n        };\n        renderTask.promise.then(function () {\n            showCanvas();\n            renderCapability.resolve(undefined);\n        }, function (error) {\n            showCanvas();\n            renderCapability.reject(error);\n        });\n        return result;\n    }\n    reset(keepZoomLayer = false, keepAnnotations = false) {\n        this.cancelRendering();\n        this._renderingState = RenderingStates.INITIAL;\n        if (this.container) {\n            this._updatePageContainer();\n        }\n        if (this._canvasContainer) {\n            this.renderer.removeChild(this.container, this._canvasContainer);\n            this._canvasContainer = null;\n        }\n        if (this._textLayerContainer) {\n            this.renderer.removeChild(this.container, this._textLayerContainer);\n            this._textLayerContainer = null;\n        }\n        if (this._annotationLayer) {\n            if (this._annotationLayer.div) {\n                this._annotationLayer.hide();\n            }\n            else {\n                this._annotationLayer.cancel();\n                this._annotationLayer = null;\n            }\n        }\n        this.renderer.setAttribute(this.container, 'data-page-id', `${this.id}`);\n        this.renderer.removeAttribute(this.container, 'data-loaded');\n    }\n    update(scale, rotation) {\n        this.scaleNumber = scale || this.scaleNumber;\n        // The rotation may be zero.\n        if (typeof rotation !== 'undefined') {\n            this.rotation = rotation;\n        }\n        const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n        this._viewport = this.viewport.clone({\n            scale: this.scaleNumber * CSS_UNITS,\n            rotation: totalRotation,\n        });\n        /*let isScalingRestricted = false;\n    \n            if (this._canvasContainer) {\n                if (this.useOnlyCssZoom || (this.hasRestrictedScaling && isScalingRestricted)) {\n                    this.cssTransform(this.canvas, true);\n                    return;\n                }\n                if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n                    this.zoomLayer = this.canvas.parentNode;\n                    this.zoomLayer.style.position = \"absolute\";\n                }\n            }\n            if (this.zoomLayer) {\n                this.cssTransform(this.zoomLayer.firstChild);\n            }*/\n        this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n    }\n    updateMatches() {\n        if (this.textLayer) {\n            this.textLayer._updateMatches();\n        }\n    }\n    cancelRendering() {\n        if (this._renderTask) {\n            this._renderTask.cancel();\n        }\n        if (this.textLayer) {\n            this.textLayer.cancel();\n            this._textLayer = null;\n        }\n        if (this._annotationLayer) {\n            this._annotationLayer.cancel();\n            this._annotationLayer = null;\n        }\n    }\n    _updatePageContainer() {\n        this.renderer.setStyle(this.container, 'width', `${this.viewport.width}px`);\n        this.renderer.setStyle(this.container, 'height', `${this.viewport.height}px`);\n        return this.container;\n    }\n    createItemContainer(defaultViewport) {\n        const pageElement = this.renderer.createElement('div');\n        this.renderer.addClass(pageElement, 'pdf-page');\n        this.renderer.setStyle(pageElement, 'position', 'relative');\n        if (this.pdfPage) {\n            this.renderer.setAttribute(pageElement, 'data-page-number', `${this.id}`);\n        }\n        if (defaultViewport) {\n            this.renderer.setStyle(pageElement, 'width', `${defaultViewport.width}px`);\n            this.renderer.setStyle(pageElement, 'height', `${defaultViewport.height}px`);\n        }\n        return pageElement;\n    }\n    _getOrBuildTextLayer() {\n        if (!this._textLayerContainer) {\n            this._textLayerContainer = this._createTextLayer();\n        }\n        this.renderer.appendChild(this.container, this._textLayerContainer);\n        return this._textLayerContainer;\n    }\n    _createTextLayer() {\n        const { height, width } = this.viewport;\n        const coercedHeight = Math.floor(height);\n        const coercedWidth = Math.floor(width);\n        const textLayer = this.renderer.createElement('div');\n        this.renderer.addClass(textLayer, 'textLayer');\n        this.renderer.setStyle(textLayer, 'position', 'absolute');\n        this.renderer.setStyle(textLayer, 'height', `${coercedHeight}px`);\n        this.renderer.setStyle(textLayer, 'width', `${coercedWidth}px`);\n        this.renderer.setStyle(textLayer, 'top', `0`);\n        this.renderer.setStyle(textLayer, 'left', `0`);\n        this.renderer.setStyle(textLayer, 'right', `0`);\n        this.renderer.setStyle(textLayer, 'bottom', `0`);\n        this.renderer.setStyle(textLayer, 'opacity', `0.2`);\n        this.renderer.setStyle(textLayer, 'line-height', '1');\n        return textLayer;\n    }\n    _getOrBuildCanvas() {\n        if (!this._canvasContainer) {\n            this._canvasContainer = this._createCanvas();\n        }\n        this.renderer.appendChild(this.container, this._canvasContainer);\n        return this._canvasContainer;\n    }\n    _createCanvas() {\n        const { height, width } = this.viewport;\n        const coercedHeight = Math.floor(height);\n        const coercedWidth = Math.floor(width);\n        const canvas = this.renderer.createElement('canvas');\n        canvas.height = coercedHeight;\n        canvas.width = coercedWidth;\n        this.renderer.setAttribute(canvas, 'aria-label', `Page ${this.id}`);\n        this.renderer.setStyle(canvas, 'height', `${coercedHeight}px`);\n        this.renderer.setStyle(canvas, 'width', `${coercedWidth}px`);\n        return canvas;\n    }\n    setPageLabel(label) {\n        this._pageLabel = typeof label === 'string' ? label : null;\n        if (this._pageLabel !== null) {\n            this.container.setAttribute('data-page-label', this._pageLabel);\n        }\n        else {\n            this.container.removeAttribute('data-page-label');\n        }\n    }\n    getPagePoint(x, y) {\n        return this.viewport.convertToPdfPoint(x, y);\n    }\n    get textLayer() {\n        return this._textLayer;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    get renderingState() {\n        return this._renderingState;\n    }\n    get renderingId() {\n        return 'page' + this.id;\n    }\n    get width() {\n        return this.viewport.width;\n    }\n    get height() {\n        return this.viewport.height;\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\nclass PdfPageViewerRef extends PdfContainer {\n    constructor(id, renderingQueue, linkService, findController, downloadManager, _config) {\n        super(renderingQueue);\n        this.id = id;\n        this.renderingQueue = renderingQueue;\n        this.linkService = linkService;\n        this.findController = findController;\n        this.downloadManager = downloadManager;\n        this._config = _config;\n        this._currentScale = null;\n        this._buffer = new PDFPageViewBuffer(this._config.maxPagesRendered);\n        this._pageViewsReady = false;\n        this._scrollMode = ScrollMode.VERTICAL;\n        this._spreadMode = SpreadMode.NONE;\n        this._renderType = RendererType.CANVAS;\n        //Events\n        this.pagesLoaded = new Subject();\n        this.pageLoaded = new Subject();\n        this.pageChanging = new Subject();\n        this.scaleChanging = new Subject();\n        this.rotationChanging = new Subject();\n        this.updateViewArea = new Subject();\n        this._scrollUpdate = () => {\n            if (this.pagesCount === 0) {\n                return;\n            }\n            this.update();\n        };\n        /** Handler that is invoked when the user scrolls into the pdf container */\n        this._scrollMove = () => {\n            // Do nothing if document has no pages\n            if (this.pagesCount === 0) {\n                return;\n            }\n            // If element is disabled we should not do any calculations\n            if (this.disabled) {\n                return;\n            }\n            this.update();\n        };\n        if (findController) {\n            this.findController.pdfPageContainer = this;\n        }\n        this._currentScaleNumber = 1;\n        this._currentScale = _config.scale;\n        this._pagesRotation = _config.rotation;\n        this._currentPageNumber = _config.initialPage;\n    }\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        this.renderer.setStyle(element, 'overflow', 'auto');\n        this.renderer.setStyle(element, 'height', '100%');\n        this.renderer.setStyle(element, 'display', 'block');\n        if (element !== this.container) {\n            if (this.container) {\n                this._removeRootElementListeners(this.container);\n            }\n            this.container = element;\n            this.renderingQueue.setViewer(this);\n            this.linkService.setViewer(this);\n            this.scroll = watchScroll(this.container, this._scrollUpdate);\n            this._resetView();\n        }\n        return this;\n    }\n    dispose() {\n        this.items.forEach((i) => i.reset());\n        this.setDocument(null);\n        this.pagesLoaded.complete();\n        this.pageLoaded.complete();\n        this.pageChanging.complete();\n        this.scaleChanging.complete();\n        this.rotationChanging.complete();\n        this.updateViewArea.complete();\n        this.linkService.setViewer(null);\n        this.renderingQueue.setViewer(null);\n    }\n    /**\n     * Initial load a pdf by the PDFJSWorker\n     * @param pdfDocument pdfDocumentLoaded to be loaded\n     */\n    setDocument(pdfDocument) {\n        if (this.pdfDocument) {\n            this._cancelRendering();\n            this._resetView();\n            if (this.findController) {\n                this.findController.setDocument(null);\n            }\n        }\n        this.pdfDocument = pdfDocument;\n        if (!pdfDocument) {\n            return;\n        }\n        const numPages = pdfDocument.numPages;\n        const pagesCapability = createPromiseCapability();\n        pagesCapability.promise.then(() => {\n            this._pageViewsReady = true;\n            this.pagesLoaded.next({ numPages: numPages });\n            this.update();\n        });\n        const firstPagePromise = pdfDocument.getPage(1);\n        firstPagePromise\n            .then((firstPage) => {\n            this.pageLoaded.next({ pageIndex: firstPage.pageNumber });\n            const scale = this._currentScaleNumber;\n            const viewport = firstPage.getViewport({ scale: scale * CSS_UNITS });\n            for (let pageNum = 1; pageNum <= numPages; ++pageNum) {\n                const pageRef = new PdfPageRef(this.container, pageNum, viewport.clone(), this.findController, this.linkService, this.downloadManager, this.renderingQueue, this.renderer);\n                this.items.push(pageRef);\n            }\n            const firstPageView = this.items[0];\n            if (firstPageView) {\n                firstPageView.setPdfPage(firstPage);\n            }\n            if (this.findController) {\n                this.findController.setDocument(pdfDocument); // Enable searching.\n            }\n            // In addition to 'disableAutoFetch' being set, also attempt to reduce\n            // resource usage when loading *very* long/large documents.\n            if (numPages > 7500) {\n                // XXX: Printing is semi-broken with auto fetch disabled.\n                pagesCapability.resolve();\n                return;\n            }\n            let getPagesLeft = numPages - 1; // The first page was already loaded.\n            if (getPagesLeft <= 0) {\n                pagesCapability.resolve();\n                return;\n            }\n            for (let pageNum = 2; pageNum <= numPages; ++pageNum) {\n                pdfDocument.getPage(pageNum).then((pdfPage) => {\n                    this.pageLoaded.next({ pageIndex: pdfPage.pageNumber });\n                    const pageView = this.items[pageNum - 1];\n                    if (!pageView.pdfPage) {\n                        pageView.setPdfPage(pdfPage);\n                    }\n                    if (--getPagesLeft === 0) {\n                        pagesCapability.resolve();\n                    }\n                }, (reason) => {\n                    console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n                    if (--getPagesLeft === 0) {\n                        pagesCapability.resolve();\n                    }\n                });\n            }\n        })\n            .catch((reason) => {\n            console.error('Unable to initialize viewer', reason);\n        });\n    }\n    getPageView(index) {\n        return this.items[index];\n    }\n    /**\n     * @type {boolean} - True if all {PDFPageView} objects are initialized.\n     */\n    get pageViewsReady() {\n        if (!this._pageViewsReady) {\n            return false;\n        }\n        // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n        // that *all* pages have in fact been completely loaded.\n        return this.items.every(function (pageView) {\n            return !!(pageView && pageView.pdfPage);\n        });\n    }\n    /**\n     * @type {number}\n     */\n    get currentPageNumber() {\n        return this._currentPageNumber;\n    }\n    /**\n     * @param {number} val - The page number.\n     */\n    set currentPageNumber(val) {\n        if (!Number.isInteger(val)) {\n            throw new Error('Invalid page number.');\n        }\n        if (!this.pdfDocument) {\n            return;\n        }\n        // The intent can be to just reset a scroll position and/or scale.\n        if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n            console.error(`${this.id}.currentPageNumber: \"${val}\" is not a valid page.`);\n        }\n    }\n    /**\n     * @returns {boolean} Whether the pageNumber is valid (within bounds).\n     * @private\n     */\n    _setCurrentPageNumber(val, resetCurrentPageView = false) {\n        if (this._currentPageNumber === val) {\n            if (resetCurrentPageView) {\n                this._resetCurrentPageView();\n            }\n            return true;\n        }\n        if (!(0 < val && val <= this.pagesCount)) {\n            return false;\n        }\n        const oldPageNumber = this._currentPageNumber;\n        const oldPageLabel = this._pageLabels && this._pageLabels[oldPageNumber - 1];\n        this._currentPageNumber = val;\n        this.pageChanging.next({\n            oldPageIndex: oldPageNumber,\n            oldPageLabel,\n            actualPageIndex: val,\n            actualPageLabel: this._pageLabels && this._pageLabels[val - 1],\n        });\n        if (resetCurrentPageView) {\n            this._resetCurrentPageView();\n        }\n        return true;\n    }\n    /**\n     * @type {string|null} Returns the current page label, or `null` if no page\n     *   labels exist.\n     */\n    get currentPageLabel() {\n        return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n    }\n    /**\n     * @param {string} val - The page label.\n     */\n    set currentPageLabel(val) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        let page = val || 0; // Fallback page number.\n        if (this._pageLabels) {\n            const i = this._pageLabels.indexOf(val);\n            if (i >= 0) {\n                page = i + 1;\n            }\n        }\n        // The intent can be to just reset a scroll position and/or scale.\n        if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n            console.error(`${this.id}.currentPageLabel: \"${val}\" is not a valid page.`);\n        }\n    }\n    /**\n     * @type {number}\n     */\n    get currentScaleNumber() {\n        return this._currentScaleNumber;\n    }\n    /**\n     * @param {number} val - Scale of the pages in percents.\n     */\n    set currentScaleNumber(val) {\n        // @ts-ignore\n        if (isNaN(val)) {\n            throw new Error('Invalid numeric scale.');\n        }\n        if (!this.pdfDocument) {\n            return;\n        }\n        this._currentScaleNumber = val;\n        this._setScale(val, false);\n    }\n    /**\n     * @type {string}\n     */\n    get currentScale() {\n        return this._currentScale ? this._currentScale : this._currentScaleNumber;\n    }\n    /**\n     * @param val - The scale of the pages (in percent or predefined value).\n     */\n    set currentScale(val) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        this._setScale(val, false);\n    }\n    /**\n     * @type {number}\n     */\n    get pagesRotation() {\n        return this._pagesRotation;\n    }\n    /**\n     * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n     */\n    set pagesRotation(rotation) {\n        if (!isValidRotation(rotation)) {\n            throw new Error('Invalid pages rotation angle.');\n        }\n        if (!this.pdfDocument) {\n            return;\n        }\n        if (this._pagesRotation === rotation) {\n            return; // The rotation didn't change.\n        }\n        const oldRotation = this._pagesRotation;\n        this._pagesRotation = rotation;\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            const pageView = this.items[i];\n            pageView.update(pageView.scaleNumber, rotation);\n        }\n        // Prevent errors in case the rotation changes *before* the scale has been\n        // set to a non-default value.\n        if (this._currentScale) {\n            this._setScale(this._currentScale, true);\n        }\n        this.rotationChanging.next({\n            oldRotation: oldRotation,\n            actualRotation: rotation,\n        });\n        this.update();\n    }\n    update() {\n        const visible = this._getVisiblePages();\n        const visiblePages = visible.views;\n        const numVisiblePages = visiblePages.length;\n        if (numVisiblePages === 0) {\n            return;\n        }\n        const newCacheSize = Math.max(this._config.maxPagesRendered, 2 * numVisiblePages + 1);\n        this._buffer.resize(newCacheSize, visiblePages.map((v) => v.view));\n        this.renderingQueue.renderHighestPriority(visible);\n        this._updateHelper(visiblePages);\n        const oldLocation = this._location;\n        this._updateLocation(visible.first);\n        this.updateViewArea.next({\n            oldLocation: oldLocation,\n            actualLocation: this._location,\n        });\n    }\n    _updateHelper(visiblePages) {\n        if (this.isInPresentationMode) {\n            return;\n        }\n        let currentId = this._currentPageNumber;\n        let stillFullyVisible = false;\n        for (const page of visiblePages) {\n            if (page.percent < 100) {\n                break;\n            }\n            if (page.id === currentId) {\n                stillFullyVisible = true;\n                break;\n            }\n        }\n        if (!stillFullyVisible) {\n            currentId = visiblePages[0].id;\n        }\n        this._setCurrentPageNumber(currentId);\n    }\n    updateMatches(pageIndex) {\n        if (pageIndex === -1) {\n            this.items.forEach((item) => item.updateMatches());\n        }\n        else {\n            this.items[pageIndex].updateMatches();\n        }\n    }\n    _resetView() {\n        super._resetView();\n        this._currentScaleNumber = 1;\n        this._currentScale = null;\n        this._buffer = new PDFPageViewBuffer(this._config.maxPagesRendered);\n        this._location = null;\n        this._pageViewsReady = false;\n        this._scrollMode = ScrollMode.VERTICAL;\n        this._spreadMode = SpreadMode.NONE;\n        // ... and reset the Scroll mode CSS class(es) afterwards.\n        this._updateScrollMode();\n    }\n    /**\n     * Refreshes page view: scrolls to the current page and updates the scale.\n     * @private\n     */\n    _resetCurrentPageView() {\n        if (this.isInPresentationMode) {\n            // Fixes the case when PDF has different page sizes.\n            this._setScale(this._currentScale, true);\n        }\n        const pageView = this.items[this._currentPageNumber - 1];\n        this._scrollIntoView({ pageDiv: pageView.container });\n    }\n    /**\n     * Returns sizes of the pages.\n     * @returns {Array} Array of objects with width/height/rotation fields.\n     */\n    getPagesOverview() {\n        return this.items.map((pageView) => {\n            const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n            return {\n                width: viewport.width,\n                height: viewport.height,\n                rotation: viewport.rotation,\n            };\n        });\n    }\n    forceRendering(currentlyVisiblePages) {\n        const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n        const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n        const pageView = this.renderingQueue.getHighestPriority(visiblePages, this.items, scrollAhead);\n        if (pageView) {\n            this._buffer.push(pageView);\n            this._ensurePdfPageLoaded(pageView).then(() => this.renderingQueue.renderView(pageView));\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Scrolls page into view.\n     */\n    scrollPageIntoView({ pageNumber, destArray = null, allowNegativeOffset = false }) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        const pageView = Number.isInteger(pageNumber) && this.items[pageNumber - 1];\n        if (!pageView) {\n            console.error(`${this.id}.scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`);\n            return;\n        }\n        if (this.isInPresentationMode || !destArray) {\n            this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        let width = 0;\n        let height = 0;\n        let widthScale;\n        let heightScale;\n        const changeOrientation = pageView.rotation % 180 !== 0;\n        const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scaleNumber / CSS_UNITS;\n        const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scaleNumber / CSS_UNITS;\n        let scale = 0;\n        switch (destArray[1].name) {\n            case 'XYZ':\n                x = destArray[2];\n                y = destArray[3];\n                scale = destArray[4];\n                // If x and/or y coordinates are not supplied, default to\n                // _top_ left of the page (not the obvious bottom left,\n                // since aligning the bottom of the intended page with the\n                // top of the window is rarely helpful).\n                x = x !== null ? x : 0;\n                y = y !== null ? y : pageHeight;\n                break;\n            case 'Fit':\n            case 'FitB':\n                scale = 'page-fit';\n                break;\n            case 'FitH':\n            case 'FitBH':\n                y = destArray[2];\n                scale = 'page-width';\n                // According to the PDF spec, section 12.3.2.2, a `null` value in the\n                // parameter should maintain the position relative to the new page.\n                if (y === null && this._location) {\n                    x = this._location.left;\n                    y = this._location.top;\n                }\n                break;\n            case 'FitV':\n            case 'FitBV':\n                x = destArray[2];\n                width = pageWidth;\n                height = pageHeight;\n                scale = 'page-height';\n                break;\n            case 'FitR':\n                x = destArray[2];\n                y = destArray[3];\n                width = destArray[4] - x;\n                height = destArray[5] - y;\n                const hPadding = 0;\n                const vPadding = 0;\n                widthScale = (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n                heightScale = (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n                scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n                break;\n            default:\n                console.error(`${this.id}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n                return;\n        }\n        if (scale && scale !== this._currentScaleNumber) {\n            this.currentScale = scale;\n        }\n        else if (this._currentScaleNumber === 0) {\n            this.currentScale = this._config.scale;\n        }\n        if (scale === 'page-fit' && !destArray[4]) {\n            this._scrollIntoView({\n                pageDiv: pageView.container,\n                pageSpot: pageNumber,\n            });\n            return;\n        }\n        const boundingRect = [\n            pageView.viewport.convertToViewportPoint(x, y),\n            pageView.viewport.convertToViewportPoint(x + width, y + height),\n        ];\n        let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n        let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n        if (!allowNegativeOffset) {\n            // Some bad PDF generators will create destinations with e.g. top values\n            // that exceeds the page height. Ensure that offsets are not negative,\n            // to prevent a previous page from becoming visible (fixes bug 874482).\n            left = Math.max(left, 0);\n            top = Math.max(top, 0);\n        }\n        this._scrollIntoView({\n            pageDiv: pageView.container,\n            pageSpot: { left, top },\n            pageNumber,\n        });\n    }\n    _updateLocation(firstPage) {\n        const currentScale = this._currentScaleNumber;\n        const currentScaleValue = this.currentScale;\n        const normalizedScaleValue = parseFloat(currentScaleValue.toString()) === currentScale\n            ? Math.round(currentScale * 10000) / 100\n            : currentScaleValue;\n        const pageNumber = firstPage.id;\n        let pdfOpenParams = '#page=' + pageNumber;\n        pdfOpenParams += '&zoom=' + normalizedScaleValue;\n        const currentPageView = this.items[pageNumber - 1];\n        const container = this.container;\n        const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n        const intLeft = Math.round(topLeft[0]);\n        const intTop = Math.round(topLeft[1]);\n        pdfOpenParams += ',' + intLeft + ',' + intTop;\n        this._location = {\n            pageNumber,\n            scale: normalizedScaleValue,\n            top: intTop,\n            left: intLeft,\n            rotation: this._pagesRotation,\n            pdfOpenParams,\n        };\n    }\n    _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n        scrollIntoView(pageDiv, this.container, pageSpot);\n    }\n    _cancelRendering() {\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            if (this.items[i]) {\n                this.items[i].cancelRendering();\n            }\n        }\n    }\n    _updateScrollMode(pageNumber = null) {\n        const scrollMode = this._scrollMode;\n        const viewer = this.container;\n        viewer.classList.toggle('scrollHorizontal', scrollMode === ScrollMode.HORIZONTAL);\n        viewer.classList.toggle('scrollWrapped', scrollMode === ScrollMode.WRAPPED);\n        if (!this.pdfDocument || !pageNumber) {\n            return;\n        }\n        // Non-numeric scale values can be sensitive to the scroll orientation.\n        // Call this before re-scrolling to the current page, to ensure that any\n        // changes in scale don't move the current page.\n        // @ts-ignore\n        if (this._currentScale && isNaN(this._currentScale)) {\n            this._setScale(this._currentScale, true);\n        }\n        this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n        this.update();\n    }\n    _setScale(value, noScroll = false) {\n        let scale = parseFloat(`${value}`);\n        if (scale > 0) {\n            this._setScaleUpdatePages(scale, value, noScroll);\n        }\n        else {\n            const currentPage = this.items[this._currentPageNumber - 1];\n            if (!currentPage) {\n                return;\n            }\n            const noPadding = this.isInPresentationMode;\n            let hPadding = 0;\n            let vPadding = 0;\n            if (!noPadding && this._isScrollModeHorizontal) {\n                [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n            }\n            const pageWidthScale = ((this.container.clientWidth - hPadding) / currentPage.width) * currentPage.scaleNumber;\n            const pageHeightScale = ((this.container.clientHeight - vPadding) / currentPage.height) * currentPage.scaleNumber;\n            switch (value) {\n                case 'page-actual':\n                    scale = 1;\n                    break;\n                case 'page-width':\n                    scale = pageWidthScale;\n                    break;\n                case 'page-height':\n                    scale = pageHeightScale;\n                    break;\n                case 'page-fit':\n                    scale = Math.min(pageWidthScale, pageHeightScale);\n                    break;\n                case 'auto':\n                    // For pages in landscape mode, fit the page height to the viewer\n                    // *unless* the page would thus become too wide to fit horizontally.\n                    const horizontalScale = isPortraitOrientation(currentPage)\n                        ? pageWidthScale\n                        : Math.min(pageHeightScale, pageWidthScale);\n                    scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n                    break;\n                default:\n                    console.error(`${this.id}._setScale: \"${value}\" is an unknown zoom value.`);\n                    return;\n            }\n            this._setScaleUpdatePages(scale, value, noScroll);\n        }\n    }\n    _setScaleUpdatePages(newScaleNumber, newScale, noScroll = false) {\n        const oldScale = this._currentScale;\n        const oldScaleNumber = this._currentScaleNumber;\n        this._currentScale = newScale;\n        if (this._isSameScale(this._currentScaleNumber, newScaleNumber)) {\n            return;\n        }\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].update(newScaleNumber);\n        }\n        this.currentScaleNumber = newScaleNumber;\n        if (!noScroll) {\n            let page = this._currentPageNumber, dest;\n            if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n                page = this._location.pageNumber;\n                dest = [null, { name: 'XYZ' }, this._location.left, this._location.top, null];\n            }\n            this.scrollPageIntoView({\n                pageNumber: page,\n                destArray: dest,\n                allowNegativeOffset: true,\n            });\n        }\n        this.scaleChanging.next({\n            oldScale: oldScale,\n            oldScaleNumber: oldScaleNumber,\n            actualScale: newScale,\n            actualScaleNumber: newScaleNumber,\n        });\n        this.update();\n    }\n    _isSameScale(oldScale, newScale) {\n        if (newScale === oldScale) {\n            return true;\n        }\n        return Math.abs(newScale - oldScale) < 1e-15;\n    }\n    _getVisiblePages() {\n        return getVisibleElements(this.container, this.items, true, this._isScrollModeHorizontal);\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('scroll', this._scrollMove, passiveEventListenerOptions);\n    }\n    get pagesCount() {\n        return this.items.length;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    get _isScrollModeHorizontal() {\n        // Used to ensure that pre-rendering of the next/previous page works\n        // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n        return this.isInPresentationMode ? false : this._scrollMode === ScrollMode.HORIZONTAL;\n    }\n    get isInPresentationMode() {\n        return this.presentationModeState === PresentationModeState.FULLSCREEN;\n    }\n    get isChangingPresentationMode() {\n        return this.presentationModeState === PresentationModeState.CHANGING;\n    }\n    get renderType() {\n        return this._renderType;\n    }\n}\n\nclass PdfThumbnailRef extends PdfContainerItem {\n    constructor(thumbnailContainer, id, defaultViewport, linkService, renderingQueue, renderer) {\n        super(id, defaultViewport, renderingQueue, renderer);\n        this.thumbnailContainer = thumbnailContainer;\n        this.id = id;\n        this.defaultViewport = defaultViewport;\n        this.linkService = linkService;\n        this.renderingQueue = renderingQueue;\n        this.renderer = renderer;\n        this._container = this.createItemContainer();\n        const anchor = this.getOrCreateAnchorContainer();\n        anchor.appendChild(this.container);\n        this.thumbnailContainer.appendChild(anchor);\n    }\n    setPdfPage(pdfPage) {\n        this._pdfPage = pdfPage;\n        this.pdfPageRotate = pdfPage.rotate;\n        const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n        this._viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n        this.reset();\n    }\n    reset() {\n        this.cancelRendering();\n        this._renderingState = RenderingStates.INITIAL;\n        if (this.container) {\n            this._updateItemContainer();\n        }\n        this._thumbnailAnchor.removeAttribute('data-loaded');\n        const childNodes = this.container.childNodes;\n        for (let i = childNodes.length - 1; i >= 0; i--) {\n            this.container.removeChild(childNodes[i]);\n        }\n        if (this.canvas) {\n            // Zeroing the width and height causes Firefox to release graphics\n            // resources immediately, which can greatly reduce memory consumption.\n            this.canvas.width = 0;\n            this.canvas.height = 0;\n            delete this.canvas;\n        }\n        if (this._thumbnailImage) {\n            this._thumbnailImage.removeAttribute('src');\n            delete this._thumbnailImage;\n        }\n    }\n    update(rotation) {\n        if (typeof rotation !== 'undefined') {\n            this.rotation = rotation;\n        }\n        const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n        this._viewport = this._viewport.clone({\n            scale: 1,\n            rotation: totalRotation,\n        });\n        this.reset();\n    }\n    draw() {\n        if (this._renderingState !== RenderingStates.INITIAL) {\n            console.error('Must be in new state before drawing');\n            return Promise.resolve(undefined);\n        }\n        this._renderingState = RenderingStates.RUNNING;\n        const renderCapability = createPromiseCapability();\n        const finishRenderTask = (error) => __awaiter(this, void 0, void 0, function* () {\n            // The renderTask may have been replaced by a new one, so only remove\n            // the reference to the renderTask if it matches the one that is\n            // triggering this callback.\n            if (renderTask === this._renderTask) {\n                this._renderTask = null;\n            }\n            if (error instanceof RenderingCancelledException) {\n                console.error(error);\n                renderCapability.resolve(undefined);\n                return;\n            }\n            this._renderingState = RenderingStates.FINISHED;\n            this._convertCanvasToImage();\n            if (!error) {\n                renderCapability.resolve(undefined);\n            }\n            else {\n                renderCapability.reject(error);\n            }\n        });\n        const ctx = this._getPageDrawContext();\n        const drawViewport = this.viewport.clone({\n            scale: this.canvasWidth / this.width,\n        });\n        const renderContinueCallback = (cont) => {\n            if (!this.renderingQueue.isHighestPriority(this)) {\n                this._renderingState = RenderingStates.PAUSED;\n                this.resume = () => {\n                    this._renderingState = RenderingStates.RUNNING;\n                    cont();\n                };\n                return;\n            }\n            cont();\n        };\n        const renderContext = {\n            canvasContext: ctx,\n            viewport: drawViewport,\n        };\n        this._renderTask = this._pdfPage.render(renderContext);\n        const renderTask = this._renderTask;\n        renderTask.onContinue = renderContinueCallback;\n        renderTask.promise.then(() => finishRenderTask(null), (error) => finishRenderTask(error));\n        return renderCapability.promise;\n    }\n    getOrCreateAnchorContainer() {\n        if (!this._thumbnailAnchor) {\n            this._thumbnailAnchor = this.createThumbnailAnchor();\n        }\n        return this._thumbnailAnchor;\n    }\n    createThumbnailAnchor() {\n        const thumbnailAnchor = this.renderer.createElement('a');\n        this.renderer.setProperty(thumbnailAnchor, 'href', this.linkService.getAnchorUrl('#page' + this.id));\n        this.renderer.setProperty(thumbnailAnchor, 'title', this._thumbPageTitle);\n        this.renderer.listen(thumbnailAnchor, 'click', (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            this.linkService.page = this.id;\n            return false;\n        });\n        if (this._pdfPage) {\n            this.renderer.setAttribute(thumbnailAnchor, 'data-page-number', `${this.id}`);\n        }\n        return thumbnailAnchor;\n    }\n    createItemContainer() {\n        const thumbnail = this.renderer.createElement('div');\n        this.renderer.addClass(thumbnail, 'pdf-thumbnail');\n        this.renderer.setStyle(thumbnail, 'width', `${this.canvasWidth}px`);\n        this.renderer.setStyle(thumbnail, 'height', `${this.canvasHeight}px`);\n        return thumbnail;\n    }\n    _updateItemContainer() {\n        this.renderer.setStyle(this.container, 'width', `${this.canvasWidth}px`);\n        this.renderer.setStyle(this.container, 'height', `${this.canvasHeight}px`);\n        return this.container;\n    }\n    _getOrBuildImgThumbnail() {\n        if (!this._thumbnailImage) {\n            this._thumbnailImage = this._createImgThumbnail();\n        }\n        this.renderer.setAttribute(this.container, 'data-loaded', `${true}`);\n        this.renderer.appendChild(this.container, this._thumbnailImage);\n        return this._thumbnailImage;\n    }\n    _createImgThumbnail() {\n        const image = this.renderer.createElement('img');\n        this.renderer.addClass(image, 'thumbnailImage');\n        this.renderer.setAttribute(image, 'aria-label', `Page ${this.id}`);\n        this.renderer.setStyle(image, 'width', `${this.canvasWidth}px`);\n        this.renderer.setStyle(image, 'height', `${this.canvasHeight}px`);\n        this.renderer.setProperty(image, 'src', this.canvas.toDataURL());\n        return image;\n    }\n    _getPageDrawContext(noCtxScale = false) {\n        if (this.canvas) {\n            return;\n        }\n        const canvas = this.renderer.createElement('canvas');\n        // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n        // until rendering/image conversion is complete, to avoid display issues.\n        this.canvas = canvas;\n        const ctx = canvas.getContext('2d', { alpha: false });\n        const outputScale = getOutputScale(ctx);\n        canvas.width = this.canvasWidth * outputScale.sx || 0;\n        canvas.height = this.canvasHeight * outputScale.sy || 0;\n        canvas.style.width = this.canvasWidth + 'px';\n        canvas.style.height = this.canvasHeight + 'px';\n        if (!noCtxScale && outputScale.scaled) {\n            ctx.scale(outputScale.sx, outputScale.sy);\n        }\n        return ctx;\n    }\n    _convertCanvasToImage() {\n        this._getPageDrawContext();\n        if (this._renderingState !== RenderingStates.FINISHED) {\n            return;\n        }\n        this.container.appendChild(this._getOrBuildImgThumbnail());\n        this._thumbnailAnchor.setAttribute('data-loaded', `${true}`);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n    }\n    /**\n     * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n     *              rather than calling this one directly.\n     */\n    cancelRendering() {\n        if (this._renderTask) {\n            this._renderTask.cancel();\n            this._renderTask = null;\n        }\n        this.resume = null;\n    }\n    /**\n     * @param {string|null} label\n     */\n    setPageLabel(label) {\n        this._pageLabel = typeof label === 'string' ? label : null;\n        this.renderer.setProperty(this.container, 'title', this._thumbPageTitle);\n        if (this._renderingState !== RenderingStates.FINISHED) {\n            return;\n        }\n        const pageTitle = this._thumbPageTitle;\n        if (this._thumbnailImage) {\n            this._thumbnailImage.setAttribute('aria-label', `${pageTitle}`);\n        }\n    }\n    get _thumbPageTitle() {\n        return this._pageLabel ? this._pageLabel : this.id;\n    }\n    get viewport() {\n        return this._viewport;\n    }\n    get width() {\n        return this.viewport.width;\n    }\n    get height() {\n        return this.viewport.height;\n    }\n    get canvasWidth() {\n        return 98;\n    }\n    get canvasHeight() {\n        return 98 / (this.width / this.height) || 0;\n    }\n    get container() {\n        return this._container;\n    }\n    get renderingId() {\n        return `thumbnail-${this.id}`;\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n});\nclass PdfThumbnailViewerRef extends PdfContainer {\n    constructor(id, linkService, renderingQueue) {\n        super(renderingQueue);\n        this.id = id;\n        this.linkService = linkService;\n        this.renderingQueue = renderingQueue;\n        this._scrollUpdate = () => {\n            if (!this.items || this.items.length === 0) {\n                return;\n            }\n            this.update();\n        };\n    }\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        this.renderer.setStyle(element, 'overflow', 'auto');\n        this.renderer.setStyle(element, 'height', '100%');\n        this.renderer.setStyle(element, 'display', 'block');\n        if (element !== this.container) {\n            if (this.container) {\n                this._removeRootElementListeners(this.container);\n            }\n            this.container = element;\n            this.renderingQueue.setThumbnailViewer(this);\n            this.scroll = watchScroll(this.container, this._scrollUpdate);\n            this._resetView();\n        }\n        return this;\n    }\n    dispose() {\n        this.items.forEach((i) => i.reset());\n        this.setDocument(null);\n        this.renderingQueue.setThumbnailViewer(null);\n    }\n    setDocument(pdfDocument) {\n        if (this.pdfDocument) {\n            this._cancelRendering();\n            this._resetView();\n        }\n        this.pdfDocument = pdfDocument;\n        if (!pdfDocument) {\n            return;\n        }\n        pdfDocument\n            .getPage(1)\n            .then((firstPdfPage) => {\n            const pagesCount = pdfDocument.numPages;\n            const viewport = firstPdfPage.getViewport({ scale: 1 });\n            for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n                const thumbnail = new PdfThumbnailRef(this.container, pageNum, viewport.clone(), this.linkService, this.renderingQueue, this.renderer);\n                this.items.push(thumbnail);\n            }\n            // Set the first `pdfPage` immediately, since it's already loaded,\n            // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n            // the `this._ensurePdfPageLoaded` method before rendering can start.\n            const firstThumbnailView = this.items[0];\n            if (firstThumbnailView) {\n                firstThumbnailView.setPdfPage(firstPdfPage);\n            }\n            // Ensure that the current thumbnail is always highlighted on load.\n            const thumbnailView = this.items[this._currentPageNumber - 1];\n            thumbnailView.container.classList.add('selected');\n        })\n            .catch((reason) => {\n            console.error('Unable to initialize thumbnail viewer', reason);\n        });\n    }\n    scrollThumbnailIntoView(pageNumber) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        const thumbnailView = this.items[pageNumber - 1];\n        if (!thumbnailView) {\n            console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n            return;\n        }\n        if (pageNumber !== this._currentPageNumber) {\n            const prevThumbnailView = this.items[this._currentPageNumber - 1];\n            // Remove the highlight from the previous thumbnail...\n            prevThumbnailView.container.classList.remove('selected');\n            // ... and add the highlight to the new thumbnail.\n            thumbnailView.container.classList.add('selected');\n        }\n        const visibleThumbs = this._getVisibleThumbs();\n        const numVisibleThumbs = visibleThumbs.views.length;\n        // If the thumbnail isn't currently visible, scroll it into view.\n        if (numVisibleThumbs > 0) {\n            const first = visibleThumbs.first.id;\n            // Account for only one thumbnail being visible.\n            const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n            let shouldScroll = false;\n            if (pageNumber <= first || pageNumber >= last) {\n                shouldScroll = true;\n            }\n            else {\n                visibleThumbs.views.some((view) => {\n                    if (view.id !== pageNumber) {\n                        return false;\n                    }\n                    shouldScroll = view.percent < 100;\n                    return true;\n                });\n            }\n            if (shouldScroll) {\n                scrollIntoView(thumbnailView.container, this.container, { top: -19 });\n            }\n        }\n        this._currentPageNumber = pageNumber;\n    }\n    update() {\n        this.renderingQueue.renderHighestPriority();\n    }\n    _getVisibleThumbs() {\n        return getVisibleElements(this.container, this.items);\n    }\n    _cancelRendering() {\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            if (this.items[i]) {\n                this.items[i].cancelRendering();\n            }\n        }\n    }\n    get pagesRotation() {\n        return this._pagesRotation;\n    }\n    set pagesRotation(rotation) {\n        if (!isValidRotation(rotation)) {\n            throw new Error('Invalid thumbnails rotation angle.');\n        }\n        if (!this.pdfDocument) {\n            return;\n        }\n        if (this._pagesRotation === rotation) {\n            return; // The rotation didn't change.\n        }\n        this._pagesRotation = rotation;\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].update(rotation);\n        }\n    }\n    /**\n     * @param {Array|null} labels\n     */\n    setPageLabels(labels) {\n        if (!this.pdfDocument) {\n            return;\n        }\n        if (!labels) {\n            this._pageLabels = null;\n        }\n        else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n            this._pageLabels = null;\n            console.error('PDFThumbnailViewer_setPageLabels: Invalid page labels.');\n        }\n        else {\n            this._pageLabels = labels;\n        }\n        // Update all the `PDFThumbnailView` instances.\n        for (let i = 0, ii = this.items.length; i < ii; i++) {\n            const label = this._pageLabels && this._pageLabels[i];\n            this.items[i].setPageLabel(label);\n        }\n    }\n    forceRendering() {\n        const visibleThumbs = this._getVisibleThumbs();\n        const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this.items, this.scroll.down);\n        if (thumbView) {\n            this._ensurePdfPageLoaded(thumbView).then(() => this.renderingQueue.renderView(thumbView));\n            return true;\n        }\n        return false;\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('scroll', this._scrollUpdate, passiveEventListenerOptions$1);\n    }\n}\n\nconst DEFAULT_PDF_VIEWER_CONFIG = {\n    initialPage: 1,\n    scale: 'auto',\n    rotation: 0,\n    searchOptions: {\n        phraseSearch: true,\n        caseSensitive: false,\n        entireWord: false,\n        highlightAll: true,\n    },\n    printDPI: PrintDPI.HIGH,\n    maxPagesRendered: 10,\n    rendererPagesThreshold: 2,\n};\nfunction MNJ_PDF_VIEWER_CONFIGURATION_FACTORY(impl) {\n    return impl || DEFAULT_PDF_VIEWER_CONFIG;\n}\n/**\n * Injection token that can be used to configure the\n * behavior of the pdf viewer components.\n */\nconst MNJ_PDF_VIEWER_CONFIGURATION = new InjectionToken('PDF_VIEW_CONFIG');\nconst MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER = {\n    provide: MNJ_PDF_VIEWER_CONFIGURATION,\n    useFactory: MNJ_PDF_VIEWER_CONFIGURATION_FACTORY,\n};\n\nclass PdfViewerRef {\n    constructor(renderingQueue, linkService, downloadManager, printManager, findController) {\n        this.renderingQueue = renderingQueue;\n        this.linkService = linkService;\n        this.downloadManager = downloadManager;\n        this.printManager = printManager;\n        this.findController = findController;\n        // Events\n        /** Emits when pdf has been loaded */\n        this.pdfLoaded = new Subject();\n        /** Emits when pdf properties has been retrieved */\n        this.pdfPropertiesLoaded = new Subject();\n        /** Emits when pdfjs is rendering the printable version */\n        this.pdfPrintProgress = new Subject();\n        this.findController.linkService = this.linkService;\n    }\n    get currentPage() {\n        return this._currentPage;\n    }\n    set currentPage(value) {\n        if (value < 0 && value > this.pdfDocument.numPages) {\n            throw new Error(`Page ${value} doesn't exist in the current pf document`);\n        }\n        if (this.pdfPageViewer) {\n            this.pdfPageViewer.currentPageNumber = value;\n        }\n        this._currentPage = value;\n    }\n    get currentScale() {\n        return this._currentScale;\n    }\n    set currentScale(value) {\n        if (value < MIN_SCALE || value > MAX_SCALE) {\n            throw new Error(`Scale must be a value between ${MIN_SCALE} and ${MAX_SCALE}`);\n        }\n        if (this.pdfPageViewer) {\n            this.pdfPageViewer.currentScale = value;\n        }\n        this._currentScale = value;\n    }\n    get currentRotation() {\n        return this._currentRotation;\n    }\n    set currentRotation(value) {\n        if (!isValidRotation(value)) {\n            throw new Error(`${value} is not a valid rotation value must be one of 0, 90, 180, 270`);\n        }\n        if (this.pdfPageViewer) {\n            this.pdfPageViewer.pagesRotation = value;\n        }\n        if (this.pdfThumbnailViewer) {\n            this.pdfThumbnailViewer.pagesRotation = value;\n        }\n        this._currentRotation = value;\n    }\n    get currentSearchQuery() {\n        return this._currentSearchQuery || '';\n    }\n    set currentSearchQuery(value) {\n        this._currentSearchQuery = value;\n        this.search();\n    }\n    get currentSearchOptions() {\n        return this._currentSearchOptions;\n    }\n    set currentSearchOptions(value) {\n        this._currentSearchOptions = value;\n        this.search();\n    }\n    zoomIn(ticks) {\n        if (this.pdfPageViewer.isInPresentationMode) {\n            return;\n        }\n        let newScale = this.pdfPageViewer.currentScaleNumber;\n        do {\n            // @ts-ignore\n            newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < MAX_SCALE);\n        this.pdfPageViewer.currentScale = newScale;\n    }\n    zoomOut(ticks) {\n        if (this.pdfPageViewer.isInPresentationMode) {\n            return;\n        }\n        let newScale = this.pdfPageViewer.currentScaleNumber;\n        do {\n            // @ts-ignore\n            newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > MIN_SCALE);\n        this.pdfPageViewer.currentScale = newScale;\n    }\n    zoomReset() {\n        if (this.pdfPageViewer.isInPresentationMode) {\n            return;\n        }\n        this.pdfPageViewer.currentScale = DEFAULT_SCALE_VALUE;\n    }\n    downloadPdf(pdfSrc) {\n        const fileName = this.pdfProperties.fileName || getPDFFileNameFromURL(pdfSrc);\n        if (!this.pdfDocument) {\n            if (!pdfSrc) {\n                throw new Error(`There is no pdf loaded`);\n            }\n            this.downloadManager.downloadUrl(pdfSrc, fileName);\n        }\n        this.pdfDocument\n            .getData()\n            .then((data) => {\n            const blob = new Blob([data], { type: 'application/pdf' });\n            this.downloadManager.download(blob, pdfSrc, fileName);\n        })\n            .catch((err) => {\n            console.log(err);\n            this.downloadManager.downloadUrl(pdfSrc, fileName);\n        }); // Error occurred, try downloading with the URL.\n    }\n    printPdf(printDPI) {\n        if (!this.pdfDocument) {\n            throw new Error('There is no pdf to print');\n        }\n        if (!this.pdfPageViewer.pageViewsReady) {\n            throw new Error('Print is not ready, pdf loading');\n        }\n        const pagesOverview = this.pdfPageViewer.getPagesOverview();\n        this.printManager.print(this, this.pdfDocument, pagesOverview, printDPI);\n    }\n    search() {\n        this.findController.executeCommand('find', Object.assign({ query: this.currentSearchQuery }, this._currentSearchOptions));\n    }\n    findNext() {\n        this.findController.executeCommand('findagain', Object.assign(Object.assign({ query: this.currentSearchQuery }, this._currentSearchOptions), { findPrevious: false }));\n    }\n    findPrevious() {\n        this.findController.executeCommand('findagain', Object.assign(Object.assign({ query: this.currentSearchQuery }, this._currentSearchOptions), { findPrevious: true }));\n    }\n    getDocumentProperties() {\n        return Promise.all([\n            this.pdfDocument.getDownloadInfo(),\n            this.pdfDocument.getMetadata(),\n            this.pdfDocument.getPage(1),\n        ]).then(([size, data, page]) => {\n            const { info, contentDispositionFilename } = data;\n            const docProperties = {\n                fileName: contentDispositionFilename || getPDFFileNameFromURL(this._pdfSrc || ''),\n                fileSize: size.length,\n                title: info.Title,\n                author: info.Author,\n                subject: info.Subject,\n                keywords: info.Keywords,\n                creationDate: PDFDateString.toDateObject(info.CreationDate),\n                updateDate: PDFDateString.toDateObject(info.ModDate),\n                creator: info.Creator,\n                pdfProducer: info.Producer,\n                pdfVersion: info.PDFFormatVersion,\n                pageCount: this.pdfDocument.numPages,\n                pageSize: getPageSizeMilliliters(page),\n            };\n            this.pdfProperties = docProperties;\n            return docProperties;\n        });\n    }\n    cleanUp() {\n        if (this.pdfPageViewer) {\n            this.pdfPageViewer.cleanup();\n        }\n        if (this.pdfThumbnailViewer) {\n            this.pdfThumbnailViewer.cleanup();\n        }\n        // We don't want to remove fonts used by active page SVGs.\n        if (this.pdfPageViewer.renderType !== RendererType.SVG) {\n            this.pdfDocument.cleanup();\n        }\n    }\n    dispose() {\n        if (!this.pdfDocument) {\n            return; // run cleanup when document is loaded\n        }\n        if (this.pdfPageViewer) {\n            this.pdfPageViewer.dispose();\n        }\n        if (this.pdfThumbnailViewer) {\n            this.pdfThumbnailViewer.dispose();\n        }\n        // We don't want to remove fonts used by active page SVGs.\n        if (this.pdfPageViewer.renderType !== RendererType.SVG) {\n            this.pdfDocument.cleanup();\n        }\n    }\n    syncPageAndThumbnail(pageIndex) {\n        this._currentPage = pageIndex;\n        if (this.pdfThumbnailViewer) {\n            this.pdfThumbnailViewer.scrollThumbnailIntoView(pageIndex);\n        }\n    }\n    get pdfSrc() {\n        return this._pdfSrc;\n    }\n    set pdfSrc(value) {\n        if (this._pdfSrc) {\n            this.cleanUp();\n        }\n        if (value) {\n            this._pdfSrc = value;\n            getDocument(value)\n                .promise.then((pdfDocument) => {\n                this.pdfDocument = pdfDocument;\n                this.pdfLoaded.next({ pdf: pdfDocument });\n            })\n                .then(() => {\n                this.getDocumentProperties().then((pdfProperties) => this.pdfPropertiesLoaded.next({ properties: pdfProperties }));\n            });\n        }\n    }\n    get pdfDocument() {\n        return this._pdfDocument;\n    }\n    set pdfDocument(value) {\n        this._pdfDocument = value;\n        this.getDocumentProperties();\n        this.linkService.setDocument(this.pdfDocument);\n        if (this._pdfPageViewer) {\n            this._pdfPageViewer.setDocument(this.pdfDocument);\n        }\n        if (this._pdfThumbnailViewer) {\n            this._pdfThumbnailViewer.setDocument(this.pdfDocument);\n        }\n        if (this.pdfOutlineViewer) {\n            this.pdfOutlineViewer.setDocument(this.pdfDocument);\n        }\n        if (this.pdfAttachmentViewer) {\n            this.pdfAttachmentViewer.setDocument(this.pdfDocument);\n        }\n    }\n    get pdfPageViewer() {\n        return this._pdfPageViewer;\n    }\n    set pdfPageViewer(value) {\n        this._pdfPageViewer = value;\n        if (this.pdfDocument) {\n            this.pdfPageViewer.setDocument(this.pdfDocument);\n        }\n    }\n    get pdfThumbnailViewer() {\n        return this._pdfThumbnailViewer;\n    }\n    set pdfThumbnailViewer(value) {\n        this._pdfThumbnailViewer = value;\n        if (this.pdfDocument) {\n            this.pdfThumbnailViewer.setDocument(this.pdfDocument);\n        }\n    }\n}\n\nfunction registerWorker() {\n    GlobalWorkerOptions.workerSrc = PDFJSWorker;\n}\nfunction unRegisterWorker() {\n    GlobalWorkerOptions.workerSrc = null;\n}\nclass PdfViewerRegistry {\n    constructor() {\n        this._pdfViewerRefInstances = {};\n    }\n    registerPdfViewer(viewerId, pdfViewerRef) {\n        if (Object.keys(this._pdfViewerRefInstances).length === 0) {\n            registerWorker();\n        }\n        this._pdfViewerRefInstances[viewerId] = pdfViewerRef;\n    }\n    removePdfViewer(viewerId) {\n        this._pdfViewerRefInstances[viewerId] = null;\n        if (Object.keys(this._pdfViewerRefInstances).length) {\n            unRegisterWorker();\n        }\n    }\n    getReference(viewerId) {\n        const viewerRef = this._pdfViewerRefInstances[viewerId];\n        if (!viewerRef) {\n            throw new Error(`Viewer ${viewerId} does not exist on the page`);\n        }\n        return viewerRef;\n    }\n    ngOnDestroy() {\n        Object.keys(this._pdfViewerRefInstances).forEach((instance) => this.removePdfViewer(instance));\n    }\n}\nPdfViewerRegistry.ɵfac = function PdfViewerRegistry_Factory(t) { return new (t || PdfViewerRegistry)(); };\nPdfViewerRegistry.ɵprov = ɵɵdefineInjectable({ token: PdfViewerRegistry, factory: PdfViewerRegistry.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(PdfViewerRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nlet nextUniqueId = 0;\nclass MnjPdfViewer {\n    constructor(renderingQueue, linkService, findController, downloadManager, printManager, registry, _changeDetectorRef, _config) {\n        this.renderingQueue = renderingQueue;\n        this.linkService = linkService;\n        this.findController = findController;\n        this.downloadManager = downloadManager;\n        this.printManager = printManager;\n        this.registry = registry;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        // Pdf Viewer Events\n        this.pdfLoaded = new EventEmitter();\n        this.pdfProperties = new EventEmitter();\n        this.pdfSearchProgress = new EventEmitter();\n        this.pdfSearchComplete = new EventEmitter();\n        this.pdfPrintProgress = new EventEmitter();\n        // Page Viewer Events\n        this.pageViewerPagesLoaded = new EventEmitter();\n        this.pageViewerPageLoaded = new EventEmitter();\n        this.pageViewerPageChanging = new EventEmitter();\n        this.pageViewerScaleChanging = new EventEmitter();\n        this.pageViewerRotationChanging = new EventEmitter();\n        this.pageViewerUpdateViewArea = new EventEmitter();\n        // Outline Viewer Events\n        this.outlineViewerLoaded = new EventEmitter();\n        // Attachment Viewer Events\n        this.attachmentViewerLoaded = new EventEmitter();\n        this.id = `mnj-pdf-viewer-${nextUniqueId++}`;\n        this._pdfRef = new PdfViewerRef(this.renderingQueue, this.linkService, this.downloadManager, this.printManager, this.findController);\n        this.registry.registerPdfViewer(this.id, this._pdfRef);\n        this._handleEvents(this._pdfRef);\n    }\n    get pdfSrc() {\n        return this._pdfRef.pdfSrc;\n    }\n    set pdfSrc(value) {\n        this._pdfRef.pdfSrc = value;\n    }\n    get page() {\n        return this._pdfRef.currentPage;\n    }\n    set page(value) {\n        this._pdfRef.currentPage = value;\n    }\n    get scale() {\n        return this._pdfRef.currentScale;\n    }\n    set scale(value) {\n        this._pdfRef.currentScale = value;\n    }\n    get rotation() {\n        return this._pdfRef.currentRotation;\n    }\n    set rotation(value) {\n        this._pdfRef.currentRotation = value;\n    }\n    get searchOptions() {\n        return this._pdfRef.currentSearchOptions;\n    }\n    set searchOptions(searchOptions) {\n        this._pdfRef.currentSearchOptions = searchOptions;\n    }\n    /** Whether pdf viewer is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        //this._pdfRef.disabled = this._disabled;\n    }\n    ngOnDestroy() {\n        this._pdfRef.dispose();\n        this.registry.removePdfViewer(this.id);\n    }\n    // TODO: Move all this methods to a registry to manage subscriptions and unSubscriptions globally\n    registerPageViewer() {\n        const pdfPageViewerRef = new PdfPageViewerRef(this.id, this.renderingQueue, this.linkService, this.findController, this.downloadManager, this._config);\n        this._pdfRef.pdfPageViewer = pdfPageViewerRef;\n        this._handlePageViewerEvents(pdfPageViewerRef);\n        return pdfPageViewerRef;\n    }\n    registerThumbnailViewer() {\n        const pdfThumbnailViewerRef = new PdfThumbnailViewerRef(this.id, this.linkService, this.renderingQueue);\n        this._pdfRef.pdfThumbnailViewer = pdfThumbnailViewerRef;\n        return pdfThumbnailViewerRef;\n    }\n    registerAttachmentViewer() {\n        const pdfAttachmentViewerRef = new PdfAttachmentViewerRef(this.downloadManager);\n        this._pdfRef.pdfAttachmentViewer = pdfAttachmentViewerRef;\n        this._handleAttachmentViewerEvents(pdfAttachmentViewerRef);\n        return pdfAttachmentViewerRef;\n    }\n    registerOutlineViewer() {\n        const pdfOutlineViewerRef = new PdfOutlineViewerRef(this.linkService);\n        this._pdfRef.pdfOutlineViewer = pdfOutlineViewerRef;\n        this._handleOutlineViewerEvents(pdfOutlineViewerRef);\n        return pdfOutlineViewerRef;\n    }\n    retrievePdfProperties() {\n        return this._pdfRef.getDocumentProperties();\n    }\n    downloadPdf() {\n        this._pdfRef.downloadPdf(this.pdfSrc);\n    }\n    printPdf() {\n        this._pdfRef.printPdf(this._config.printDPI);\n    }\n    search(phrase) {\n        this._pdfRef.currentSearchQuery = phrase;\n    }\n    findNext() {\n        this._pdfRef.findNext();\n    }\n    findPrevious() {\n        this._pdfRef.findPrevious();\n    }\n    /** Handles the events from the underlying `PdfViewerRef`. */\n    _handleEvents(ref) {\n        ref.pdfLoaded.subscribe((event) => {\n            this.pdfLoaded.emit(Object.assign({ source: this }, event));\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.pdfPropertiesLoaded.subscribe((event) => {\n            this.pdfProperties.emit(Object.assign({ source: this }, event));\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.pdfPrintProgress.subscribe((event) => {\n            this.pdfPrintProgress.emit(Object.assign({ source: this }, event));\n        });\n        this.findController.searchState.subscribe((event) => {\n            this.pdfSearchProgress.emit(Object.assign({ source: this }, event));\n        });\n        this.findController.searchComplete.subscribe((event) => {\n            this.pdfSearchComplete.emit(Object.assign({ source: this }, event));\n        });\n    }\n    /** Handles the events from the underlying `PdfPageViewerRef`. */\n    _handlePageViewerEvents(pageViewerRef) {\n        pageViewerRef.pagesLoaded.subscribe((event) => {\n            this.pageViewerPagesLoaded.emit(Object.assign({ source: this }, event));\n        });\n        pageViewerRef.pageLoaded.subscribe((event) => {\n            this.pageViewerPageLoaded.emit(Object.assign({ source: this }, event));\n        });\n        pageViewerRef.pageChanging.subscribe((event) => {\n            this._pdfRef.syncPageAndThumbnail(event.actualPageIndex);\n            this.pageViewerPageChanging.emit(Object.assign({ source: this }, event));\n            this._changeDetectorRef.detectChanges();\n        });\n        pageViewerRef.scaleChanging.subscribe((event) => {\n            this.pageViewerScaleChanging.emit(Object.assign({ source: this }, event));\n        });\n        pageViewerRef.rotationChanging.subscribe((event) => {\n            this.pageViewerRotationChanging.emit(Object.assign({ source: this }, event));\n        });\n        pageViewerRef.updateViewArea.subscribe((event) => {\n            this.pageViewerUpdateViewArea.emit(Object.assign({ source: this }, event));\n        });\n    }\n    /** Handles the events from the underlying `PdfOutlineViewerRef`. */\n    _handleOutlineViewerEvents(outlineViewerRef) {\n        outlineViewerRef.outlineLoaded.subscribe((event) => {\n            this.outlineViewerLoaded.emit(Object.assign({ source: this }, event));\n        });\n    }\n    /** Handles the events from the underlying `PdfAttachmentViewerRef`. */\n    _handleAttachmentViewerEvents(attachmentViewerRef) {\n        attachmentViewerRef.attachmentsLoaded.subscribe((event) => {\n            this.attachmentViewerLoaded.emit(Object.assign({ source: this }, event));\n        });\n    }\n}\nMnjPdfViewer.ɵfac = function MnjPdfViewer_Factory(t) { return new (t || MnjPdfViewer)(ɵɵdirectiveInject(PdfRenderingQueue), ɵɵdirectiveInject(PdfLinkService), ɵɵdirectiveInject(PdfFindController), ɵɵdirectiveInject(PdfDownloadManager), ɵɵdirectiveInject(PdfPrintManager), ɵɵdirectiveInject(PdfViewerRegistry), ɵɵdirectiveInject(ChangeDetectorRef), ɵɵdirectiveInject(MNJ_PDF_VIEWER_CONFIGURATION)); };\nMnjPdfViewer.ɵcmp = ɵɵdefineComponent({ type: MnjPdfViewer, selectors: [[\"mnj-pdf-viewer\"]], hostAttrs: [1, \"mnj-pdf-viewer\", \"cdk-visually-hidden\"], hostVars: 2, hostBindings: function MnjPdfViewer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵɵattribute(\"id\", ctx.id)(\"disabled\", ctx.disabled);\n    } }, inputs: { pdfSrc: \"pdfSrc\", page: \"page\", scale: \"scale\", rotation: \"rotation\", searchOptions: \"searchOptions\", disabled: [\"pdfViewerDisabled\", \"disabled\"] }, outputs: { pdfLoaded: \"pdfLoaded\", pdfProperties: \"pdfProperties\", pdfSearchProgress: \"pdfSearchProgress\", pdfSearchComplete: \"pdfSearchComplete\", pdfPrintProgress: \"pdfPrintProgress\", pageViewerPagesLoaded: \"pageViewerPagesLoaded\", pageViewerPageLoaded: \"pageViewerPageLoaded\", pageViewerPageChanging: \"pageViewerPageChanging\", pageViewerScaleChanging: \"pageViewerScaleChanging\", pageViewerRotationChanging: \"pageViewerRotationChanging\", pageViewerUpdateViewArea: \"pageViewerUpdateViewArea\", outlineViewerLoaded: \"outlineViewerLoaded\", attachmentViewerLoaded: \"attachmentViewerLoaded\" }, exportAs: [\"mnjPdfViewer\"], features: [ɵɵProvidersFeature([PdfRenderingQueue, PdfDownloadManager, PdfFindController, PdfLinkService, PdfPrintManager])], decls: 0, vars: 0, template: function MnjPdfViewer_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MnjPdfViewer, [{\n        type: Component,\n        args: [{\n                selector: 'mnj-pdf-viewer',\n                template: '',\n                exportAs: 'mnjPdfViewer',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [PdfRenderingQueue, PdfDownloadManager, PdfFindController, PdfLinkService, PdfPrintManager],\n                host: {\n                    class: 'mnj-pdf-viewer cdk-visually-hidden',\n                    '[attr.id]': 'id',\n                    '[attr.disabled]': 'disabled',\n                },\n            }]\n    }], function () { return [{ type: PdfRenderingQueue }, { type: PdfLinkService }, { type: PdfFindController }, { type: PdfDownloadManager }, { type: PdfPrintManager }, { type: PdfViewerRegistry }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MNJ_PDF_VIEWER_CONFIGURATION]\n            }] }]; }, { pdfSrc: [{\n            type: Input\n        }], page: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], rotation: [{\n            type: Input\n        }], searchOptions: [{\n            type: Input\n        }], disabled: [{\n            type: Input,\n            args: ['pdfViewerDisabled']\n        }], pdfLoaded: [{\n            type: Output\n        }], pdfProperties: [{\n            type: Output\n        }], pdfSearchProgress: [{\n            type: Output\n        }], pdfSearchComplete: [{\n            type: Output\n        }], pdfPrintProgress: [{\n            type: Output\n        }], pageViewerPagesLoaded: [{\n            type: Output\n        }], pageViewerPageLoaded: [{\n            type: Output\n        }], pageViewerPageChanging: [{\n            type: Output\n        }], pageViewerScaleChanging: [{\n            type: Output\n        }], pageViewerRotationChanging: [{\n            type: Output\n        }], pageViewerUpdateViewArea: [{\n            type: Output\n        }], outlineViewerLoaded: [{\n            type: Output\n        }], attachmentViewerLoaded: [{\n            type: Output\n        }] }); })();\n\nclass MnjPdfViewerModule {\n}\nMnjPdfViewerModule.ɵmod = ɵɵdefineNgModule({ type: MnjPdfViewerModule });\nMnjPdfViewerModule.ɵinj = ɵɵdefineInjector({ factory: function MnjPdfViewerModule_Factory(t) { return new (t || MnjPdfViewerModule)(); }, providers: [MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER], imports: [[CommonModule, ScrollingModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵɵsetNgModuleScope(MnjPdfViewerModule, { declarations: [MnjPdfViewer,\n        PdfPageLoading,\n        PdfDownloadButton,\n        PdfPrintButton,\n        PdfThumbnailViewer,\n        PdfPageViewer,\n        PdfSearchInput,\n        PdfAttachmentsViewer,\n        PdfTocViewer,\n        PdfUploadButton,\n        PdfPropertiesButton], imports: [CommonModule, ScrollingModule], exports: [MnjPdfViewer,\n        PdfPageLoading,\n        PdfDownloadButton,\n        PdfPrintButton,\n        PdfThumbnailViewer,\n        PdfPageViewer,\n        PdfSearchInput,\n        PdfAttachmentsViewer,\n        PdfTocViewer,\n        PdfUploadButton,\n        PdfPropertiesButton] }); })();\n/*@__PURE__*/ (function () { ɵsetClassMetadata(MnjPdfViewerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, ScrollingModule],\n                declarations: [\n                    MnjPdfViewer,\n                    PdfPageLoading,\n                    PdfDownloadButton,\n                    PdfPrintButton,\n                    PdfThumbnailViewer,\n                    PdfPageViewer,\n                    PdfSearchInput,\n                    PdfAttachmentsViewer,\n                    PdfTocViewer,\n                    PdfUploadButton,\n                    PdfPropertiesButton,\n                ],\n                providers: [MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER],\n                exports: [\n                    MnjPdfViewer,\n                    PdfPageLoading,\n                    PdfDownloadButton,\n                    PdfPrintButton,\n                    PdfThumbnailViewer,\n                    PdfPageViewer,\n                    PdfSearchInput,\n                    PdfAttachmentsViewer,\n                    PdfTocViewer,\n                    PdfUploadButton,\n                    PdfPropertiesButton,\n                ],\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnnotationLayerBuilder, CLEANUP_TIMEOUT, CSS_UNITS, CharacterType, DEFAULT_PDF_VIEWER_CONFIG, DEFAULT_SCALE_DELTA, DEFAULT_SCALE_VALUE, DefaultAnnotationLayerFactory, DefaultTextLayerFactory, FindState, MAX_AUTO_SCALE, MAX_SCALE, MIN_SCALE, MNJ_PDF_VIEWER_CONFIGURATION, MNJ_PDF_VIEWER_CONFIGURATION_FACTORY, MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER, MnjPdfViewer, MnjPdfViewerModule, PDFPageViewBuffer, PdfAttachmentViewerRef, PdfAttachmentsViewer, PdfContainer, PdfContainerItem, PdfDownloadButton, PdfDownloadManager, PdfFindController, PdfLinkService, PdfOutlineViewerRef, PdfPageLoading, PdfPageRef, PdfPageViewer, PdfPageViewerRef, PdfPrintButton, PdfPrintManager, PdfPropertiesButton, PdfRenderingQueue, PdfSearchInput, PdfThumbnailRef, PdfThumbnailViewer, PdfThumbnailViewerRef, PdfTocViewer, PdfUploadButton, PdfViewerRef, PdfViewerRegistry, PresentationModeState, PrintDPI, RendererType, RenderingStates, ScrollMode, SpreadMode, TextLayerBuilder, TextLayerMode, approximateFraction, binarySearchFirstItem, getCharacterType, getOutputScale, getPDFFileNameFromURL, getPageSizeMilliliters, getVisibleElements, isElementBottomAfterViewTop, isElementRightAfterViewLeft, isPortraitOrientation, isValidRotation, parseQueryString, rotateLeft, rotateRight, roundToDivide, scrollIntoView, watchScroll };\n//# sourceMappingURL=mnj-ngx-pdfviewer.js.map\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { PdfAttachmentViewerRef } from '../pdf-attachment-viewer-ref';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Component({\n  selector: 'mnj-pdf-attachments-viewer, [mnjPdfAttachmentsViewer]',\n  template: '',\n  styleUrls: ['./pdf-viewer.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'mnj-attachments-viewer' },\n})\nexport class PdfAttachmentsViewer implements AfterViewInit {\n  @Input('for')\n  get pdfViewer(): MnjPdfViewer {\n    return this._pdfViewer;\n  }\n\n  set pdfViewer(value: MnjPdfViewer) {\n    if (this._pdfViewer !== value) {\n      if (this.attachmentViewerRef) {\n        this.attachmentViewerRef.dispose();\n        this.attachmentViewerRef = null;\n      }\n      this._pdfViewer = value;\n      this.attachmentViewerRef = this._pdfViewer.registerAttachmentViewer();\n    }\n  }\n\n  private _pdfViewer: MnjPdfViewer;\n\n  private attachmentViewerRef: PdfAttachmentViewerRef;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.attachmentViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Directive({\n  selector: 'button[mnjPdfDownload]',\n  host: { '(click)': 'onCLick($event)' },\n})\nexport class PdfDownloadButton {\n  @Input('for') pdfViewer: MnjPdfViewer;\n\n  constructor() {}\n\n  onCLick(event: MouseEvent | TouchEvent) {\n    if (this.pdfViewer) {\n      this.pdfViewer.downloadPdf();\n      event.stopPropagation();\n    }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * Element that will be used as a template for the loader\n * of a pdfPage when it is loading.\n */\n@Directive({ selector: 'ng-template[mnjPdfLoading]' })\nexport class PdfPageLoading {\n  @Input()\n  get matchSize(): boolean {\n    return this._matchSize;\n  }\n\n  set matchSize(value: boolean) {\n    this._matchSize = coerceBooleanProperty(value);\n  }\n\n  private _matchSize = false;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { PdfPageViewerRef } from '../pdf-page-viewer-ref';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Component({\n  selector: 'mnj-pdf-page-viewer, [mnjPdfPageViewer]',\n  template: '',\n  styleUrls: ['./pdf-viewer.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'mnj-page-viewer' },\n})\nexport class PdfPageViewer implements AfterViewInit {\n  @Input('for')\n  get pdfViewer(): MnjPdfViewer {\n    return this._pdfViewer;\n  }\n\n  set pdfViewer(value: MnjPdfViewer) {\n    if (this._pdfViewer !== value) {\n      if (this.pageViewerRef) {\n        this.pageViewerRef.dispose();\n        this.pageViewerRef = null;\n      }\n      this._pdfViewer = value;\n      this.pageViewerRef = this.pdfViewer.registerPageViewer();\n    }\n  }\n\n  private _pdfViewer: MnjPdfViewer;\n\n  private pageViewerRef: PdfPageViewerRef;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.pageViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Directive({\n  selector: 'button[mnjPdfPrint]',\n  host: { '(click)': 'onCLick($event)' },\n})\nexport class PdfPrintButton {\n  @Input('for') pdfViewer: MnjPdfViewer;\n\n  constructor() {}\n\n  onCLick(event: MouseEvent | TouchEvent) {\n    if (this.pdfViewer) {\n      this.pdfViewer.printPdf();\n      event.stopPropagation();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { PdfProperties } from '../models';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Directive({\n  selector: 'button[mnjPdfProperties]',\n  host: { '(click)': 'onCLick($event)' },\n})\nexport class PdfPropertiesButton {\n  @Input('for') pdfViewer: MnjPdfViewer;\n\n  @Output() pdfProperties = new EventEmitter<PdfProperties>();\n\n  constructor() {}\n\n  onCLick(event: MouseEvent | TouchEvent) {\n    if (this.pdfViewer) {\n      this.pdfViewer.retrievePdfProperties().then((properties) => this.pdfProperties.emit(properties));\n    }\n    event.stopPropagation();\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Directive({\n  selector: 'input[mnjPdfSearchInput]',\n  host: { '(keyup.enter)': 'onSubmit($event)' },\n})\nexport class PdfSearchInput {\n  @Input('for') pdfViewer: MnjPdfViewer;\n\n  constructor() {}\n\n  onSubmit(event) {\n    if (this.pdfViewer) {\n      this.pdfViewer.search(event.target.value);\n      event.stopPropagation();\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { PdfThumbnailViewerRef } from '../pdf-thumbnail-viewer-ref';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Component({\n  selector: 'mnj-pdf-thumbnail-viewer, [mnjPdfThumbnailViewer]',\n  template: '',\n  styleUrls: ['./pdf-viewer.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'mnj-thumbnail-viewer' },\n})\nexport class PdfThumbnailViewer implements AfterViewInit {\n  @Input('for')\n  get pdfViewer(): MnjPdfViewer {\n    return this._pdfViewer;\n  }\n\n  set pdfViewer(value: MnjPdfViewer) {\n    if (this._pdfViewer !== value) {\n      if (this.thumbnailViewerRef) {\n        this.thumbnailViewerRef.dispose();\n        this.thumbnailViewerRef = null;\n      }\n      this._pdfViewer = value;\n      this.thumbnailViewerRef = this._pdfViewer.registerThumbnailViewer();\n    }\n  }\n\n  private _pdfViewer: MnjPdfViewer;\n\n  private thumbnailViewerRef: PdfThumbnailViewerRef;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.thumbnailViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { PdfOutlineViewerRef } from '../pdf-outline-viewer-ref';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Component({\n  selector: 'mnj-pdf-toc-viewer, [mnjPdfTocViewer]',\n  template: '',\n  styleUrls: ['./pdf-viewer.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'mnj-toc-viewer' },\n})\nexport class PdfTocViewer implements AfterViewInit {\n  @Input('for')\n  get pdfViewer(): MnjPdfViewer {\n    return this._pdfViewer;\n  }\n\n  set pdfViewer(value: MnjPdfViewer) {\n    if (this._pdfViewer !== value) {\n      if (this.outlineViewerRef) {\n        this.outlineViewerRef.dispose();\n        this.outlineViewerRef = null;\n      }\n      this._pdfViewer = value;\n      this.outlineViewerRef = this._pdfViewer.registerOutlineViewer();\n    }\n  }\n\n  private _pdfViewer: MnjPdfViewer;\n\n  private outlineViewerRef: PdfOutlineViewerRef;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.outlineViewerRef.withRenderer(this.renderer).withRootElement(this.elementRef);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\nimport { MnjPdfViewer } from './pdf-viewer';\n\n@Directive({\n  selector: 'button[mnjPdfUpload]',\n  host: { '(click)': 'onCLick($event)' },\n})\nexport class PdfUploadButton implements OnInit {\n  @Input('for') pdfViewer: MnjPdfViewer;\n\n  @Output()\n  fileLoaded = new EventEmitter<File>();\n\n  private fileInput: HTMLInputElement;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.fileInput = this._buildFileInput();\n    this.renderer.appendChild(this.elementRef.nativeElement, this.fileInput);\n  }\n\n  onCLick(event: MouseEvent | TouchEvent) {\n    if (this.pdfViewer) {\n      this.fileInput.click();\n    }\n  }\n\n  upload(event) {\n    const pdfFile = event.target.files[0];\n    if (URL.createObjectURL) {\n      this.pdfViewer.pdfSrc = URL.createObjectURL(pdfFile);\n    } else {\n      // Read the local file into a Uint8Array.\n      const fileReader = new FileReader();\n      fileReader.onload = (evt: ProgressEvent) => {\n        // @ts-ignore\n        const buffer = evt.target.result;\n        this.pdfViewer.pdfSrc = new Uint8Array(buffer);\n      };\n      fileReader.readAsArrayBuffer(pdfFile);\n    }\n    this.fileLoaded.emit(pdfFile);\n  }\n\n  private _buildFileInput() {\n    const fileInput = this.renderer.createElement('input');\n    this.renderer.setProperty(fileInput, 'type', 'file');\n    this.renderer.setProperty(fileInput, 'accept', '.pdf, application/pdf');\n    this.renderer.listen(fileInput, 'change', (event) => this.upload(event));\n    this.renderer.addClass(fileInput, 'cdk-visually-hidden');\n    return fileInput;\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Scale, SearchOptions } from '../models';\nimport { PdfAttachmentViewerRef } from '../pdf-attachment-viewer-ref';\nimport { PdfOutlineViewerRef } from '../pdf-outline-viewer-ref';\nimport { PdfPageViewerRef } from '../pdf-page-viewer-ref';\nimport { PdfThumbnailViewerRef } from '../pdf-thumbnail-viewer-ref';\nimport { MNJ_PDF_VIEWER_CONFIGURATION, PdfViewerConfig } from '../pdf-viewer-config';\nimport {\n  PdfAttachmentsLoadedEvent,\n  PdfDocumentPropertiesEvent,\n  PdfLoadingEnd,\n  PdfOutlineLoadedEvent,\n  PdfPageChangingEvent,\n  PdfPageLoadedEvent,\n  PdfPageRotationChangingEvent,\n  PdfPageScaleChangingEvent,\n  PdfPagesLoadedEvent,\n  PdfPageUpdatedViewAreaEvent,\n  PdfPrintProgressEvent,\n  PdfSearchCompleteEvent,\n  PdfSearchProgressEvent,\n} from '../pdf-viewer-events';\nimport { PdfViewerRef } from '../pdf-viewer-ref';\nimport { PdfViewerRegistry } from '../pdf-viewer-registry';\nimport { PdfDownloadManager, PdfFindController, PdfLinkService, PdfPrintManager, PdfRenderingQueue } from '../services';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mnj-pdf-viewer',\n  template: '',\n  exportAs: 'mnjPdfViewer',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [PdfRenderingQueue, PdfDownloadManager, PdfFindController, PdfLinkService, PdfPrintManager],\n  host: {\n    class: 'mnj-pdf-viewer cdk-visually-hidden',\n    '[attr.id]': 'id',\n    '[attr.disabled]': 'disabled',\n  },\n})\nexport class MnjPdfViewer implements OnDestroy {\n  @Input()\n  get pdfSrc(): string | Uint8Array | ArrayBuffer {\n    return this._pdfRef.pdfSrc;\n  }\n\n  set pdfSrc(value: string | Uint8Array | ArrayBuffer) {\n    this._pdfRef.pdfSrc = value;\n  }\n\n  @Input()\n  get page(): number {\n    return this._pdfRef.currentPage;\n  }\n\n  set page(value: number) {\n    this._pdfRef.currentPage = value;\n  }\n\n  @Input()\n  get scale(): Scale {\n    return this._pdfRef.currentScale;\n  }\n\n  set scale(value: Scale) {\n    this._pdfRef.currentScale = value;\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._pdfRef.currentRotation;\n  }\n\n  set rotation(value: number) {\n    this._pdfRef.currentRotation = value;\n  }\n\n  @Input()\n  get searchOptions(): SearchOptions {\n    return this._pdfRef.currentSearchOptions;\n  }\n\n  set searchOptions(searchOptions: SearchOptions) {\n    this._pdfRef.currentSearchOptions = searchOptions;\n  }\n\n  /** Whether pdf viewer is disabled. */\n  @Input('pdfViewerDisabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    //this._pdfRef.disabled = this._disabled;\n  }\n\n  private _disabled: boolean;\n\n  // Pdf Viewer Events\n  @Output() pdfLoaded = new EventEmitter<PdfLoadingEnd>();\n  @Output() pdfProperties = new EventEmitter<PdfDocumentPropertiesEvent>();\n  @Output() pdfSearchProgress = new EventEmitter<PdfSearchProgressEvent>();\n  @Output() pdfSearchComplete = new EventEmitter<PdfSearchCompleteEvent>();\n  @Output() pdfPrintProgress = new EventEmitter<PdfPrintProgressEvent>();\n\n  // Page Viewer Events\n  @Output() pageViewerPagesLoaded = new EventEmitter<PdfPagesLoadedEvent>();\n  @Output() pageViewerPageLoaded = new EventEmitter<PdfPageLoadedEvent>();\n  @Output() pageViewerPageChanging = new EventEmitter<PdfPageChangingEvent>();\n  @Output() pageViewerScaleChanging = new EventEmitter<PdfPageScaleChangingEvent>();\n  @Output() pageViewerRotationChanging = new EventEmitter<PdfPageRotationChangingEvent>();\n  @Output() pageViewerUpdateViewArea = new EventEmitter<PdfPageUpdatedViewAreaEvent>();\n\n  // Outline Viewer Events\n  @Output() outlineViewerLoaded = new EventEmitter<PdfOutlineLoadedEvent>();\n\n  // Attachment Viewer Events\n  @Output() attachmentViewerLoaded = new EventEmitter<PdfAttachmentsLoadedEvent>();\n\n  public readonly id = `mnj-pdf-viewer-${nextUniqueId++}`;\n\n  private readonly _pdfRef: PdfViewerRef;\n\n  constructor(\n    private renderingQueue: PdfRenderingQueue,\n    private linkService: PdfLinkService,\n    private findController: PdfFindController,\n    private downloadManager: PdfDownloadManager,\n    private printManager: PdfPrintManager,\n    private registry: PdfViewerRegistry,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Inject(MNJ_PDF_VIEWER_CONFIGURATION) private _config: PdfViewerConfig\n  ) {\n    this._pdfRef = new PdfViewerRef(\n      this.renderingQueue,\n      this.linkService,\n      this.downloadManager,\n      this.printManager,\n      this.findController\n    );\n    this.registry.registerPdfViewer(this.id, this._pdfRef);\n    this._handleEvents(this._pdfRef);\n  }\n\n  ngOnDestroy(): void {\n    this._pdfRef.dispose();\n    this.registry.removePdfViewer(this.id);\n  }\n\n  // TODO: Move all this methods to a registry to manage subscriptions and unSubscriptions globally\n  public registerPageViewer(): PdfPageViewerRef {\n    const pdfPageViewerRef = new PdfPageViewerRef(\n      this.id,\n      this.renderingQueue,\n      this.linkService,\n      this.findController,\n      this.downloadManager,\n      this._config\n    );\n    this._pdfRef.pdfPageViewer = pdfPageViewerRef;\n    this._handlePageViewerEvents(pdfPageViewerRef);\n    return pdfPageViewerRef;\n  }\n\n  public registerThumbnailViewer(): PdfThumbnailViewerRef {\n    const pdfThumbnailViewerRef = new PdfThumbnailViewerRef(this.id, this.linkService, this.renderingQueue);\n    this._pdfRef.pdfThumbnailViewer = pdfThumbnailViewerRef;\n    return pdfThumbnailViewerRef;\n  }\n\n  public registerAttachmentViewer(): PdfAttachmentViewerRef {\n    const pdfAttachmentViewerRef = new PdfAttachmentViewerRef(this.downloadManager);\n    this._pdfRef.pdfAttachmentViewer = pdfAttachmentViewerRef;\n    this._handleAttachmentViewerEvents(pdfAttachmentViewerRef);\n    return pdfAttachmentViewerRef;\n  }\n\n  public registerOutlineViewer(): PdfOutlineViewerRef {\n    const pdfOutlineViewerRef = new PdfOutlineViewerRef(this.linkService);\n    this._pdfRef.pdfOutlineViewer = pdfOutlineViewerRef;\n    this._handleOutlineViewerEvents(pdfOutlineViewerRef);\n    return pdfOutlineViewerRef;\n  }\n\n  retrievePdfProperties() {\n    return this._pdfRef.getDocumentProperties();\n  }\n\n  downloadPdf() {\n    this._pdfRef.downloadPdf(this.pdfSrc);\n  }\n\n  printPdf() {\n    this._pdfRef.printPdf(this._config.printDPI);\n  }\n\n  search(phrase: string) {\n    this._pdfRef.currentSearchQuery = phrase;\n  }\n\n  findNext() {\n    this._pdfRef.findNext();\n  }\n\n  findPrevious() {\n    this._pdfRef.findPrevious();\n  }\n\n  /** Handles the events from the underlying `PdfViewerRef`. */\n  private _handleEvents(ref: PdfViewerRef) {\n    ref.pdfLoaded.subscribe((event) => {\n      this.pdfLoaded.emit({ ...{ source: this }, ...event });\n\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n\n    ref.pdfPropertiesLoaded.subscribe((event) => {\n      this.pdfProperties.emit({ ...{ source: this }, ...event });\n\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n    ref.pdfPrintProgress.subscribe((event) => {\n      this.pdfPrintProgress.emit({ ...{ source: this }, ...event });\n    });\n    this.findController.searchState.subscribe((event) => {\n      this.pdfSearchProgress.emit({ ...{ source: this }, ...event });\n    });\n    this.findController.searchComplete.subscribe((event) => {\n      this.pdfSearchComplete.emit({ ...{ source: this }, ...event });\n    });\n  }\n\n  /** Handles the events from the underlying `PdfPageViewerRef`. */\n  private _handlePageViewerEvents(pageViewerRef: PdfPageViewerRef) {\n    pageViewerRef.pagesLoaded.subscribe((event) => {\n      this.pageViewerPagesLoaded.emit({ ...{ source: this }, ...event });\n    });\n    pageViewerRef.pageLoaded.subscribe((event) => {\n      this.pageViewerPageLoaded.emit({ ...{ source: this }, ...event });\n    });\n    pageViewerRef.pageChanging.subscribe((event) => {\n      this._pdfRef.syncPageAndThumbnail(event.actualPageIndex);\n      this.pageViewerPageChanging.emit({ ...{ source: this }, ...event });\n      this._changeDetectorRef.detectChanges();\n    });\n    pageViewerRef.scaleChanging.subscribe((event) => {\n      this.pageViewerScaleChanging.emit({ ...{ source: this }, ...event });\n    });\n    pageViewerRef.rotationChanging.subscribe((event) => {\n      this.pageViewerRotationChanging.emit({ ...{ source: this }, ...event });\n    });\n    pageViewerRef.updateViewArea.subscribe((event) => {\n      this.pageViewerUpdateViewArea.emit({ ...{ source: this }, ...event });\n    });\n  }\n\n  /** Handles the events from the underlying `PdfOutlineViewerRef`. */\n  private _handleOutlineViewerEvents(outlineViewerRef: PdfOutlineViewerRef) {\n    outlineViewerRef.outlineLoaded.subscribe((event) => {\n      this.outlineViewerLoaded.emit({ ...{ source: this }, ...event });\n    });\n  }\n\n  /** Handles the events from the underlying `PdfAttachmentViewerRef`. */\n  private _handleAttachmentViewerEvents(attachmentViewerRef: PdfAttachmentViewerRef) {\n    attachmentViewerRef.attachmentsLoaded.subscribe((event) => {\n      this.attachmentViewerLoaded.emit({ ...{ source: this }, ...event });\n    });\n  }\n}\n","export * from './public-api';\n","export * from './pdf-location';\nexport * from './pdf-properties';\nexport * from './scale';\nexport * from './search-options';\nexport * from './visualization-options';\n","export const MAX_AUTO_SCALE = 1.25;\nexport const MIN_SCALE = 0.1;\nexport const MAX_SCALE = 10.0;\nexport const DEFAULT_SCALE_DELTA = 1.1;\nexport const DEFAULT_SCALE_VALUE = 'auto';\n\nexport type Scale = number | 'auto' | 'page-actual' | 'page-width' | 'page-height' | 'page-fit';\n","export enum RendererType {\n  CANVAS = 'canvas',\n  SVG = 'svg',\n}\n\nexport enum SpreadMode {\n  UNKNOWN = -1,\n  NONE = 0, // Default value.\n  ODD = 1,\n  EVEN = 2,\n}\n\nexport enum ScrollMode {\n  UNKNOWN = -1,\n  VERTICAL = 0, // Default value,\n  HORIZONTAL = 1,\n  WRAPPED = 2,\n}\n\nexport enum TextLayerMode {\n  DISABLE,\n  ENABLE,\n  ENABLE_ENHANCE,\n}\n\nexport enum PresentationModeState {\n  UNKNOWN,\n  NORMAL,\n  CHANGING,\n  FULLSCREEN,\n}\n","import { coerceElement } from '@angular/cdk/coercion';\nimport { ElementRef, Renderer2 } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport { Disposable } from './pdf-container';\nimport { PdfDownloadManager } from './services';\n\nexport class PdfAttachmentViewerRef implements Disposable {\n  private pdfDocument: PDFJS.PDFDocumentProxy;\n  private renderer: Renderer2;\n  private _container: HTMLElement;\n  private attachments;\n  private _renderedCapability;\n\n  //Events\n  public attachmentsLoaded = new Subject<{ count: number }>();\n\n  constructor(private downloadManager: PdfDownloadManager) {}\n\n  withRenderer(renderer: Renderer2) {\n    this.renderer = renderer;\n    return this;\n  }\n\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    const element = coerceElement(rootElement);\n    this.renderer.setStyle(element, 'overflow', 'auto');\n    this.renderer.setStyle(element, 'height', '100%');\n    this.renderer.setStyle(element, 'display', 'block');\n\n    if (element !== this.container) {\n      this._container = element;\n\n      this.reset();\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.reset();\n    this.attachmentsLoaded.complete();\n  }\n\n  setDocument(pdfDocument: PDFJS.PDFDocumentProxy) {\n    this.pdfDocument = pdfDocument;\n    this.pdfDocument.getAttachments().then((attachments) => this.render({ attachments }));\n  }\n\n  reset(keepRenderedCapability = false) {\n    this.attachments = null;\n    this.container.textContent = '';\n\n    if (!keepRenderedCapability) {\n      this._renderedCapability = PDFJS.createPromiseCapability();\n    }\n  }\n\n  render({ attachments, keepRenderedCapability = false }) {\n    let attachmentsCount = 0;\n\n    if (this.attachments) {\n      this.reset(keepRenderedCapability === true);\n    }\n    this.attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(attachmentsCount);\n      return;\n    }\n\n    const names = Object.keys(attachments).sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n    attachmentsCount = names.length;\n\n    for (let i = 0; i < attachmentsCount; i++) {\n      const item = attachments[names[i]];\n      const filename = PDFJS.removeNullCharacters(PDFJS.getFilenameFromUrl(item.filename));\n\n      const div = document.createElement('div');\n      div.className = 'attachmentsItem';\n      const button = document.createElement('button');\n      button.textContent = filename;\n      if (/\\.pdf$/i.test(filename)) {\n        this._bindPdfLink(button, item.content, filename);\n      } else {\n        this._bindLink(button, item.content, filename);\n      }\n\n      div.appendChild(button);\n      this._container.appendChild(div);\n    }\n\n    this._dispatchEvent(attachmentsCount);\n  }\n\n  /**\n   * Used to append FileAttachment annotations to the sidebar.\n   * @private\n   */\n  private _appendAttachment({ id, filename, content }) {\n    this._renderedCapability.promise.then(() => {\n      let attachments = this.attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return; // Ignore the new attachment if it already exists.\n          }\n        }\n      }\n      attachments[id] = {\n        filename,\n        content,\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true,\n      });\n    });\n  }\n\n  private _bindPdfLink(button, content, filename) {\n    button.onclick = () => {\n      const blobUrl = PDFJS.createObjectURL(content, 'application/pdf');\n      const viewerUrl = '?file=' + encodeURIComponent(blobUrl + '#' + filename);\n      window.open(viewerUrl);\n      return false;\n    };\n  }\n\n  private _bindLink(button, content, filename) {\n    button.onclick = () => {\n      this.downloadManager.downloadData(content, filename, '');\n      return false;\n    };\n  }\n\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n    this.attachmentsLoaded.next({ count: attachmentsCount });\n  }\n\n  get container(): HTMLElement {\n    return this._container;\n  }\n}\n","import { ElementRef, Renderer2 } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { PdfRenderingQueue, RenderingStates } from './services';\n\nexport interface Disposable {\n  dispose(): void;\n}\n\nexport abstract class PdfContainer<C extends PdfContainerItem> implements Disposable {\n  public readonly id: string;\n  protected container: HTMLElement;\n  protected pdfDocument: PDFJS.PDFDocumentProxy;\n  protected items: C[];\n  protected renderer: Renderer2;\n\n  protected _currentPageNumber: number;\n  protected _pagesRotation: number;\n  protected _pageLabels = null;\n  protected _pagesRequests = new WeakMap();\n\n  constructor(protected renderingQueue: PdfRenderingQueue) {}\n\n  withRenderer(renderer: Renderer2) {\n    this.renderer = renderer;\n    return this;\n  }\n\n  abstract dispose();\n\n  protected _resetView() {\n    this.items = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._pagesRequests = new WeakMap();\n\n    // Remove children from the DOM\n    this.container.textContent = '';\n  }\n\n  abstract withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement);\n\n  abstract setDocument(pdfDocument: PDFJS.PDFDocumentProxy);\n\n  abstract update();\n\n  abstract forceRendering(currentlyVisiblePages?);\n\n  cleanup() {\n    this.cancelRendering();\n    this.items.forEach((i) => i.reset());\n    this.setDocument(null);\n  }\n\n  protected cancelRendering() {\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      if (this.items[i]) {\n        this.items[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  protected setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error('PDFThumbnailViewer_setPageLabels: Invalid page labels.');\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFThumbnailView` instances.\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      const label = this._pageLabels && this._pageLabels[i];\n      this.items[i].setPageLabel(label);\n    }\n  }\n\n  protected _ensurePdfPageLoaded(itemView) {\n    if (itemView.pdfPage) {\n      return Promise.resolve(itemView.pdfPage);\n    }\n    if (this._pagesRequests.has(itemView)) {\n      return this._pagesRequests.get(itemView);\n    }\n    const promise = this.pdfDocument\n      .getPage(itemView.id)\n      .then((pdfPage) => {\n        if (!itemView.pdfPage) {\n          itemView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(itemView);\n        return pdfPage;\n      })\n      .catch((reason) => {\n        console.error('Unable to get page for page view', reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(itemView);\n      });\n    this._pagesRequests.set(itemView, promise);\n    return promise;\n  }\n}\n\nexport abstract class PdfContainerItem {\n  protected _container: HTMLElement;\n  protected _pdfPage: PDFJS.PDFPageProxy;\n  protected _pageLabel: string;\n\n  public rotation: number = 0;\n  protected pdfPageRotate: number;\n  protected _viewport: PDFJS.PageViewport;\n\n  protected _renderingState = RenderingStates.INITIAL;\n  protected _renderTask: PDFJS.PDFRenderTask;\n  public resume: () => void;\n\n  constructor(\n    public id: number,\n    protected defaultViewport: PDFJS.PageViewport,\n    protected renderingQueue: PdfRenderingQueue,\n    protected renderer: Renderer2\n  ) {\n    this._viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n  }\n\n  protected abstract createItemContainer(defaultViewport): HTMLElement;\n\n  get pdfPage(): PDFJS.PDFPageProxy {\n    return this._pdfPage;\n  }\n\n  abstract setPdfPage(pdfPage);\n\n  abstract reset();\n\n  abstract draw();\n\n  abstract cancelRendering();\n\n  abstract setPageLabel(label);\n\n  abstract get renderingId();\n\n  get container(): HTMLElement {\n    return this._container;\n  }\n\n  get viewport(): PDFJS.PDFPageViewport {\n    return this._viewport;\n  }\n\n  get renderingState(): RenderingStates {\n    return this._renderingState;\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n}\n","import { coerceElement } from '@angular/cdk/coercion';\nimport { ElementRef, Renderer2 } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport { Disposable } from './pdf-container';\nimport { PdfLinkService } from './services';\n\nconst DEFAULT_TITLE = '\\u2013';\n\nexport class PdfOutlineViewerRef implements Disposable {\n  private pdfDocument: PDFJS.PDFDocumentProxy;\n  private renderer: Renderer2;\n  private _container: HTMLElement;\n  private outline;\n  private lastToggleIsShow;\n\n  //Events\n  public outlineLoaded = new Subject<{ count: number }>();\n\n  constructor(private linkService: PdfLinkService) {}\n\n  withRenderer(renderer: Renderer2) {\n    this.renderer = renderer;\n    return this;\n  }\n\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    const element = coerceElement(rootElement);\n    this.renderer.setStyle(element, 'overflow', 'auto');\n    this.renderer.setStyle(element, 'height', '100%');\n\n    if (element !== this.container) {\n      this._container = element;\n\n      this.reset();\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.reset();\n\n    this.outlineLoaded.complete();\n  }\n\n  setDocument(pdfDocument: PDFJS.PDFDocumentProxy) {\n    this.pdfDocument = pdfDocument;\n    pdfDocument.getOutline().then((outline) => this.render({ outline }));\n  }\n\n  reset() {\n    this.outline = null;\n    this.lastToggleIsShow = true;\n\n    // Remove the outline from the DOM.\n    this.container.textContent = '';\n\n    // Ensure that the left (right in RTL locales) margin is always reset,\n    // to prevent incorrect outline alignment if a new document is opened.\n    this.container.classList.remove('outlineWithDeepNesting');\n  }\n\n  private _bindLink(element, { url, newWindow, dest }) {\n    const { linkService } = this;\n\n    if (url) {\n      PDFJS.addLinkAttributes(element, {\n        url,\n        target: newWindow ? PDFJS.LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n    element.onclick = () => {\n      if (dest) {\n        linkService.navigateTo(dest);\n      }\n      return false;\n    };\n  }\n\n  private _setStyles(element, { bold, italic }) {\n    if (bold) {\n      element.style.fontWeight = 'bold';\n    }\n    if (italic) {\n      element.style.fontStyle = 'italic';\n    }\n  }\n\n  /**\n   * Prepend a button before an outline item which allows the user to toggle\n   * the visibility of all outline items at that level.\n   *\n   * @private\n   */\n  private _addToggleButton(div, { count, items }) {\n    const toggler = document.createElement('div');\n    toggler.className = 'outlineItemToggler';\n    if (count < 0 && Math.abs(count) === items.length) {\n      toggler.classList.add('outlineItemsHidden');\n    }\n    toggler.onclick = (evt) => {\n      evt.stopPropagation();\n      toggler.classList.toggle('outlineItemsHidden');\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains('outlineItemsHidden');\n        this._toggleOutlineItem(div, shouldShowAll);\n      }\n    };\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  /**\n   * Toggle the visibility of the subtree of an outline item.\n   *\n   * @param {Element} root - the root of the outline (sub)tree.\n   * @param {boolean} show - whether to show the outline (sub)tree. If false,\n   *   the outline subtree rooted at |root| will be collapsed.\n   *\n   * @private\n   */\n  private _toggleOutlineItem(root, show = false) {\n    this.lastToggleIsShow = show;\n    for (const toggler of root.querySelectorAll('.outlineItemToggler')) {\n      toggler.classList.toggle('outlineItemsHidden', !show);\n    }\n  }\n\n  /**\n   * Collapse or expand all subtrees of the outline.\n   */\n  toggleOutlineTree() {\n    if (!this.outline) {\n      return;\n    }\n    this._toggleOutlineItem(this.container, !this.lastToggleIsShow);\n  }\n\n  /**\n   * @param params\n   */\n  render({ outline }) {\n    let outlineCount = 0;\n\n    if (this.outline) {\n      this.reset();\n    }\n    this.outline = outline || null;\n\n    if (!outline) {\n      this._dispatchEvent(outlineCount);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue: { parent: Node; items: any[] }[] = [{ parent: fragment, items: this.outline }];\n    let hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const item of levelData.items) {\n        const div = document.createElement('div');\n        div.className = 'outlineItem';\n\n        const element = document.createElement('a');\n        this._bindLink(element, item);\n        this._setStyles(element, item);\n        element.textContent = PDFJS.removeNullCharacters(item.title) || DEFAULT_TITLE;\n\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement('div');\n          itemsDiv.className = 'outlineItems';\n          div.appendChild(itemsDiv);\n          queue.push({ parent: itemsDiv, items: item.items });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n    if (hasAnyNesting) {\n      this.container.classList.add('outlineWithDeepNesting');\n\n      this.lastToggleIsShow = fragment.querySelectorAll('.outlineItemsHidden').length === 0;\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(outlineCount);\n  }\n\n  /**\n   * @private\n   */\n  private _dispatchEvent(outlineCount) {\n    this.outlineLoaded.next({ count: outlineCount });\n  }\n\n  get container(): HTMLElement {\n    return this._container;\n  }\n}\n","import { Renderer2 } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { PdfContainerItem } from './pdf-container';\nimport { PdfDownloadManager, PdfFindController, PdfLinkService, PdfRenderingQueue, RenderingStates } from './services';\nimport {\n  AnnotationLayerBuilder,\n  approximateFraction,\n  CSS_UNITS,\n  DefaultAnnotationLayerFactory,\n  DefaultTextLayerFactory,\n  getOutputScale,\n  roundToDivide,\n  TextLayerBuilder,\n} from './utils';\n\nexport class PdfPageRef extends PdfContainerItem {\n  private stats;\n  private paintTask;\n  private error;\n\n  /** Canvas container where the Pdf page is going to be rendered */\n  private _canvasContainer: HTMLCanvasElement;\n  /** Container where the Pdf page text is going to be rendered */\n  private _textLayerContainer: HTMLDivElement;\n\n  private _textLayer: TextLayerBuilder;\n  private _annotationLayer: AnnotationLayerBuilder;\n\n  public scaleNumber: number;\n\n  // TODO move page description params to each PdfPageRef to print pdf with different page sizes\n\n  constructor(\n    public pagesContainer: HTMLElement,\n    public id: number,\n    protected defaultViewport: PDFJS.PageViewport,\n    private findController: PdfFindController,\n    private linkService: PdfLinkService,\n    private downloadManager: PdfDownloadManager,\n    protected renderingQueue: PdfRenderingQueue,\n    protected renderer: Renderer2\n  ) {\n    super(id, defaultViewport, renderingQueue, renderer);\n    this.scaleNumber = defaultViewport.scale;\n    this.renderingQueue = renderingQueue;\n    this._container = this.createItemContainer(defaultViewport);\n    this.pagesContainer.appendChild(this.container);\n  }\n\n  setPdfPage(page: PDFJS.PdfPageProxy) {\n    this._pdfPage = page;\n    this.pdfPageRotate = page.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this._viewport = page.getViewport({\n      scale: this.scaleNumber,\n      rotation: totalRotation,\n    });\n    this.stats = page.stats;\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this._pdfPage) {\n      this._pdfPage.cleanup();\n    }\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error('Must be in new state before drawing');\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n\n    if (!this.pdfPage) {\n      this._renderingState = RenderingStates.FINISHED;\n      return Promise.reject(new Error('Page is not loaded'));\n    }\n\n    this._renderingState = RenderingStates.RUNNING;\n\n    const pdfPage = this.pdfPage;\n    const div = this.container;\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = this._getOrBuildCanvas();\n\n    if (this._annotationLayer && this._annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this._annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    const textLayerDiv = this._getOrBuildTextLayer();\n    if (this._annotationLayer && this._annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(textLayerDiv, this._annotationLayer.div);\n    } else {\n      div.appendChild(textLayerDiv);\n    }\n\n    this._textLayer = DefaultTextLayerFactory.createTextLayerBuilder(\n      textLayerDiv,\n      this.id - 1,\n      this.viewport,\n      this.findController\n    );\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = (cont) => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this._renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this._renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error) => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof PDFJS.RenderingCancelledException) {\n        this.error = null;\n        return;\n      }\n\n      this._renderingState = RenderingStates.FINISHED;\n\n      this.error = error;\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask = this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      () =>\n        finishPaintTask(null).then(() => {\n          if (this._textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n            });\n            this._textLayer.setTextContentStream(readableStream);\n            this._textLayer.render();\n          }\n        }),\n      (reason) => finishPaintTask(reason)\n    );\n\n    if (!this._annotationLayer) {\n      this._annotationLayer = DefaultAnnotationLayerFactory.createAnnotationLayerBuilder(\n        this.container,\n        pdfPage,\n        this.linkService,\n        this.downloadManager\n      );\n    }\n    this._annotationLayer.render(this.viewport);\n\n    div.setAttribute('data-loaded', `${true}`);\n\n    return resultPromise;\n  }\n\n  private paintOnCanvas(canvasWrapper) {\n    const renderCapability = PDFJS.createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = canvasWrapper;\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.setAttribute('hidden', 'hidden');\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute('hidden');\n        isCanvasHidden = false;\n      }\n    };\n\n    const ctx = canvasWrapper.getContext('2d', { alpha: false });\n    const outputScale = getOutputScale(ctx);\n\n    /*if (this.useOnlyCssZoom) {\n            const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n            // Use a scale that makes the canvas have the originally intended size\n            // of the page.\n            outputScale.sx *= actualSizeViewport.width / viewport.width;\n            outputScale.sy *= actualSizeViewport.height / viewport.height;\n            outputScale.scaled = true;\n        }*/\n\n    const pixelsInViewport = viewport.width * viewport.height;\n    const maxScale = Math.sqrt(16777216 / pixelsInViewport);\n    if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n      outputScale.sx = maxScale;\n      outputScale.sy = maxScale;\n      outputScale.scaled = true;\n    }\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + 'px';\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + 'px';\n    // Add the viewport so it's known what it was originally drawn with.\n    //this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: false,\n      renderInteractiveForms: false,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering();\n    this._renderingState = RenderingStates.INITIAL;\n    if (this.container) {\n      this._updatePageContainer();\n    }\n    if (this._canvasContainer) {\n      this.renderer.removeChild(this.container, this._canvasContainer);\n      this._canvasContainer = null;\n    }\n    if (this._textLayerContainer) {\n      this.renderer.removeChild(this.container, this._textLayerContainer);\n      this._textLayerContainer = null;\n    }\n    if (this._annotationLayer) {\n      if (this._annotationLayer.div) {\n        this._annotationLayer.hide();\n      } else {\n        this._annotationLayer.cancel();\n        this._annotationLayer = null;\n      }\n    }\n    this.renderer.setAttribute(this.container, 'data-page-id', `${this.id}`);\n    this.renderer.removeAttribute(this.container, 'data-loaded');\n  }\n\n  update(scale, rotation?) {\n    this.scaleNumber = scale || this.scaleNumber;\n    // The rotation may be zero.\n    if (typeof rotation !== 'undefined') {\n      this.rotation = rotation;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this._viewport = this.viewport.clone({\n      scale: this.scaleNumber * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    /*let isScalingRestricted = false;\n\n        if (this._canvasContainer) {\n            if (this.useOnlyCssZoom || (this.hasRestrictedScaling && isScalingRestricted)) {\n                this.cssTransform(this.canvas, true);\n                return;\n            }\n            if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n                this.zoomLayer = this.canvas.parentNode;\n                this.zoomLayer.style.position = \"absolute\";\n            }\n        }\n        if (this.zoomLayer) {\n            this.cssTransform(this.zoomLayer.firstChild);\n        }*/\n    this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n  }\n\n  updateMatches() {\n    if (this.textLayer) {\n      this.textLayer._updateMatches();\n    }\n  }\n\n  cancelRendering() {\n    if (this._renderTask) {\n      this._renderTask.cancel();\n    }\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this._textLayer = null;\n    }\n    if (this._annotationLayer) {\n      this._annotationLayer.cancel();\n      this._annotationLayer = null;\n    }\n  }\n\n  private _updatePageContainer(): HTMLElement {\n    this.renderer.setStyle(this.container, 'width', `${this.viewport.width}px`);\n    this.renderer.setStyle(this.container, 'height', `${this.viewport.height}px`);\n\n    return this.container;\n  }\n\n  protected createItemContainer(defaultViewport?: PDFJS.PageViewport): HTMLDivElement {\n    const pageElement = this.renderer.createElement('div');\n    this.renderer.addClass(pageElement, 'pdf-page');\n    this.renderer.setStyle(pageElement, 'position', 'relative');\n\n    if (this.pdfPage) {\n      this.renderer.setAttribute(pageElement, 'data-page-number', `${this.id}`);\n    }\n\n    if (defaultViewport) {\n      this.renderer.setStyle(pageElement, 'width', `${defaultViewport.width}px`);\n      this.renderer.setStyle(pageElement, 'height', `${defaultViewport.height}px`);\n    }\n\n    return pageElement;\n  }\n\n  private _getOrBuildTextLayer(): any {\n    if (!this._textLayerContainer) {\n      this._textLayerContainer = this._createTextLayer();\n    }\n    this.renderer.appendChild(this.container, this._textLayerContainer);\n    return this._textLayerContainer;\n  }\n\n  private _createTextLayer() {\n    const { height, width } = this.viewport;\n    const coercedHeight = Math.floor(height);\n    const coercedWidth = Math.floor(width);\n\n    const textLayer: HTMLDivElement = this.renderer.createElement('div');\n    this.renderer.addClass(textLayer, 'textLayer');\n    this.renderer.setStyle(textLayer, 'position', 'absolute');\n    this.renderer.setStyle(textLayer, 'height', `${coercedHeight}px`);\n    this.renderer.setStyle(textLayer, 'width', `${coercedWidth}px`);\n    this.renderer.setStyle(textLayer, 'top', `0`);\n    this.renderer.setStyle(textLayer, 'left', `0`);\n    this.renderer.setStyle(textLayer, 'right', `0`);\n    this.renderer.setStyle(textLayer, 'bottom', `0`);\n    this.renderer.setStyle(textLayer, 'opacity', `0.2`);\n    this.renderer.setStyle(textLayer, 'line-height', '1');\n    return textLayer;\n  }\n\n  private _getOrBuildCanvas() {\n    if (!this._canvasContainer) {\n      this._canvasContainer = this._createCanvas();\n    }\n    this.renderer.appendChild(this.container, this._canvasContainer);\n    return this._canvasContainer;\n  }\n\n  private _createCanvas() {\n    const { height, width } = this.viewport;\n    const coercedHeight = Math.floor(height);\n    const coercedWidth = Math.floor(width);\n\n    const canvas: HTMLCanvasElement = this.renderer.createElement('canvas');\n    canvas.height = coercedHeight;\n    canvas.width = coercedWidth;\n    this.renderer.setAttribute(canvas, 'aria-label', `Page ${this.id}`);\n    this.renderer.setStyle(canvas, 'height', `${coercedHeight}px`);\n    this.renderer.setStyle(canvas, 'width', `${coercedWidth}px`);\n    return canvas;\n  }\n\n  setPageLabel(label) {\n    this._pageLabel = typeof label === 'string' ? label : null;\n\n    if (this._pageLabel !== null) {\n      this.container.setAttribute('data-page-label', this._pageLabel);\n    } else {\n      this.container.removeAttribute('data-page-label');\n    }\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  get textLayer(): TextLayerBuilder {\n    return this._textLayer;\n  }\n\n  get viewport(): PDFJS.PDFPageViewport {\n    return this._viewport;\n  }\n\n  get renderingState(): RenderingStates {\n    return this._renderingState;\n  }\n\n  get renderingId() {\n    return 'page' + this.id;\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n}\n","import { coerceElement } from '@angular/cdk/coercion';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ElementRef, TemplateRef } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport {\n  MAX_AUTO_SCALE,\n  PdfLocation,\n  PresentationModeState,\n  RendererType,\n  Scale,\n  ScrollMode,\n  SpreadMode,\n} from './models';\nimport { PdfContainer } from './pdf-container';\nimport { PdfPageRef } from './pdf-page-ref';\nimport { PdfViewerConfig } from './pdf-viewer-config';\nimport { PdfDownloadManager, PdfFindController, PdfLinkService, PdfRenderingQueue } from './services';\nimport {\n  CSS_UNITS,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  PDFPageViewBuffer,\n  scrollIntoView,\n  watchScroll,\n} from './utils';\n\n/** Template that can be used to create a loading helper element. */\nexport interface PdfViewerHelperTemplate<T = any> {\n  template: TemplateRef<T> | null;\n  matchSize: boolean;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n});\n\nexport class PdfPageViewerRef extends PdfContainer<PdfPageRef> {\n  private _disabled: boolean;\n  private scroll;\n  private _currentScaleNumber: number;\n  private _currentScale: Scale = null;\n  private _buffer = new PDFPageViewBuffer(this._config.maxPagesRendered);\n  private _location: PdfLocation;\n\n  private _pageViewsReady = false;\n  private _scrollMode = ScrollMode.VERTICAL;\n  private _spreadMode = SpreadMode.NONE;\n  private presentationModeState: PresentationModeState;\n  private _renderType = RendererType.CANVAS;\n\n  //Events\n  public pagesLoaded = new Subject<{ numPages: number }>();\n  public pageLoaded = new Subject<{ pageIndex: number }>();\n  public pageChanging = new Subject<{\n    oldPageIndex: number;\n    oldPageLabel: string;\n    actualPageIndex: number;\n    actualPageLabel: string;\n  }>();\n  public scaleChanging = new Subject<{\n    oldScale: Scale;\n    oldScaleNumber: number;\n    actualScale: Scale;\n    actualScaleNumber: number;\n  }>();\n  public rotationChanging = new Subject<{\n    oldRotation: number;\n    actualRotation: number;\n  }>();\n  public updateViewArea = new Subject<{\n    oldLocation: PdfLocation;\n    actualLocation: PdfLocation;\n  }>();\n\n  constructor(\n    public id: string,\n    protected renderingQueue: PdfRenderingQueue,\n    protected linkService: PdfLinkService,\n    private findController: PdfFindController,\n    private downloadManager: PdfDownloadManager,\n    private _config: PdfViewerConfig\n  ) {\n    super(renderingQueue);\n    if (findController) {\n      this.findController.pdfPageContainer = this;\n    }\n    this._currentScaleNumber = 1;\n    this._currentScale = _config.scale;\n    this._pagesRotation = _config.rotation;\n    this._currentPageNumber = _config.initialPage;\n  }\n\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    const element = coerceElement(rootElement);\n    this.renderer.setStyle(element, 'overflow', 'auto');\n    this.renderer.setStyle(element, 'height', '100%');\n    this.renderer.setStyle(element, 'display', 'block');\n\n    if (element !== this.container) {\n      if (this.container) {\n        this._removeRootElementListeners(this.container);\n      }\n\n      this.container = element;\n\n      this.renderingQueue.setViewer(this);\n      this.linkService.setViewer(this);\n      this.scroll = watchScroll(this.container, this._scrollUpdate);\n      this._resetView();\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.items.forEach((i) => i.reset());\n    this.setDocument(null);\n\n    this.pagesLoaded.complete();\n    this.pageLoaded.complete();\n    this.pageChanging.complete();\n    this.scaleChanging.complete();\n    this.rotationChanging.complete();\n    this.updateViewArea.complete();\n\n    this.linkService.setViewer(null);\n    this.renderingQueue.setViewer(null);\n  }\n\n  /**\n   * Initial load a pdf by the PDFJSWorker\n   * @param pdfDocument pdfDocumentLoaded to be loaded\n   */\n  setDocument(pdfDocument: PDFJS.PDFDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const numPages = pdfDocument.numPages;\n    const pagesCapability = PDFJS.createPromiseCapability();\n\n    pagesCapability.promise.then(() => {\n      this._pageViewsReady = true;\n      this.pagesLoaded.next({ numPages: numPages });\n      this.update();\n    });\n\n    const firstPagePromise = pdfDocument.getPage(1);\n    firstPagePromise\n      .then((firstPage) => {\n        this.pageLoaded.next({ pageIndex: firstPage.pageNumber });\n        const scale = this._currentScaleNumber;\n        const viewport = firstPage.getViewport({ scale: scale * CSS_UNITS });\n        for (let pageNum = 1; pageNum <= numPages; ++pageNum) {\n          const pageRef = new PdfPageRef(\n            this.container,\n            pageNum,\n            viewport.clone(),\n            this.findController,\n            this.linkService,\n            this.downloadManager,\n            this.renderingQueue,\n            this.renderer\n          );\n          this.items.push(pageRef);\n        }\n\n        const firstPageView = this.items[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPage);\n        }\n\n        if (this.findController) {\n          this.findController.setDocument(pdfDocument); // Enable searching.\n        }\n\n        // In addition to 'disableAutoFetch' being set, also attempt to reduce\n        // resource usage when loading *very* long/large documents.\n        if (numPages > 7500) {\n          // XXX: Printing is semi-broken with auto fetch disabled.\n          pagesCapability.resolve();\n          return;\n        }\n\n        let getPagesLeft = numPages - 1; // The first page was already loaded.\n\n        if (getPagesLeft <= 0) {\n          pagesCapability.resolve();\n          return;\n        }\n        for (let pageNum = 2; pageNum <= numPages; ++pageNum) {\n          pdfDocument.getPage(pageNum).then(\n            (pdfPage) => {\n              this.pageLoaded.next({ pageIndex: pdfPage.pageNumber });\n              const pageView = this.items[pageNum - 1];\n              if (!pageView.pdfPage) {\n                pageView.setPdfPage(pdfPage);\n              }\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            },\n            (reason) => {\n              console.error(`Unable to get page ${pageNum} to initialize viewer`, reason);\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            }\n          );\n        }\n      })\n      .catch((reason) => {\n        console.error('Unable to initialize viewer', reason);\n      });\n  }\n\n  getPageView(index) {\n    return this.items[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pageViewsReady) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this.items.every(function (pageView) {\n      return !!(pageView && pageView.pdfPage);\n    });\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error('Invalid page number.');\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(`${this.id}.currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  private _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    const oldPageNumber: number = this._currentPageNumber;\n    const oldPageLabel = this._pageLabels && this._pageLabels[oldPageNumber - 1];\n    this._currentPageNumber = val;\n\n    this.pageChanging.next({\n      oldPageIndex: oldPageNumber,\n      oldPageLabel,\n      actualPageIndex: val,\n      actualPageLabel: this._pageLabels && this._pageLabels[val - 1],\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val || 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(`${this.id}.currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScaleNumber(): number {\n    return this._currentScaleNumber;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScaleNumber(val: number) {\n    // @ts-ignore\n    if (isNaN(val)) {\n      throw new Error('Invalid numeric scale.');\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._currentScaleNumber = val;\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScale() {\n    return this._currentScale ? this._currentScale : this._currentScaleNumber;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScale(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error('Invalid pages rotation angle.');\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    const oldRotation = this._pagesRotation;\n    this._pagesRotation = rotation;\n\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      const pageView = this.items[i];\n      pageView.update(pageView.scaleNumber, rotation);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScale) {\n      this._setScale(this._currentScale, true);\n    }\n\n    this.rotationChanging.next({\n      oldRotation: oldRotation,\n      actualRotation: rotation,\n    });\n\n    this.update();\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views;\n    const numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(this._config.maxPagesRendered, 2 * numVisiblePages + 1);\n    this._buffer.resize(\n      newCacheSize,\n      visiblePages.map((v) => v.view as PdfPageRef)\n    );\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages);\n\n    const oldLocation = this._location;\n    this._updateLocation(visible.first);\n    this.updateViewArea.next({\n      oldLocation: oldLocation,\n      actualLocation: this._location,\n    });\n  }\n\n  private _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n\n  updateMatches(pageIndex: number) {\n    if (pageIndex === -1) {\n      this.items.forEach((item) => item.updateMatches());\n    } else {\n      this.items[pageIndex].updateMatches();\n    }\n  }\n\n  protected _resetView() {\n    super._resetView();\n\n    this._currentScaleNumber = 1;\n    this._currentScale = null;\n    this._buffer = new PDFPageViewBuffer(this._config.maxPagesRendered);\n    this._location = null;\n    this._pageViewsReady = false;\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  private _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScale, true);\n    }\n\n    const pageView = this.items[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.container });\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    return this.items.map((pageView) => {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation,\n      };\n    });\n  }\n\n  forceRendering(currentlyVisiblePages?) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal ? this.scroll.right : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(visiblePages, this.items, scrollAhead);\n    if (pageView) {\n      this._buffer.push(pageView);\n      this._ensurePdfPageLoaded(pageView).then(() => this.renderingQueue.renderView(pageView));\n      return true;\n    }\n    return false;\n  }\n\n  private _scrollUpdate = () => {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  };\n\n  /**\n   * Scrolls page into view.\n   */\n  scrollPageIntoView({ pageNumber, destArray = null, allowNegativeOffset = false }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView = Number.isInteger(pageNumber) && this.items[pageNumber - 1];\n    if (!pageView) {\n      console.error(`${this.id}.scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`);\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0;\n    let y = 0;\n    let width = 0;\n    let height = 0;\n    let widthScale;\n    let heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scaleNumber / CSS_UNITS;\n    const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scaleNumber / CSS_UNITS;\n    let scale: number | 'page-width' | 'page-height' | 'page-fit' = 0;\n    switch (destArray[1].name) {\n      case 'XYZ':\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case 'Fit':\n      case 'FitB':\n        scale = 'page-fit';\n        break;\n      case 'FitH':\n      case 'FitBH':\n        y = destArray[2];\n        scale = 'page-width';\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        }\n        break;\n      case 'FitV':\n      case 'FitBV':\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = 'page-height';\n        break;\n      case 'FitR':\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = 0;\n        const vPadding = 0;\n\n        widthScale = (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale = (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(`${this.id}.scrollPageIntoView: ` + `\"${destArray[1].name}\" is not a valid destination type.`);\n        return;\n    }\n\n    if (scale && scale !== this._currentScaleNumber) {\n      this.currentScale = scale;\n    } else if (this._currentScaleNumber === 0) {\n      this.currentScale = this._config.scale;\n    }\n\n    if (scale === 'page-fit' && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.container,\n        pageSpot: pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.container,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  private _updateLocation(firstPage) {\n    const currentScale = this._currentScaleNumber;\n    const currentScaleValue = this.currentScale;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue.toString()) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = '#page=' + pageNumber;\n    pdfOpenParams += '&zoom=' + normalizedScaleValue;\n    const currentPageView = this.items[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += ',' + intLeft + ',' + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  private _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    scrollIntoView(pageDiv, this.container, pageSpot);\n  }\n\n  private _cancelRendering() {\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      if (this.items[i]) {\n        this.items[i].cancelRendering();\n      }\n    }\n  }\n\n  private _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode;\n    const viewer = this.container;\n\n    viewer.classList.toggle('scrollHorizontal', scrollMode === ScrollMode.HORIZONTAL);\n    viewer.classList.toggle('scrollWrapped', scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    // @ts-ignore\n    if (this._currentScale && isNaN(this._currentScale)) {\n      this._setScale(this._currentScale, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  private _setScale(value: Scale, noScroll = false) {\n    let scale = parseFloat(`${value}`);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll);\n    } else {\n      const currentPage = this.items[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode;\n      let hPadding = 0;\n      let vPadding = 0;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale = ((this.container.clientWidth - hPadding) / currentPage.width) * currentPage.scaleNumber;\n      const pageHeightScale = ((this.container.clientHeight - vPadding) / currentPage.height) * currentPage.scaleNumber;\n      switch (value) {\n        case 'page-actual':\n          scale = 1;\n          break;\n        case 'page-width':\n          scale = pageWidthScale;\n          break;\n        case 'page-height':\n          scale = pageHeightScale;\n          break;\n        case 'page-fit':\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case 'auto':\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(`${this.id}._setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll);\n    }\n  }\n\n  private _setScaleUpdatePages(newScaleNumber: number, newScale: Scale, noScroll = false) {\n    const oldScale = this._currentScale;\n    const oldScaleNumber = this._currentScaleNumber;\n\n    this._currentScale = newScale;\n\n    if (this._isSameScale(this._currentScaleNumber, newScaleNumber)) {\n      return;\n    }\n\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      this.items[i].update(newScaleNumber);\n    }\n    this.currentScaleNumber = newScaleNumber;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n        page = this._location.pageNumber;\n        dest = [null, { name: 'XYZ' }, this._location.left, this._location.top, null];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.scaleChanging.next({\n      oldScale: oldScale,\n      oldScaleNumber: oldScaleNumber,\n      actualScale: newScale,\n      actualScaleNumber: newScaleNumber,\n    });\n\n    this.update();\n  }\n\n  private _isSameScale(oldScale, newScale) {\n    if (newScale === oldScale) {\n      return true;\n    }\n    return Math.abs(newScale - oldScale) < 1e-15;\n  }\n\n  private _getVisiblePages() {\n    return getVisibleElements(this.container, this.items, true, this._isScrollModeHorizontal);\n  }\n\n  /** Handler that is invoked when the user scrolls into the pdf container */\n  private _scrollMove = () => {\n    // Do nothing if document has no pages\n    if (this.pagesCount === 0) {\n      return;\n    }\n    // If element is disabled we should not do any calculations\n    if (this.disabled) {\n      return;\n    }\n\n    this.update();\n  };\n\n  /** Removes the manually-added event listeners from the root element. */\n  private _removeRootElementListeners(element: HTMLElement) {\n    element.removeEventListener('scroll', this._scrollMove, passiveEventListenerOptions);\n  }\n\n  get pagesCount() {\n    return this.items.length;\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode ? false : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get renderType(): RendererType {\n    return this._renderType;\n  }\n}\n","import { Renderer2 } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { PdfContainerItem } from './pdf-container';\nimport { PdfLinkService, PdfRenderingQueue, RenderingStates } from './services';\nimport { getOutputScale } from './utils';\n\nexport class PdfThumbnailRef extends PdfContainerItem {\n  private _thumbnailAnchor: HTMLAnchorElement;\n  private _thumbnailImage: HTMLImageElement;\n  private canvas: HTMLCanvasElement;\n\n  constructor(\n    private thumbnailContainer: HTMLElement,\n    public id: number,\n    protected defaultViewport: PDFJS.PageViewport,\n    private linkService: PdfLinkService,\n    protected renderingQueue: PdfRenderingQueue,\n    protected renderer: Renderer2\n  ) {\n    super(id, defaultViewport, renderingQueue, renderer);\n    this._container = this.createItemContainer();\n    const anchor = this.getOrCreateAnchorContainer();\n    anchor.appendChild(this.container);\n    this.thumbnailContainer.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this._pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this._viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this._renderingState = RenderingStates.INITIAL;\n\n    if (this.container) {\n      this._updateItemContainer();\n    }\n\n    this._thumbnailAnchor.removeAttribute('data-loaded');\n\n    const childNodes = this.container.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      this.container.removeChild(childNodes[i]);\n    }\n\n    if (this.canvas) {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n    if (this._thumbnailImage) {\n      this._thumbnailImage.removeAttribute('src');\n      delete this._thumbnailImage;\n    }\n  }\n\n  update(rotation) {\n    if (typeof rotation !== 'undefined') {\n      this.rotation = rotation;\n    }\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this._viewport = this._viewport.clone({\n      scale: 1,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  draw() {\n    if (this._renderingState !== RenderingStates.INITIAL) {\n      console.error('Must be in new state before drawing');\n      return Promise.resolve(undefined);\n    }\n    this._renderingState = RenderingStates.RUNNING;\n\n    const renderCapability = PDFJS.createPromiseCapability();\n    const finishRenderTask = async (error) => {\n      // The renderTask may have been replaced by a new one, so only remove\n      // the reference to the renderTask if it matches the one that is\n      // triggering this callback.\n      if (renderTask === this._renderTask) {\n        this._renderTask = null;\n      }\n\n      if (error instanceof PDFJS.RenderingCancelledException) {\n        console.error(error);\n        renderCapability.resolve(undefined);\n        return;\n      }\n\n      this._renderingState = RenderingStates.FINISHED;\n      this._convertCanvasToImage();\n\n      if (!error) {\n        renderCapability.resolve(undefined);\n      } else {\n        renderCapability.reject(error);\n      }\n    };\n\n    const ctx = this._getPageDrawContext();\n    const drawViewport = this.viewport.clone({\n      scale: this.canvasWidth / this.width,\n    });\n    const renderContinueCallback = (cont) => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this._renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this._renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      viewport: drawViewport,\n    };\n    this._renderTask = this._pdfPage.render(renderContext);\n    const renderTask = this._renderTask;\n    renderTask.onContinue = renderContinueCallback;\n\n    renderTask.promise.then(\n      () => finishRenderTask(null),\n      (error) => finishRenderTask(error)\n    );\n    return renderCapability.promise;\n  }\n\n  protected getOrCreateAnchorContainer(): HTMLAnchorElement {\n    if (!this._thumbnailAnchor) {\n      this._thumbnailAnchor = this.createThumbnailAnchor();\n    }\n    return this._thumbnailAnchor;\n  }\n\n  private createThumbnailAnchor(): HTMLAnchorElement {\n    const thumbnailAnchor = this.renderer.createElement('a');\n    this.renderer.setProperty(thumbnailAnchor, 'href', this.linkService.getAnchorUrl('#page' + this.id));\n    this.renderer.setProperty(thumbnailAnchor, 'title', this._thumbPageTitle);\n    this.renderer.listen(thumbnailAnchor, 'click', (event: MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.linkService.page = this.id;\n      return false;\n    });\n    if (this._pdfPage) {\n      this.renderer.setAttribute(thumbnailAnchor, 'data-page-number', `${this.id}`);\n    }\n    return thumbnailAnchor;\n  }\n\n  protected createItemContainer(): HTMLDivElement {\n    const thumbnail = this.renderer.createElement('div');\n    this.renderer.addClass(thumbnail, 'pdf-thumbnail');\n\n    this.renderer.setStyle(thumbnail, 'width', `${this.canvasWidth}px`);\n    this.renderer.setStyle(thumbnail, 'height', `${this.canvasHeight}px`);\n\n    return thumbnail;\n  }\n\n  private _updateItemContainer(): HTMLElement {\n    this.renderer.setStyle(this.container, 'width', `${this.canvasWidth}px`);\n    this.renderer.setStyle(this.container, 'height', `${this.canvasHeight}px`);\n\n    return this.container;\n  }\n\n  private _getOrBuildImgThumbnail(): HTMLImageElement {\n    if (!this._thumbnailImage) {\n      this._thumbnailImage = this._createImgThumbnail();\n    }\n    this.renderer.setAttribute(this.container, 'data-loaded', `${true}`);\n    this.renderer.appendChild(this.container, this._thumbnailImage);\n    return this._thumbnailImage;\n  }\n\n  private _createImgThumbnail(): HTMLImageElement {\n    const image = this.renderer.createElement('img');\n    this.renderer.addClass(image, 'thumbnailImage');\n    this.renderer.setAttribute(image, 'aria-label', `Page ${this.id}`);\n    this.renderer.setStyle(image, 'width', `${this.canvasWidth}px`);\n    this.renderer.setStyle(image, 'height', `${this.canvasHeight}px`);\n    this.renderer.setProperty(image, 'src', this.canvas.toDataURL());\n    return image;\n  }\n\n  private _getPageDrawContext(noCtxScale = false) {\n    if (this.canvas) {\n      return;\n    }\n    const canvas = this.renderer.createElement('canvas');\n    // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n    // until rendering/image conversion is complete, to avoid display issues.\n    this.canvas = canvas;\n    const ctx = canvas.getContext('2d', { alpha: false });\n    const outputScale = getOutputScale(ctx);\n\n    canvas.width = this.canvasWidth * outputScale.sx || 0;\n    canvas.height = this.canvasHeight * outputScale.sy || 0;\n    canvas.style.width = this.canvasWidth + 'px';\n    canvas.style.height = this.canvasHeight + 'px';\n\n    if (!noCtxScale && outputScale.scaled) {\n      ctx.scale(outputScale.sx, outputScale.sy);\n    }\n    return ctx;\n  }\n\n  private _convertCanvasToImage() {\n    this._getPageDrawContext();\n    if (this._renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n\n    this.container.appendChild(this._getOrBuildImgThumbnail());\n    this._thumbnailAnchor.setAttribute('data-loaded', `${true}`);\n\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    delete this.canvas;\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering() {\n    if (this._renderTask) {\n      this._renderTask.cancel();\n      this._renderTask = null;\n    }\n    this.resume = null;\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this._pageLabel = typeof label === 'string' ? label : null;\n\n    this.renderer.setProperty(this.container, 'title', this._thumbPageTitle);\n\n    if (this._renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n\n    const pageTitle = this._thumbPageTitle;\n    if (this._thumbnailImage) {\n      this._thumbnailImage.setAttribute('aria-label', `${pageTitle}`);\n    }\n  }\n\n  get _thumbPageTitle() {\n    return this._pageLabel ? this._pageLabel : this.id;\n  }\n\n  get viewport(): PDFJS.PDFPageViewport {\n    return this._viewport;\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  get canvasWidth() {\n    return 98;\n  }\n\n  get canvasHeight() {\n    return 98 / (this.width / this.height) || 0;\n  }\n\n  get container(): HTMLElement {\n    return this._container;\n  }\n\n  get renderingId() {\n    return `thumbnail-${this.id}`;\n  }\n}\n","import { coerceElement } from '@angular/cdk/coercion';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ElementRef } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { PdfContainer } from './pdf-container';\nimport { PdfThumbnailRef } from './pdf-thumbnail-ref';\nimport { PdfLinkService, PdfRenderingQueue } from './services';\nimport { getVisibleElements, isValidRotation, scrollIntoView, watchScroll } from './utils';\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n});\n\nexport class PdfThumbnailViewerRef extends PdfContainer<PdfThumbnailRef> {\n  private scroll;\n\n  constructor(public id: string, protected linkService: PdfLinkService, protected renderingQueue: PdfRenderingQueue) {\n    super(renderingQueue);\n  }\n\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    const element = coerceElement(rootElement);\n    this.renderer.setStyle(element, 'overflow', 'auto');\n    this.renderer.setStyle(element, 'height', '100%');\n    this.renderer.setStyle(element, 'display', 'block');\n\n    if (element !== this.container) {\n      if (this.container) {\n        this._removeRootElementListeners(this.container);\n      }\n\n      this.container = element;\n\n      this.renderingQueue.setThumbnailViewer(this);\n      this.scroll = watchScroll(this.container, this._scrollUpdate);\n      this._resetView();\n    }\n\n    return this;\n  }\n\n  dispose() {\n    this.items.forEach((i) => i.reset());\n    this.setDocument(null);\n\n    this.renderingQueue.setThumbnailViewer(null);\n  }\n\n  setDocument(pdfDocument: PDFJS.PDFDocumentProxy) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n\n    pdfDocument\n      .getPage(1)\n      .then((firstPdfPage) => {\n        const pagesCount = pdfDocument.numPages;\n        const viewport = firstPdfPage.getViewport({ scale: 1 });\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const thumbnail = new PdfThumbnailRef(\n            this.container,\n            pageNum,\n            viewport.clone(),\n            this.linkService,\n            this.renderingQueue,\n            this.renderer\n          );\n          this.items.push(thumbnail);\n        }\n\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstThumbnailView = this.items[0];\n        if (firstThumbnailView) {\n          firstThumbnailView.setPdfPage(firstPdfPage);\n        }\n\n        // Ensure that the current thumbnail is always highlighted on load.\n        const thumbnailView = this.items[this._currentPageNumber - 1];\n        thumbnailView.container.classList.add('selected');\n      })\n      .catch((reason) => {\n        console.error('Unable to initialize thumbnail viewer', reason);\n      });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const thumbnailView = this.items[pageNumber - 1];\n\n    if (!thumbnailView) {\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this.items[this._currentPageNumber - 1];\n      // Remove the highlight from the previous thumbnail...\n      prevThumbnailView.container.classList.remove('selected');\n      // ... and add the highlight to the new thumbnail.\n      thumbnailView.container.classList.add('selected');\n    }\n    const visibleThumbs = this._getVisibleThumbs();\n    const numVisibleThumbs = visibleThumbs.views.length;\n\n    // If the thumbnail isn't currently visible, scroll it into view.\n    if (numVisibleThumbs > 0) {\n      const first = visibleThumbs.first.id;\n      // Account for only one thumbnail being visible.\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n\n      let shouldScroll = false;\n      if (pageNumber <= first || pageNumber >= last) {\n        shouldScroll = true;\n      } else {\n        visibleThumbs.views.some((view) => {\n          if (view.id !== pageNumber) {\n            return false;\n          }\n          shouldScroll = view.percent < 100;\n          return true;\n        });\n      }\n      if (shouldScroll) {\n        scrollIntoView(thumbnailView.container, this.container, { top: -19 });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  update() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  private _getVisibleThumbs() {\n    return getVisibleElements(this.container, this.items);\n  }\n\n  private _cancelRendering() {\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      if (this.items[i]) {\n        this.items[i].cancelRendering();\n      }\n    }\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error('Invalid thumbnails rotation angle.');\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      this.items[i].update(rotation);\n    }\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) {\n      this._pageLabels = null;\n      console.error('PDFThumbnailViewer_setPageLabels: Invalid page labels.');\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFThumbnailView` instances.\n    for (let i = 0, ii = this.items.length; i < ii; i++) {\n      const label = this._pageLabels && this._pageLabels[i];\n      this.items[i].setPageLabel(label);\n    }\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n    const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this.items, this.scroll.down);\n    if (thumbView) {\n      this._ensurePdfPageLoaded(thumbView).then(() => this.renderingQueue.renderView(thumbView));\n      return true;\n    }\n    return false;\n  }\n\n  private _scrollUpdate = () => {\n    if (!this.items || this.items.length === 0) {\n      return;\n    }\n    this.update();\n  };\n\n  /** Removes the manually-added event listeners from the root element. */\n  private _removeRootElementListeners(element: HTMLElement) {\n    element.removeEventListener('scroll', this._scrollUpdate, passiveEventListenerOptions);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Scale, SearchOptions } from './models';\nimport { PrintDPI } from './services';\n\nexport interface PdfViewerConfig {\n  initialPage: number;\n  scale: Scale;\n  rotation: number;\n  searchOptions: SearchOptions;\n  printDPI: PrintDPI;\n  maxPagesRendered: number;\n  rendererPagesThreshold: number;\n}\n\nexport const DEFAULT_PDF_VIEWER_CONFIG: PdfViewerConfig = {\n  initialPage: 1,\n  scale: 'auto',\n  rotation: 0,\n  searchOptions: {\n    phraseSearch: true,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n  },\n  printDPI: PrintDPI.HIGH,\n  maxPagesRendered: 10,\n  rendererPagesThreshold: 2,\n};\n\nexport function MNJ_PDF_VIEWER_CONFIGURATION_FACTORY(impl: PdfViewerConfig): PdfViewerConfig {\n  return impl || DEFAULT_PDF_VIEWER_CONFIG;\n}\n\n/**\n * Injection token that can be used to configure the\n * behavior of the pdf viewer components.\n */\nexport const MNJ_PDF_VIEWER_CONFIGURATION = new InjectionToken<PdfViewerConfig>('PDF_VIEW_CONFIG');\n\nexport const MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER = {\n  provide: MNJ_PDF_VIEWER_CONFIGURATION,\n  useFactory: MNJ_PDF_VIEWER_CONFIGURATION_FACTORY,\n};\n","import * as PDFJS from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport {\n  DEFAULT_SCALE_DELTA,\n  DEFAULT_SCALE_VALUE,\n  MAX_SCALE,\n  MIN_SCALE,\n  PdfProperties,\n  RendererType,\n  Scale,\n  SearchOptions,\n} from './models';\nimport { PdfAttachmentViewerRef } from './pdf-attachment-viewer-ref';\nimport { Disposable } from './pdf-container';\nimport { PdfOutlineViewerRef } from './pdf-outline-viewer-ref';\nimport { PdfPageViewerRef } from './pdf-page-viewer-ref';\nimport { PdfThumbnailViewerRef } from './pdf-thumbnail-viewer-ref';\nimport {\n  PdfDownloadManager,\n  PdfFindController,\n  PdfLinkService,\n  PdfPrintManager,\n  PdfRenderingQueue,\n  PrintDPI,\n} from './services';\nimport { getPageSizeMilliliters, getPDFFileNameFromURL, isValidRotation } from './utils';\n\nexport class PdfViewerRef implements Disposable {\n  private _pdfSrc: string | Uint8Array | ArrayBuffer;\n  private _pdfDocument: PDFJS.PDFDocumentProxy;\n  private pdfProperties: PdfProperties;\n\n  private _currentPage: number;\n  private _currentScale: Scale;\n  private _currentRotation: number;\n  private _currentSearchQuery: string;\n  private _currentSearchOptions: SearchOptions;\n\n  private _pdfPageViewer: PdfPageViewerRef;\n  private _pdfThumbnailViewer: PdfThumbnailViewerRef;\n  public pdfOutlineViewer: PdfOutlineViewerRef;\n  public pdfAttachmentViewer: PdfAttachmentViewerRef;\n\n  // Events\n  /** Emits when pdf has been loaded */\n  pdfLoaded = new Subject<{ pdf: PDFJS.PDFDocumentProxy }>();\n  /** Emits when pdf properties has been retrieved */\n  pdfPropertiesLoaded = new Subject<{ properties: PdfProperties }>();\n  /** Emits when pdfjs is rendering the printable version */\n  pdfPrintProgress = new Subject<{ progress: number }>();\n\n  constructor(\n    public renderingQueue: PdfRenderingQueue,\n    public linkService: PdfLinkService,\n    public downloadManager: PdfDownloadManager,\n    public printManager: PdfPrintManager,\n    public findController: PdfFindController\n  ) {\n    this.findController.linkService = this.linkService;\n  }\n\n  get currentPage(): number {\n    return this._currentPage;\n  }\n\n  set currentPage(value: number) {\n    if (value < 0 && value > this.pdfDocument.numPages) {\n      throw new Error(`Page ${value} doesn't exist in the current pf document`);\n    }\n    if (this.pdfPageViewer) {\n      this.pdfPageViewer.currentPageNumber = value;\n    }\n    this._currentPage = value;\n  }\n\n  get currentScale(): Scale {\n    return this._currentScale;\n  }\n\n  set currentScale(value: Scale) {\n    if (value < MIN_SCALE || value > MAX_SCALE) {\n      throw new Error(`Scale must be a value between ${MIN_SCALE} and ${MAX_SCALE}`);\n    }\n    if (this.pdfPageViewer) {\n      this.pdfPageViewer.currentScale = value;\n    }\n\n    this._currentScale = value;\n  }\n\n  get currentRotation(): number {\n    return this._currentRotation;\n  }\n\n  set currentRotation(value: number) {\n    if (!isValidRotation(value)) {\n      throw new Error(`${value} is not a valid rotation value must be one of 0, 90, 180, 270`);\n    }\n    if (this.pdfPageViewer) {\n      this.pdfPageViewer.pagesRotation = value;\n    }\n    if (this.pdfThumbnailViewer) {\n      this.pdfThumbnailViewer.pagesRotation = value;\n    }\n    this._currentRotation = value;\n  }\n\n  get currentSearchQuery(): string {\n    return this._currentSearchQuery || '';\n  }\n\n  set currentSearchQuery(value: string) {\n    this._currentSearchQuery = value;\n    this.search();\n  }\n\n  get currentSearchOptions(): SearchOptions {\n    return this._currentSearchOptions;\n  }\n\n  set currentSearchOptions(value: SearchOptions) {\n    this._currentSearchOptions = value;\n    this.search();\n  }\n\n  zoomIn(ticks) {\n    if (this.pdfPageViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfPageViewer.currentScaleNumber;\n    do {\n      // @ts-ignore\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < MAX_SCALE);\n    this.pdfPageViewer.currentScale = newScale;\n  }\n\n  zoomOut(ticks) {\n    if (this.pdfPageViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfPageViewer.currentScaleNumber;\n    do {\n      // @ts-ignore\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > MIN_SCALE);\n    this.pdfPageViewer.currentScale = newScale;\n  }\n\n  zoomReset() {\n    if (this.pdfPageViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfPageViewer.currentScale = DEFAULT_SCALE_VALUE;\n  }\n\n  downloadPdf(pdfSrc: string | Uint8Array | ArrayBuffer) {\n    const fileName = this.pdfProperties.fileName || getPDFFileNameFromURL(pdfSrc);\n    if (!this.pdfDocument) {\n      if (!pdfSrc) {\n        throw new Error(`There is no pdf loaded`);\n      }\n      this.downloadManager.downloadUrl(pdfSrc, fileName);\n    }\n    this.pdfDocument\n      .getData()\n      .then((data) => {\n        const blob = new Blob([data], { type: 'application/pdf' });\n        this.downloadManager.download(blob, pdfSrc, fileName);\n      })\n      .catch((err) => {\n        console.log(err);\n        this.downloadManager.downloadUrl(pdfSrc, fileName);\n      }); // Error occurred, try downloading with the URL.\n  }\n\n  printPdf(printDPI: PrintDPI) {\n    if (!this.pdfDocument) {\n      throw new Error('There is no pdf to print');\n    }\n    if (!this.pdfPageViewer.pageViewsReady) {\n      throw new Error('Print is not ready, pdf loading');\n    }\n    const pagesOverview = this.pdfPageViewer.getPagesOverview();\n    this.printManager.print(this, this.pdfDocument, pagesOverview, printDPI);\n  }\n\n  search() {\n    this.findController.executeCommand('find', {\n      query: this.currentSearchQuery,\n      ...this._currentSearchOptions,\n    });\n  }\n\n  findNext() {\n    this.findController.executeCommand('findagain', {\n      query: this.currentSearchQuery,\n      ...this._currentSearchOptions,\n      ...{ findPrevious: false },\n    });\n  }\n\n  findPrevious() {\n    this.findController.executeCommand('findagain', {\n      query: this.currentSearchQuery,\n      ...this._currentSearchOptions,\n      ...{ findPrevious: true },\n    });\n  }\n\n  getDocumentProperties(): Promise<PdfProperties> {\n    return Promise.all([\n      this.pdfDocument.getDownloadInfo(),\n      this.pdfDocument.getMetadata(),\n      this.pdfDocument.getPage(1),\n    ]).then(([size, data, page]) => {\n      const { info, contentDispositionFilename } = data;\n      const docProperties: PdfProperties = {\n        fileName: contentDispositionFilename || getPDFFileNameFromURL(this._pdfSrc || ''),\n        fileSize: size.length,\n        title: info.Title,\n        author: info.Author,\n        subject: info.Subject,\n        keywords: info.Keywords,\n        creationDate: PDFJS.PDFDateString.toDateObject(info.CreationDate),\n        updateDate: PDFJS.PDFDateString.toDateObject(info.ModDate),\n        creator: info.Creator,\n        pdfProducer: info.Producer,\n        pdfVersion: info.PDFFormatVersion,\n        pageCount: this.pdfDocument.numPages,\n        pageSize: getPageSizeMilliliters(page),\n      };\n      this.pdfProperties = docProperties;\n      return docProperties;\n    });\n  }\n\n  cleanUp() {\n    if (this.pdfPageViewer) {\n      this.pdfPageViewer.cleanup();\n    }\n    if (this.pdfThumbnailViewer) {\n      this.pdfThumbnailViewer.cleanup();\n    }\n\n    // We don't want to remove fonts used by active page SVGs.\n    if (this.pdfPageViewer.renderType !== RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  }\n\n  dispose() {\n    if (!this.pdfDocument) {\n      return; // run cleanup when document is loaded\n    }\n    if (this.pdfPageViewer) {\n      this.pdfPageViewer.dispose();\n    }\n    if (this.pdfThumbnailViewer) {\n      this.pdfThumbnailViewer.dispose();\n    }\n\n    // We don't want to remove fonts used by active page SVGs.\n    if (this.pdfPageViewer.renderType !== RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  }\n\n  syncPageAndThumbnail(pageIndex: number) {\n    this._currentPage = pageIndex;\n    if (this.pdfThumbnailViewer) {\n      this.pdfThumbnailViewer.scrollThumbnailIntoView(pageIndex);\n    }\n  }\n\n  get pdfSrc(): string | Uint8Array | ArrayBuffer {\n    return this._pdfSrc;\n  }\n\n  set pdfSrc(value: string | Uint8Array | ArrayBuffer) {\n    if (this._pdfSrc) {\n      this.cleanUp();\n    }\n    if (value) {\n      this._pdfSrc = value;\n      PDFJS.getDocument(value)\n        .promise.then((pdfDocument) => {\n          this.pdfDocument = pdfDocument;\n          this.pdfLoaded.next({ pdf: pdfDocument });\n        })\n        .then(() => {\n          this.getDocumentProperties().then((pdfProperties) =>\n            this.pdfPropertiesLoaded.next({ properties: pdfProperties })\n          );\n        });\n    }\n  }\n\n  get pdfDocument(): PDFJS.PDFDocumentProxy {\n    return this._pdfDocument;\n  }\n\n  set pdfDocument(value: PDFJS.PDFDocumentProxy) {\n    this._pdfDocument = value;\n    this.getDocumentProperties();\n    this.linkService.setDocument(this.pdfDocument);\n    if (this._pdfPageViewer) {\n      this._pdfPageViewer.setDocument(this.pdfDocument);\n    }\n    if (this._pdfThumbnailViewer) {\n      this._pdfThumbnailViewer.setDocument(this.pdfDocument);\n    }\n    if (this.pdfOutlineViewer) {\n      this.pdfOutlineViewer.setDocument(this.pdfDocument);\n    }\n    if (this.pdfAttachmentViewer) {\n      this.pdfAttachmentViewer.setDocument(this.pdfDocument);\n    }\n  }\n\n  get pdfPageViewer(): PdfPageViewerRef {\n    return this._pdfPageViewer;\n  }\n\n  set pdfPageViewer(value: PdfPageViewerRef) {\n    this._pdfPageViewer = value;\n    if (this.pdfDocument) {\n      this.pdfPageViewer.setDocument(this.pdfDocument);\n    }\n  }\n\n  get pdfThumbnailViewer(): PdfThumbnailViewerRef {\n    return this._pdfThumbnailViewer;\n  }\n\n  set pdfThumbnailViewer(value: PdfThumbnailViewerRef) {\n    this._pdfThumbnailViewer = value;\n    if (this.pdfDocument) {\n      this.pdfThumbnailViewer.setDocument(this.pdfDocument);\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport * as PDFJSWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport { PdfViewerRef } from './pdf-viewer-ref';\n\nfunction registerWorker() {\n  PDFJS.GlobalWorkerOptions.workerSrc = PDFJSWorker;\n}\n\nfunction unRegisterWorker() {\n  PDFJS.GlobalWorkerOptions.workerSrc = null;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PdfViewerRegistry implements OnDestroy {\n  private _pdfViewerRefInstances: { [viewer: string]: PdfViewerRef } = {};\n\n  constructor() {}\n\n  registerPdfViewer(viewerId: string, pdfViewerRef: PdfViewerRef) {\n    if (Object.keys(this._pdfViewerRefInstances).length === 0) {\n      registerWorker();\n    }\n    this._pdfViewerRefInstances[viewerId] = pdfViewerRef;\n  }\n\n  removePdfViewer(viewerId: string) {\n    this._pdfViewerRefInstances[viewerId] = null;\n    if (Object.keys(this._pdfViewerRefInstances).length) {\n      unRegisterWorker();\n    }\n  }\n\n  private getReference(viewerId: string): PdfViewerRef {\n    const viewerRef = this._pdfViewerRefInstances[viewerId];\n    if (!viewerRef) {\n      throw new Error(`Viewer ${viewerId} does not exist on the page`);\n    }\n    return viewerRef;\n  }\n\n  ngOnDestroy(): void {\n    Object.keys(this._pdfViewerRefInstances).forEach((instance) => this.removePdfViewer(instance));\n  }\n}\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PdfAttachmentsViewer } from './directives/pdf-attachments-viewer';\nimport { PdfDownloadButton } from './directives/pdf-download-button';\nimport { PdfPageLoading } from './directives/pdf-page-loading';\nimport { PdfPageViewer } from './directives/pdf-page-viewer';\nimport { PdfPrintButton } from './directives/pdf-print-button';\nimport { PdfPropertiesButton } from './directives/pdf-properties-button';\nimport { PdfSearchInput } from './directives/pdf-search-input';\nimport { PdfThumbnailViewer } from './directives/pdf-thumbnail-viewer';\nimport { PdfTocViewer } from './directives/pdf-toc-viewer';\nimport { PdfUploadButton } from './directives/pdf-upload-button';\nimport { MnjPdfViewer } from './directives/pdf-viewer';\nimport { MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER } from './pdf-viewer-config';\n\n@NgModule({\n  imports: [CommonModule, ScrollingModule],\n  declarations: [\n    MnjPdfViewer,\n    PdfPageLoading,\n    PdfDownloadButton,\n    PdfPrintButton,\n    PdfThumbnailViewer,\n    PdfPageViewer,\n    PdfSearchInput,\n    PdfAttachmentsViewer,\n    PdfTocViewer,\n    PdfUploadButton,\n    PdfPropertiesButton,\n  ],\n  providers: [MNJ_PDF_VIEWER_CONFIGURATION_PROVIDER],\n  exports: [\n    MnjPdfViewer,\n    PdfPageLoading,\n    PdfDownloadButton,\n    PdfPrintButton,\n    PdfThumbnailViewer,\n    PdfPageViewer,\n    PdfSearchInput,\n    PdfAttachmentsViewer,\n    PdfTocViewer,\n    PdfUploadButton,\n    PdfPropertiesButton,\n  ],\n})\nexport class MnjPdfViewerModule {}\n","export * from './directives/pdf-attachments-viewer';\nexport * from './directives/pdf-download-button';\nexport * from './directives/pdf-page-loading';\nexport * from './directives/pdf-page-viewer';\nexport * from './directives/pdf-print-button';\nexport * from './directives/pdf-properties-button';\nexport * from './directives/pdf-search-input';\nexport * from './directives/pdf-thumbnail-viewer';\nexport * from './directives/pdf-toc-viewer';\nexport * from './directives/pdf-upload-button';\nexport * from './directives/pdf-viewer';\nexport * from './models';\nexport * from './services';\nexport * from './utils';\nexport * from './pdf-attachment-viewer-ref';\nexport * from './pdf-container';\nexport * from './pdf-viewer-events';\nexport * from './pdf-outline-viewer-ref';\nexport * from './pdf-page-ref';\nexport * from './pdf-page-viewer-ref';\nexport * from './pdf-viewer-ref';\nexport * from './pdf-thumbnail-ref';\nexport * from './pdf-thumbnail-viewer-ref';\nexport * from './pdf-viewer-config';\nexport * from './pdf-viewer.module';\nexport * from './pdf-viewer-registry';\n","export * from './pdf-download-manager.service';\nexport * from './pdf-find-controller';\nexport * from './pdf-rendering-queue';\nexport * from './pdf-link-service';\nexport * from './pdf-print-manager.service';\n","import { Injectable } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\n\n@Injectable({ providedIn: 'root' })\nexport class PdfDownloadManager {\n  constructor() {}\n\n  downloadUrl(url, filename) {\n    if (!PDFJS.createValidAbsoluteUrl(url, 'http://example.com')) {\n      return; // restricted/invalid URL\n    }\n    this._download(url + '#pdfjs.action=download', filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = PDFJS.createObjectURL(data, contentType, false);\n    this._download(blobUrl, filename);\n  }\n\n  download(blob, url, filename) {\n    const blobUrl = URL.createObjectURL(blob);\n    this._download(blobUrl, filename);\n    URL.revokeObjectURL(blobUrl);\n  }\n\n  private _download(blobUrl, filename) {\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = blobUrl;\n    a.target = '_parent';\n    // Use a.download if available. This increases the likelihood that\n    // the file is downloaded instead of opened by another PDF plugin.\n    if ('download' in a) {\n      a.download = filename;\n    }\n    // <a> must be in the document for IE and recent Firefox versions,\n    // otherwise .click() is ignored.\n    (document.body || document.documentElement).appendChild(a);\n    a.click();\n    a.remove();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as PDFJS from 'pdfjs-dist';\nimport { Subject } from 'rxjs';\nimport { PdfPageViewerRef } from '../pdf-page-viewer-ref';\nimport { getCharacterType, scrollIntoView } from '../utils';\nimport { PdfLinkService } from './pdf-link-service';\n\nexport enum FindState {\n  FOUND,\n  NOT_FOUND,\n  WRAPPED,\n  PENDING,\n}\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  '\\u2018': \"'\", // Left single quotation mark\n  '\\u2019': \"'\", // Right single quotation mark\n  '\\u201A': \"'\", // Single low-9 quotation mark\n  '\\u201B': \"'\", // Single high-reversed-9 quotation mark\n  '\\u201C': '\"', // Left double quotation mark\n  '\\u201D': '\"', // Right double quotation mark\n  '\\u201E': '\"', // Double low-9 quotation mark\n  '\\u201F': '\"', // Double high-reversed-9 quotation mark\n  '\\u00BC': '1/4', // Vulgar fraction one quarter\n  '\\u00BD': '1/2', // Vulgar fraction one half\n  '\\u00BE': '3/4', // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\n\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join('');\n    normalizationRegex = new RegExp(`[${replace}]`, 'g');\n  }\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\n@Injectable()\nexport class PdfFindController {\n  private _pdfPageContainer: PdfPageViewerRef;\n  private _linkService: PdfLinkService;\n  private _pdfDocument;\n  private _highlightMatches;\n  private _pageMatches;\n  private _pageMatchesLength;\n  private _selected;\n  private _state;\n  private _firstPageCapability;\n  private _dirtyMatch: boolean;\n  private _findTimeout;\n  private _scrollMatches;\n  private _resumePageIdx;\n  private _offset;\n  private _extractTextPromises = [];\n  private _pageContents = []; // Stores the normalized text for each page.\n  private _matchesCountTotal = 0;\n  private _pagesToSearch = null;\n  private _pendingFindMatches;\n  private _rawQuery;\n  private _normalizedQuery;\n\n  // Events\n  public searchComplete = new Subject<{ matchesCount }>();\n  public searchState = new Subject<{\n    state: FindState;\n    previous?;\n    matchesCount;\n  }>();\n\n  constructor() {\n    this._reset();\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== 'findhighlightallchange') {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (!this._pdfDocument || (pdfDocument && this._pdfDocument !== pdfDocument)) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === 'find') {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === 'findagain') {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === 'findhighlightallchange') {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT,\n    };\n    scrollIntoView(element, null, spot, true);\n  }\n\n  private _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = PDFJS.createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  private _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case 'findagain':\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this.linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        return (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        );\n\n      case 'findhighlightallchange':\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  private _prepareMatches(matchesWithLength, matches, matchesLength) {\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort((a, b) => (a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match));\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (this._isSubTerm(matchesWithLength, i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  private _isSubTerm(matchesWithLength, currentIndex) {\n    const currentElem = matchesWithLength[currentIndex];\n    const nextElem = matchesWithLength[currentIndex + 1];\n\n    // Check for cases like \"TAMEd TAME\".\n    if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n      currentElem.skipped = true;\n      return true;\n    }\n\n    // Check for cases like \"thIS IS\".\n    for (let i = currentIndex - 1; i >= 0; i--) {\n      const prevElem = matchesWithLength[i];\n      if (prevElem.skipped) {\n        continue;\n      }\n      if (prevElem.match + prevElem.matchLength < currentElem.match) {\n        break;\n      }\n      if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n        currentElem.skipped = true;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  private _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      matches.push(matchIdx);\n    }\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  private _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.match(/\\S+/g);\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (entireWord && !this._isEntireWord(pageContent, matchIdx, subqueryLen)) {\n          continue;\n        }\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false,\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(matchesWithLength, this._pageMatches[pageIndex], this._pageMatchesLength[pageIndex]);\n  }\n\n  private _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  private _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this.linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = PDFJS.createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then((pdfPage) => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            (textContent) => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              this._pageContents[i] = normalize(strBuf.join(''));\n              extractTextCapability.resolve(i);\n            },\n            (reason) => {\n              console.error(`Unable to get text content for page ${i + 1}`, reason);\n              // Page error -- assuming no text content.\n              this._pageContents[i] = '';\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  private _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this.linkService.page = index + 1;\n    }\n    this._pdfPageContainer.updateMatches(index);\n  }\n\n  private _updateAllPages() {\n    this._pdfPageContainer.updateMatches(-1);\n  }\n\n  private _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this.linkService.page - 1;\n    const numPages = this.linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n        this._pendingFindMatches[i] = true;\n        this._extractTextPromises[i].then((pageIdx) => {\n          delete this._pendingFindMatches[pageIdx];\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === '') {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if ((!previous && offset.matchIdx + 1 < numPageMatches) || (previous && offset.matchIdx > 0)) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  private _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  private _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error('There can only be one pending page.');\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  private _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this.linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  private _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this.searchComplete.next({ matchesCount: this._requestMatchesCount() });\n  }\n\n  _updateUIState(state, previous?) {\n    this.searchState.next({\n      state: state,\n      previous: previous,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  get pdfPageContainer(): PdfPageViewerRef {\n    return this._pdfPageContainer;\n  }\n\n  set pdfPageContainer(value: PdfPageViewerRef) {\n    this._pdfPageContainer = value;\n  }\n\n  get linkService(): PdfLinkService {\n    return this._linkService;\n  }\n\n  set linkService(value: PdfLinkService) {\n    this._linkService = value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { parseQueryString } from '../utils';\n\n@Injectable()\nexport class PdfLinkService {\n  private baseUrl;\n  private pdfDocument;\n  private pdfViewer;\n  private pdfHistory;\n  private _pagesRefCache;\n\n  public externalLinkRel;\n  public externalLinkEnabled = true;\n  public externalLinkTarget;\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  navigateTo(dest) {\n    const goToDestination = ({ namedDest, explicitDest }) => {\n      // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n      const destRef = explicitDest[0];\n      let pageNumber;\n\n      if (destRef instanceof Object) {\n        pageNumber = this._cachedPageNumber(destRef);\n\n        if (pageNumber === null) {\n          // Fetch the page reference if it's not yet available. This could\n          // only occur during loading, before all pages have been resolved.\n          this.pdfDocument\n            .getPageIndex(destRef)\n            .then((pageIndex) => {\n              this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({ namedDest, explicitDest });\n            })\n            .catch(() =>\n              console.error(\n                `PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${dest}\".`\n              )\n            );\n          return;\n        }\n      } else if (Number.isInteger(destRef)) {\n        pageNumber = destRef + 1;\n      } else {\n        console.error(\n          `PDFLinkService.navigateTo: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${dest}\".`\n        );\n        return;\n      }\n\n      if (this.pdfHistory) {\n        // Update the browser history before scrolling the new destination into\n        // view, to be able to accurately capture the current document position.\n        this.pdfHistory.pushCurrentPosition();\n        this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n      }\n\n      this.pdfViewer.scrollPageIntoView({\n        pageNumber,\n        destArray: explicitDest,\n      });\n    };\n\n    new Promise<{ namedDest: string; explicitDest: string }>((resolve) => {\n      if (typeof dest === 'string') {\n        this.pdfDocument.getDestination(dest).then((destArray) => {\n          resolve({\n            namedDest: dest,\n            explicitDest: destArray,\n          });\n        });\n        return;\n      }\n      const data = {\n        namedDest: '',\n        explicitDest: dest,\n      };\n      resolve(data);\n    }).then((data) => {\n      if (!Array.isArray(data.explicitDest)) {\n        console.error(\n          `PDFLinkService.navigateTo: \"${data.explicitDest}\" is` + ` not a valid destination array, for dest=\"${dest}\".`\n        );\n        return;\n      }\n      goToDestination(data);\n    });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === 'string') {\n      return this.getAnchorUrl('#' + escape(dest));\n    }\n    if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      return this.getAnchorUrl('#' + escape(str));\n    }\n    return this.getAnchorUrl('');\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || '') + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    let pageNumber, dest;\n    if (hash.includes('=')) {\n      const params = parseQueryString(hash);\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if ('nameddest' in params) {\n        this.navigateTo(params.nameddest);\n        return;\n      }\n      if ('page' in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n      if ('zoom' in params) {\n        // Build the destination array.\n        const zoomArgs = params.zoom.split(','); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes('Fit')) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: 'XYZ' },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === 'Fit' || zoomArg === 'FitB') {\n            dest = [null, { name: zoomArg }];\n          } else if (zoomArg === 'FitH' || zoomArg === 'FitBH' || zoomArg === 'FitV' || zoomArg === 'FitBV') {\n            dest = [null, { name: zoomArg }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n          } else if (zoomArg === 'FitR') {\n            if (zoomArgs.length !== 5) {\n              console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n            } else {\n              dest = [null, { name: zoomArg }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n            }\n          } else {\n            console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not ` + 'a valid zoom value.');\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === 'string' || this.isValidExplicitDestination(dest)) {\n        this.navigateTo(dest);\n        return;\n      }\n      console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not ` + 'a valid destination.');\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case 'GoBack':\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n        break;\n\n      case 'GoForward':\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n        break;\n\n      case 'NextPage':\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n        break;\n\n      case 'PrevPage':\n        if (this.page > 1) {\n          this.page--;\n        }\n        break;\n\n      case 'LastPage':\n        this.page = this.pagesCount;\n        break;\n\n      case 'FirstPage':\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n  }\n\n  private isValidExplicitDestination(dest) {\n    if (!Array.isArray(dest)) {\n      return false;\n    }\n    const destLength = dest.length;\n    if (destLength < 2) {\n      return false;\n    }\n    const page = dest[0];\n    if (\n      !(typeof page === 'object' && Number.isInteger(page.num) && Number.isInteger(page.gen)) &&\n      !(Number.isInteger(page) && page >= 0)\n    ) {\n      return false;\n    }\n    const zoom = dest[1];\n    if (!(typeof zoom === 'object' && typeof zoom.name === 'string')) {\n      return false;\n    }\n    let allowNull = true;\n    switch (zoom.name) {\n      case 'XYZ':\n        if (destLength !== 5) {\n          return false;\n        }\n        break;\n      case 'Fit':\n      case 'FitB':\n        return destLength === 2;\n      case 'FitH':\n      case 'FitBH':\n      case 'FitV':\n      case 'FitBV':\n        if (destLength !== 3) {\n          return false;\n        }\n        break;\n      case 'FitR':\n        if (destLength !== 6) {\n          return false;\n        }\n        allowNull = false;\n        break;\n      default:\n        return false;\n    }\n    for (let i = 2; i < destLength; i++) {\n      const param = dest[i];\n      if (!(typeof param === 'number' || (allowNull && param === null))) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  _cachedPageNumber(pageRef) {\n    const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PdfViewerRef } from '../pdf-viewer-ref';\nimport { CSS_UNITS } from '../utils';\n\nexport enum PrintDPI {\n  LOW = 150,\n  MEDIUM = 300,\n  HIGH = 600,\n  ULTRA = 1200,\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PdfPrintManager {\n  private _pdfViewer: PdfViewerRef;\n  private overlayPromise;\n  private activeService;\n  private scratchCanvas: HTMLCanvasElement;\n  private printContainer: HTMLDivElement;\n  private pageStyleSheet;\n\n  constructor() {}\n\n  print(pdfViewer: PdfViewerRef, pdfDocument, pagesOverview, printDpi: PrintDPI) {\n    if (this.activeService) {\n      console.warn('Ignored window.print() because of a pending print job.');\n      return;\n    }\n    this._pdfViewer = pdfViewer;\n    this.ensureOverlay();\n\n    try {\n      this._dispatchEvent('beforeprint');\n    } finally {\n      if (!this.activeService) {\n        console.error('Expected print service to be initialized.');\n        this.ensureOverlay();\n      } else {\n        this.layout(pagesOverview)\n          .then(() => this.renderPages(pdfDocument, pagesOverview, printDpi).then(() => this.performPrint()))\n          .then(() => {\n            // aborts acts on the \"active\" print request, so we need to check\n            // whether the print request (activeServiceOnEntry) is still active.\n            // Without the check, an unrelated print request (created after aborting\n            // this print request while the pages were being generated) would be\n            // aborted.\n            if (this.active) {\n              this._abort();\n            }\n          });\n      }\n    }\n  }\n\n  layout(pagesOverview) {\n    return new Promise((resolve) => {\n      this.throwIfInactive();\n      const body = document.querySelector('body');\n\n      this.printContainer = document.createElement('div');\n      this.printContainer.classList.add('docu-printable');\n      this.printContainer.style.display = 'none';\n      body.appendChild(this.printContainer);\n      body.setAttribute('data-pdf-printing', `${true}`);\n\n      const hasEqualPageSizes = pagesOverview.every(\n        (size) => size.width === pagesOverview[0].width && size.height === pagesOverview[0].height\n      );\n      if (!hasEqualPageSizes) {\n        console.warn('Not all pages have the same size. The printed result may be incorrect!');\n      }\n\n      const pageSize = pagesOverview[0];\n\n      // Insert a @page + size rule to make sure that the page size is correctly\n      // set. Note that we assume that all pages have the same size, because\n      // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n      this.pageStyleSheet = document.createElement('style');\n      this.pageStyleSheet.textContent = this._addStylesForPrinting(pageSize.width, pageSize.height);\n      body.appendChild(this.pageStyleSheet);\n\n      resolve();\n    });\n  }\n\n  renderProgress(index, total) {\n    const progress = Math.round((index / total) * 100);\n    this._pdfViewer.pdfPrintProgress.next({ progress });\n  }\n\n  private renderPages(pdfDocument, pagesOverview, printDpi: PrintDPI) {\n    let currentPage = -1;\n    const pageCount = pagesOverview.length;\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n      if (++currentPage >= pageCount) {\n        this.renderProgress(pageCount, pageCount);\n        resolve();\n        return;\n      }\n      const index = currentPage;\n      this.renderProgress(index, pageCount);\n      this.renderPage(pdfDocument, index + 1, pagesOverview[index], printDpi)\n        .then((page) => this.useRenderedPage(page))\n        .then(() => renderNextPage(resolve, reject), reject);\n    };\n    return new Promise(renderNextPage);\n  }\n\n  private destroy() {\n    if (this.activeService !== this) {\n      // |activeService| cannot be replaced without calling destroy() first,\n      // so if it differs then an external consumer has a stale reference to\n      // us.\n      return;\n    }\n\n    const body = document.querySelector('body');\n    body.removeAttribute('data-pdfprinting');\n    this.printContainer.remove();\n    this.printContainer = null;\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    this.activeService = null;\n  }\n\n  private renderPage(pdfDocument, pageNumber, size, printDpi: PrintDPI) {\n    const scratchCanvas = this.activeService.scratchCanvas;\n\n    // The size of the canvas in pixels for printing.\n    const PRINT_UNITS = printDpi / 72.0;\n    scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n    scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n\n    // The physical size of the img as specified by the PDF document.\n    const width = Math.floor(size.width * CSS_UNITS) + 'px';\n    const height = Math.floor(size.height * CSS_UNITS) + 'px';\n\n    const ctx = scratchCanvas.getContext('2d');\n    ctx.save();\n    ctx.fillStyle = 'rgb(255, 255, 255)';\n    ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n    ctx.restore();\n\n    return pdfDocument\n      .getPage(pageNumber)\n      .then((pdfPage) => {\n        const renderContext = {\n          canvasContext: ctx,\n          transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n          viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n          intent: 'print',\n        };\n        return pdfPage.render(renderContext).promise;\n      })\n      .then(() => ({ width, height }));\n  }\n\n  private useRenderedPage(printItem) {\n    this.throwIfInactive();\n    const img = document.createElement('img');\n    img.style.width = printItem.width;\n    img.style.height = printItem.height;\n\n    const scratchCanvas: HTMLCanvasElement = this.scratchCanvas;\n    if ('toBlob' in scratchCanvas) {\n      scratchCanvas.toBlob((blob) => (img.src = URL.createObjectURL(blob)));\n    } else {\n      // @ts-ignore\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n\n    return new Promise((resolve, reject) => {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  }\n\n  private performPrint() {\n    this.throwIfInactive();\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n        this.printContainer.style.display = 'block';\n        print.call(window);\n        // Delay promise resolution in case print() was not synchronous.\n        setTimeout(resolve, 20); // Tidy-up.\n      }, 0);\n    });\n  }\n\n  private ensureOverlay() {\n    if (!this.overlayPromise) {\n      this.overlayPromise = new Promise((resolve) => resolve());\n    }\n    this.scratchCanvas = document.createElement('canvas');\n    this.activeService = this;\n    return this.overlayPromise;\n  }\n\n  private throwIfInactive() {\n    if (!this.active) {\n      throw new Error('This print request was cancelled or completed.');\n    }\n  }\n\n  private _dispatchEvent(eventType) {\n    const event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventType, false, false, 'custom');\n    window.dispatchEvent(event);\n  }\n\n  private _abort() {\n    if (this.activeService) {\n      this.destroy();\n    }\n  }\n\n  private _addStylesForPrinting(width: number, height: number) {\n    // Insert a @page + size rule to make sure that the page size is correctly\n    // set. Note that we assume that all pages have the same size, because\n    // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n    // \"size:<width> <height>\" is what we need. But also add \"A4\" because\n    // Firefox incorrectly reports support for the other value.\n    const pageStyle =\n      '@supports ((size:A4) and (size:1pt 1pt)) {' +\n      '@page { size: ' +\n      width +\n      'pt ' +\n      height +\n      'pt;' +\n      ' margin: 0; }' +\n      '}';\n    // Print styles for the whole document to avoid getting non related pdf elements from the DOM\n    const documentStyles =\n      '@media print {' +\n      '* { margin: 0; padding: 0; }' +\n      'body > *:not(.mnj-printable) { display: none; }' +\n      '.mnj-printable { height: 100%; }' +\n      '.mnj-printable > div { ' +\n      'position: relative; top: 0; left: 0; width: 1px; height: 1px; overflow: visible; ' +\n      'page-break-after: always; page-break-inside: avoid;' +\n      '}' +\n      '.mnj-printable canvas, .mnj-printable img { display: block; }';\n    return pageStyle + documentStyles;\n  }\n\n  get active() {\n    return this === this.activeService;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PdfContainerItem } from '../pdf-container';\nimport { PdfPageViewerRef } from '../pdf-page-viewer-ref';\nimport { PdfThumbnailViewerRef } from '../pdf-thumbnail-viewer-ref';\n\nexport const CLEANUP_TIMEOUT = 30000;\n\nexport enum RenderingStates {\n  INITIAL,\n  RUNNING,\n  PAUSED,\n  FINISHED,\n}\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\n@Injectable()\nexport class PdfRenderingQueue {\n  private pdfViewer: PdfPageViewerRef;\n  private pdfThumbnailViewer: PdfThumbnailViewerRef;\n  private onIdle;\n  private highestPriorityPage: string;\n  private idleTimeout;\n  private printing = false;\n  private isThumbnailViewEnabled = false;\n\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {PdfContainerItem} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view: PdfContainerItem) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages?) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer && this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.pdfThumbnailViewer.forceRendering()) {\n      return;\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle, CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {PdfContainerItem} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {PdfContainerItem} view\n   */\n  renderView(view: PdfContainerItem) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view.draw().finally(() => this.renderHighestPriority());\n        break;\n    }\n    return true;\n  }\n}\n","import * as PDFJS from 'pdfjs-dist';\n\nexport class AnnotationLayerBuilder {\n  public div: HTMLDivElement;\n  private _cancelled: boolean;\n\n  constructor(\n    private pageDiv,\n    private pdfPage,\n    private linkService,\n    private downloadManager,\n    private imageResourcesPath = '',\n    private renderInteractiveForms = false\n  ) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param viewport\n   * @param {string} intent (default value is 'display')\n   */\n  render(viewport: PDFJS.PageViewport, intent = 'display') {\n    this.pdfPage.getAnnotations({ intent }).then((annotations) => {\n      if (this._cancelled) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        PDFJS.AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        if (annotations.length === 0) {\n          return;\n        }\n        this.div = document.createElement('div');\n        this.div.className = 'annotationLayer';\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        PDFJS.AnnotationLayer.render(parameters);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute('hidden', 'true');\n  }\n}\n\nexport class DefaultAnnotationLayerFactory {\n  static createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    imageResourcesPath = 'assets/images/',\n    renderInteractiveForms = false\n  ) {\n    return new AnnotationLayerBuilder(\n      pageDiv,\n      pdfPage,\n      linkService,\n      downloadManager,\n      imageResourcesPath,\n      renderInteractiveForms\n    );\n  }\n}\n","export enum CharacterType {\n  SPACE,\n  ALPHA_LETTER,\n  PUNCT,\n  HAN_LETTER,\n  KATAKANA_LETTER,\n  HIRAGANA_LETTER,\n  HALFWIDTH_KATAKANA_LETTER,\n  THAI_LETTER,\n}\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode && 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (charCode >= 0x3400 && charCode <= 0x9fff) || (charCode >= 0xf900 && charCode <= 0xfaff);\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  // tslint:disable-next-line:no-bitwise\n  return (charCode & 0xff80) === 0x0e00;\n}\n\nexport function getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (isAsciiAlpha(charCode) || isAsciiDigit(charCode) || charCode === /* UNDERSCORE = */ 0x5f) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n","export * from './anotation-layer';\nexport * from './find-utils';\nexport * from './page-view-buffer';\nexport * from './text-layer';\nexport * from './rotation';\nexport * from './ui-utils';\n","import { PdfPageRef } from '../pdf-page-ref';\n\nexport class PDFPageViewBuffer {\n  private data: PdfPageRef[] = [];\n\n  constructor(private size: number) {}\n\n  push(view: PdfPageRef) {\n    const i = this.data.findIndex((v) => v.id === view.id);\n    if (i >= 0) {\n      this.data.splice(i, 1);\n    }\n    this.data.push(view);\n    if (this.data.length > this.size) {\n      this.data.shift().destroy();\n    }\n  }\n\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  resize(newSize, pagesToKeep: PdfPageRef[]) {\n    this.size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(this.data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (this.data.length > this.size) {\n      this.data.shift().destroy();\n    }\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n","export function rotateLeft(actualRotation: number) {\n  return _rotate(actualRotation, -90);\n}\n\nexport function rotateRight(actualRotation: number) {\n  return _rotate(actualRotation, 90);\n}\n\nexport function isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction _rotate(actualRotation: number, degrees: number) {\n  return (actualRotation + 360 + degrees) % 360;\n}\n","import * as PDFJS from 'pdfjs-dist';\nimport { PdfFindController } from '../services';\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nexport class TextLayerBuilder {\n  private renderingDone = false;\n\n  private textContent = null;\n  private textContentItemsStr = [];\n  private textContentStream = null;\n  private textDivs = [];\n\n  private pageNumber;\n  private pageIdx;\n  private matches;\n\n  private textLayerRenderTask;\n\n  constructor(\n    private textLayerDiv,\n    private pageIndex,\n    private viewport,\n    private findController = null,\n    private enhanceTextSelection = false\n  ) {\n    this.textLayerDiv = textLayerDiv;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement('div');\n      endOfContent.className = 'endOfContent';\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = PDFJS.renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(() => {\n      this.textLayerDiv.appendChild(textLayerFrag);\n      this._finishRendering();\n      this._updateMatches();\n    });\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { findController, textContentItemsStr } = this;\n\n    let i = 0;\n    let iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error('Could not find a matching mapping');\n      }\n\n      const match: {\n        begin?: {\n          divIdx: number;\n          offset: number;\n        };\n        end?: {\n          divIdx: number;\n          offset: number;\n        };\n      } = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      if (matchesLength) {\n        // Multiterm search.\n        matchIdx += matchesLength[m];\n      } else {\n        // Phrase search.\n        matchIdx += queryLen;\n      }\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className?) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = '';\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className?) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement('span');\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? ' selected' : '';\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(begin.divIdx, begin.offset, end.offset, 'highlight' + highlightSuffix);\n      } else {\n        appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, 'highlight begin' + highlightSuffix);\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = 'highlight middle' + highlightSuffix;\n        }\n        beginText(end, 'highlight end' + highlightSuffix);\n      }\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    // Only show matches when all rendering is done.\n    if (!this.renderingDone) {\n      return;\n    }\n    const { findController, matches, pageIdx, textContentItemsStr, textDivs } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = '';\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * moved up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    div.addEventListener('mousedown', () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        return;\n      }\n\n      const end = div.querySelector('.endOfContent');\n      if (!end) {\n        return;\n      }\n      end.classList.add('active');\n    });\n\n    div.addEventListener('mouseup', () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(false);\n        return;\n      }\n\n      const end = div.querySelector('.endOfContent');\n      if (!end) {\n        return;\n      }\n      end.classList.remove('active');\n    });\n  }\n}\n\nexport class DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param viewport\n   * @param {PdfFindController} findController\n   * @param {boolean} enhanceTextSelection\n   * @returns {TextLayerBuilder}\n   */\n  static createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport: PDFJS.PageViewport,\n    findController: PdfFindController,\n    enhanceTextSelection = true\n  ) {\n    return new TextLayerBuilder(textLayerDiv, pageIndex, viewport, findController, enhanceTextSelection);\n  }\n}\n","/**\n * UI Utils\n */\nimport { PdfContainerItem } from '../pdf-container';\n\nexport const CSS_UNITS = 96.0 / 72.0;\n\nexport interface PageVisibility {\n  id: number;\n  x: number;\n  y: number;\n  percent: number;\n  view: PdfContainerItem;\n}\n\nexport interface VisiblePages {\n  first: PageVisibility;\n  last: PageVisibility;\n  views: PageVisibility[];\n}\n\nexport function parseQueryString(query) {\n  const parts = query.split('&');\n  const params = Object.create(null);\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split('=');\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\n\nexport function getVisibleElements(\n  container: HTMLElement,\n  views: PdfContainerItem[],\n  sortByVisibility = false,\n  horizontal = false\n): VisiblePages {\n  const top = container.scrollTop;\n  const bottom = top + container.clientHeight;\n  const left = container.scrollLeft;\n  const right = left + container.clientWidth;\n\n  const visible = [];\n  const numViews = views.length;\n\n  let firstVisibleElementInd: number;\n  if (numViews === 0) {\n    firstVisibleElementInd = 0;\n  } else {\n    firstVisibleElementInd = binarySearchFirstItem(views, (view) =>\n      horizontal\n        ? isElementRightAfterViewLeft(container, view.container)\n        : isElementBottomAfterViewTop(container, view.container)\n    );\n  }\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (firstVisibleElementInd > 0 && firstVisibleElementInd < numViews && !horizontal) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views.map((v) => v.container),\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i];\n    const pageContainer = view.container;\n    const currentWidth = pageContainer.offsetLeft + pageContainer.clientLeft;\n    const currentHeight = pageContainer.offsetTop + pageContainer.clientTop;\n    const viewWidth = pageContainer.clientWidth;\n    const viewHeight = pageContainer.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (viewBottom <= top || currentHeight >= bottom || viewRight <= left || currentWidth >= right) {\n      continue;\n    }\n\n    const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    // tslint:disable-next-line:no-bitwise\n    const percent = (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) / viewHeight / viewWidth) | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n    });\n  }\n\n  const first = visible[0];\n  const last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first: first, last: last, views: visible };\n}\n\nexport function binarySearchFirstItem<T = any>(items: T[], condition: (item: T) => boolean): number {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (items.length === 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    // tslint:disable-next-line:no-bitwise\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n\n  return minIndex; /* === maxIndex */\n}\n\nexport function isElementBottomAfterViewTop(element: HTMLElement, view: HTMLElement): boolean {\n  const viewBottom = view.offsetTop + view.clientTop + view.clientHeight;\n  return viewBottom > element.scrollTop;\n}\n\nexport function isElementRightAfterViewLeft(element: HTMLElement, view: HTMLElement): boolean {\n  const viewRight = view.offsetLeft + view.clientLeft + view.clientWidth;\n  return viewRight > element.scrollLeft;\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index: number, views: HTMLElement[], top: number): number {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index];\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1];\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i];\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nexport function getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nexport function approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nexport function roundToDivide(elem, div) {\n  const r = elem % div;\n  return r === 0 ? elem : Math.round(elem - r + div);\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nexport function watchScroll(viewAreaElement, callback) {\n  const debounceScroll = () => {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener('scroll', debounceScroll, true);\n  return state;\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param parent - The element containing the item we want to make visible\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nexport function scrollIntoView(element, parent?, spot?, skipOverflowHiddenElements = false) {\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n  parent = parent || element.offsetParent;\n  if (!parent) {\n    console.error('offsetParent is not set -- cannot scroll');\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop - parent.offsetTop;\n  let offsetX = element.offsetLeft + element.clientLeft - parent.offsetLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth) ||\n    (skipOverflowHiddenElements && getComputedStyle(parent).overflow === 'hidden')\n  ) {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\nexport function isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nexport function getPDFFileNameFromURL(url, defaultFilename = 'document.pdf') {\n  if (typeof url !== 'string') {\n    return defaultFilename;\n  }\n  if (isDataSchema(url)) {\n    console.warn('getPDFFileNameFromURL: ' + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //            SCHEME        HOST         1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename: RegExpExecArray | string =\n    reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes('%')) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n  while (i < ii && url[i].trim() === '') {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === 'data:';\n}\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nexport function getPageSizeMilliliters({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n  const sizeMillimeters = {\n    width: Math.round(width * 25.4 * 10) / 10,\n    height: Math.round(height * 25.4 * 10) / 10,\n  };\n\n  return {\n    width: changeOrientation ? sizeMillimeters.height : sizeMillimeters.width,\n    height: changeOrientation ? sizeMillimeters.width : sizeMillimeters.height,\n  };\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { animate, style, transition, trigger } from '@angular/animations';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  MnjPdfViewer,\n  PdfDocumentPropertiesEvent,\n  PdfLoadingEnd,\n  PdfPageScaleChangingEvent,\n  PdfProperties,\n  rotateLeft,\n  rotateRight,\n  Scale,\n} from 'mnj-ngx-pdfviewer';\nimport { PdfPrintProgressEvent } from 'projects/mnj-ngx-pdfviewer/src/lib';\n\nconst PDF_SRC_DATA = 'pdf_src';\n\nconst ZoomOptions = {\n  0.5: '50%',\n  0.75: '75%',\n  1: '100%',\n  1.5: '150%',\n  2: '200%',\n  2.5: '250%',\n  3: '300%',\n  3.5: '350%',\n  4: '400%',\n  auto: 'Auto',\n  'page-actual': 'Page Actual',\n  'page-width': 'Page width',\n  'page-height': 'Page height',\n  'page-fit': 'Page fit',\n};\n\nconst ZoomStep = 0.5;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({ transform: 'translateZ(-80px)', opacity: 0 }),\n        animate('0.4s linear', style({ transform: 'translateZ(0)', opacity: 1 })),\n      ]),\n      transition(':leave', [\n        style({ transform: 'translateZ(0)', opacity: 1 }),\n        animate('0.4s linear', style({ transform: 'translateZ(-80px)', opacity: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('controlsContainer') controlsContainer: ElementRef<HTMLDivElement>;\n  @ViewChild('pdfPropertiesDialog') propertiesDialog: TemplateRef<any>;\n  @ViewChild('viewer') pdfViewer: MnjPdfViewer;\n\n  @Input() pdfSrc: string | Uint8Array | ArrayBuffer =\n    window[PDF_SRC_DATA] || 'https://mozilla.github.io/pdf.js/web/compressed.tracemonkey-pldi-09.pdf';\n\n  pdf;\n\n  outlines = 0;\n  attachments = 0;\n\n  pdfProps: PdfProperties;\n\n  selectedScaleNumber = 1;\n\n  zoomOptions = ZoomOptions;\n\n  matchesFound: { total: number; current: number } = { total: 0, current: 0 };\n\n  _showLoader = false;\n  _loadingProgress = 0;\n\n  searchForm = new FormGroup({\n    caseSensitive: new FormControl(false),\n    entireWord: new FormControl(false),\n    highlightAll: new FormControl(true),\n    phraseSearch: new FormControl(false),\n  });\n\n  pageControl = new FormControl(1);\n  scaleControl = new FormControl(1);\n  rotationControl = new FormControl(0);\n\n  viewerForm = new FormGroup({\n    pageControl: this.pageControl,\n    scaleControl: this.scaleControl,\n    rotationControl: this.rotationControl,\n    searchControl: this.searchForm,\n  });\n\n  hiddenNodes = [];\n\n  color = 'accent';\n\n  set theme(value: 'light-theme' | 'dark-theme') {\n    if (value !== this._theme) {\n      this._applyTheme(value);\n      this._theme = value;\n    }\n  }\n\n  private _theme: 'light-theme' | 'dark-theme';\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    _elementRef: ElementRef<HTMLElement>,\n    private dialog: MatDialog,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _overlayContainer: OverlayContainer\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.theme = 'light-theme';\n    setTimeout((_) => this._updateControlVisibility());\n  }\n\n  private _updateControlVisibility(): void {\n    this.hiddenNodes = [];\n    const container = coerceElement(this.controlsContainer.nativeElement);\n    const children: HTMLCollection = container.children;\n    let actualWidth = container.clientWidth;\n    let index = 0;\n    while (actualWidth && index < children.length) {\n      const child: HTMLElement = children[index] as HTMLElement;\n      const style = getComputedStyle(child);\n      const childWidth =\n        child.offsetWidth +\n        parseFloat(style.borderLeftWidth) +\n        parseFloat(style.borderRightWidth) +\n        parseFloat(style.marginLeft) +\n        parseFloat(style.marginRight);\n      child.style.visibility = 'visible';\n      if (childWidth < actualWidth) {\n        actualWidth -= childWidth;\n      } else {\n        break;\n      }\n      index++;\n    }\n    // Left items must be hidden\n    for (index; index < children.length; index++) {\n      const child = children[index] as HTMLElement;\n      const node = child.cloneNode(true);\n      child.style.visibility = 'hidden';\n      this.hiddenNodes.push(node);\n    }\n    this._changeDetectorRef.detectChanges();\n  }\n\n  onPdfLoaded(pdf: PdfLoadingEnd): void {\n    this.pdf = pdf.pdf;\n    this.pdf.getOutline().then((r) => (this.outlines = (r && r.lenght) || 0));\n    this.pdf.getAttachments().then((r) => (this.attachments = (r && Object.keys(r).length) || 0));\n  }\n\n  onPdfProperties(pdfProps: PdfDocumentPropertiesEvent): void {\n    this.pdfProps = pdfProps.properties;\n  }\n\n  showProperties(pdfProps: PdfProperties): void {\n    this.pdfProps = pdfProps;\n    this.dialog.open(this.propertiesDialog);\n  }\n\n  previousPage(): void {\n    this.pageControl.setValue(Math.max(1, this.pageControl.value - 1));\n    this.selectPage();\n  }\n\n  selectPage(): void {\n    this.pdfViewer.page = this.pageControl.value;\n  }\n\n  nextPage(): void {\n    this.pageControl.patchValue(Math.min(this.pdf.numPages, this.pageControl.value + 1));\n    this.selectPage();\n  }\n\n  zoomOut(): void {\n    this.scaleControl.setValue(Math.max(0.4, this.selectedScaleNumber - ZoomStep));\n  }\n\n  zoomIn(): void {\n    this.scaleControl.setValue(Math.min(4, this.selectedScaleNumber + ZoomStep));\n  }\n\n  getScale(): Scale {\n    return this.scaleControl.value;\n  }\n\n  updateScale(event: PdfPageScaleChangingEvent): void {\n    this.scaleControl.setValue(event.actualScale);\n    this.selectedScaleNumber = event.actualScaleNumber;\n  }\n\n  getScaleOptionValue(value): void {\n    const parsedValue = Number.parseFloat(value);\n    return isNaN(parsedValue) ? value : parsedValue;\n  }\n\n  rotateLeft(): void {\n    this.rotationControl.setValue(rotateLeft(this.rotationControl.value));\n  }\n\n  rotateRight(): void {\n    this.rotationControl.setValue(rotateRight(this.rotationControl.value));\n  }\n\n  onSearchComplete(event): void {\n    this.matchesFound = event.matchesCount;\n  }\n\n  onSearchState(event): void {\n    this.matchesFound = event.matchesCount;\n  }\n\n  showNewTab(): void {\n    const externalViewer = window.open(location.origin, '_blank');\n    externalViewer[PDF_SRC_DATA] = this.pdfViewer.pdfSrc;\n  }\n\n  onPdfUploaded(pdf) {\n    this.pdfViewer.pdfSrc = pdf;\n  }\n\n  onPdfDropped(event): void {\n    event.preventDefault();\n    event.stopPropagation();\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      for (const file of files) {\n        if (file.type === 'application/pdf') {\n          const fileReader = new FileReader();\n          fileReader.onload = (evt: ProgressEvent) => {\n            // @ts-ignore\n            const buffer = evt.target.result;\n            this.pdfViewer.pdfSrc = new Uint8Array(buffer);\n          };\n          fileReader.readAsArrayBuffer(file);\n        }\n      }\n    }\n  }\n\n  onPrintProgress(event: PdfPrintProgressEvent) {\n    const { progress } = event;\n    if (progress === 0 || progress === 100) {\n      this._showLoader = false;\n      this._loadingProgress = 0;\n      return;\n    }\n    this._showLoader = true;\n    this._loadingProgress = progress;\n  }\n\n  _applyTheme(theme: 'light-theme' | 'dark-theme'): void {\n    this.document.body.classList.remove(this._theme);\n    this._overlayContainer.getContainerElement().classList.remove(this._theme);\n    this.document.body.classList.add(theme);\n    this._overlayContainer.getContainerElement().classList.add(theme);\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z6\" color=\"primary\">\n  <nav mat-toolbar-row class=\"header__nav\">\n    <span class=\"header__nav--title\">MNJ NGX PDF Viewer</span>\n    <span class=\"header__nav--spacer\"></span>\n    <button mat-icon-button [matMenuTriggerFor]=\"themeMenu\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path\n          d=\"M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n        />\n      </svg>\n    </button>\n    <mat-menu #themeMenu=\"matMenu\">\n      <button mat-menu-item (click)=\"theme = 'light-theme'\">Light Theme</button>\n      <button mat-menu-item (click)=\"theme = 'dark-theme'\">Dark Theme</button>\n    </mat-menu>\n    <a mat-button class=\"header__nav--github-button\" href=\"https://github.com/Davidmnj91/mnj-ngx-pdfviewer\">\n      <svg height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\">\n        <path\n          fill-rule=\"evenodd\"\n          d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n        ></path>\n      </svg>\n      Github\n    </a>\n  </nav>\n</mat-toolbar>\n<div *ngIf=\"_showLoader\" [@fadeInOut] class=\"spinner\">\n  <mat-spinner></mat-spinner>\n  <p class=\"mat-h3 spinner--progress\">{{ _loadingProgress }}%</p>\n</div>\n<mat-card class=\"main\">\n  <div class=\"container b-w-0\" (drop)=\"onPdfDropped($event)\">\n    <div fxLayoutGap=\"15px\" fxLayoutAlign=\"start center\">\n      <div fxLayoutAlign=\"center center\">\n        <button mat-icon-button (click)=\"sidenav.toggle()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <mat-divider vertical></mat-divider>\n      </div>\n      <div\n        #controlsContainer\n        [formGroup]=\"viewerForm\"\n        style=\"overflow: hidden\"\n        fxFlex=\"1 0 0%\"\n        fxLayout=\"row nowrap\"\n        fxLayoutGap=\"15px\"\n        fxLayoutAlign=\"start center\"\n      >\n        <div #pageControls fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <button mat-icon-button (click)=\"previousPage()\"><mat-icon>navigate_before</mat-icon></button>\n          <span fxFlex=\"1 0 auto\"> {{ pageControl.value }} of {{ pdf?.numPages }}</span>\n          <button mat-icon-button (click)=\"nextPage()\"><mat-icon>navigate_next</mat-icon></button>\n        </div>\n        <mat-divider vertical></mat-divider>\n        <div #scaleControls fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <button mat-icon-button (click)=\"zoomOut()\"><mat-icon>zoom_out</mat-icon></button>\n          <span>{{ scaleControl.value * 100 }}%</span>\n          <button mat-icon-button (click)=\"zoomIn()\"><mat-icon>zoom_in</mat-icon></button>\n        </div>\n        <mat-divider vertical></mat-divider>\n        <div #rotationControls fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <button mat-icon-button (click)=\"rotateLeft()\"><mat-icon>rotate_left</mat-icon></button>\n          <span>{{ rotationControl.value }}º</span>\n          <button mat-icon-button (click)=\"rotateRight()\"><mat-icon>rotate_right</mat-icon></button>\n        </div>\n        <mat-divider vertical></mat-divider>\n        <div #searchControls fxLayout fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <button mat-icon-button [matMenuTriggerFor]=\"searchOptions\"><mat-icon>search</mat-icon></button>\n          <ng-container *ngIf=\"matchesFound && matchesFound.total\">\n            <button mat-icon-button (click)=\"viewer.findPrevious()\"><mat-icon>navigate_before</mat-icon></button>\n            <span fxFlex=\"1 0 auto\"> {{ matchesFound.current }} of {{ matchesFound.total }}</span>\n            <button mat-icon-button (click)=\"viewer.findNext()\"><mat-icon>navigate_next</mat-icon></button>\n          </ng-container>\n        </div>\n        <mat-divider vertical></mat-divider>\n        <div #miscControls fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n          <button mat-icon-button mnjPdfUpload [for]=\"viewer\">\n            <mat-icon>cloud_upload</mat-icon>\n          </button>\n          <mat-divider vertical></mat-divider>\n          <button mat-icon-button mnjPdfDownload [for]=\"viewer\">\n            <mat-icon>cloud_download</mat-icon>\n          </button>\n          <mat-divider vertical></mat-divider>\n          <button mat-icon-button mnjPdfPrint [for]=\"viewer\">\n            <mat-icon>print</mat-icon>\n          </button>\n          <mat-divider vertical></mat-divider>\n          <button mat-icon-button mnjPdfProperties [for]=\"viewer\" (pdfProperties)=\"showProperties($event)\">\n            <mat-icon>info</mat-icon>\n          </button>\n        </div>\n      </div>\n      <button *ngIf=\"hiddenNodes.length > 0\" mat-icon-button [matMenuTriggerFor]=\"controlsMenu\">\n        <mat-icon>expand_more</mat-icon>\n      </button>\n    </div>\n    <div class=\"pdf-container overflow-y-hidden\">\n      <mnj-pdf-viewer\n        #viewer=\"mnjPdfViewer\"\n        [pdfSrc]=\"pdfSrc\"\n        [scale]=\"scaleControl.value\"\n        [rotation]=\"rotationControl.value\"\n        [searchOptions]=\"searchForm.value\"\n        (pdfLoaded)=\"onPdfLoaded($event)\"\n        (pdfProperties)=\"onPdfProperties($event)\"\n        (pageViewerPageChanging)=\"pageControl.setValue($event.actualPageIndex)\"\n        (pageViewerRotationChanging)=\"rotationControl.setValue($event.actualRotation)\"\n        (pageViewerScaleChanging)=\"updateScale($event)\"\n        (pdfSearchComplete)=\"onSearchComplete($event)\"\n        (pdfSearchProgress)=\"onSearchState($event)\"\n        (pdfPrintProgress)=\"onPrintProgress($event)\"\n      >\n      </mnj-pdf-viewer>\n      <mat-sidenav-container autosize (backdropClick)=\"sidenav.close()\">\n        <mat-sidenav #sidenav mode=\"side\">\n          <mat-tab-group>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon [matTooltip]=\"'thumbnails'\">collections</mat-icon>\n              </ng-template>\n              <div class=\"tab-body-viewer\">\n                <mnj-pdf-thumbnail-viewer [for]=\"viewer\"></mnj-pdf-thumbnail-viewer>\n              </div>\n            </mat-tab>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon [matTooltip]=\"'toc'\">list</mat-icon>\n              </ng-template>\n              <div class=\"tab-body-viewer\">\n                <mnj-pdf-toc-viewer [for]=\"viewer\"></mnj-pdf-toc-viewer>\n              </div>\n            </mat-tab>\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <mat-icon [matTooltip]=\"'attachments'\">attach_file</mat-icon>\n              </ng-template>\n              <div class=\"tab-body-viewer\">\n                <mnj-pdf-attachments-viewer [for]=\"viewer\"></mnj-pdf-attachments-viewer>\n              </div>\n            </mat-tab>\n          </mat-tab-group>\n        </mat-sidenav>\n        <mat-sidenav-content>\n          <mnj-pdf-page-viewer [for]=\"viewer\"></mnj-pdf-page-viewer>\n        </mat-sidenav-content>\n      </mat-sidenav-container>\n    </div>\n  </div>\n\n  <mat-menu #searchOptions=\"matMenu\">\n    <form\n      mat-menu-item\n      style=\"padding: 10px; height: 70px\"\n      [formGroup]=\"searchForm\"\n      fxLayoutAlign=\"start center\"\n      fxLayoutGap=\"10px\"\n      (click)=\"$event.stopPropagation()\"\n    >\n      <mat-form-field>\n        <input matInput mnjPdfSearchInput placeholder=\"Search\" [for]=\"viewer\" />\n      </mat-form-field>\n      <mat-checkbox [color]=\"color\" formControlName=\"highlightAll\">HighlightAll</mat-checkbox>\n      <mat-checkbox [color]=\"color\" formControlName=\"caseSensitive\">Match Case</mat-checkbox>\n      <mat-checkbox [color]=\"color\" formControlName=\"entireWord\">Whole Words</mat-checkbox>\n      <mat-checkbox [color]=\"color\" formControlName=\"phraseSearch\">Search Phrase</mat-checkbox>\n    </form>\n  </mat-menu>\n\n  <mat-menu #controlsMenu=\"matMenu\">\n    <div fxLayout=\"column\">\n      <ng-container *ngIf=\"pageControls.style.visibility === 'hidden'\">\n        <button mat-menu-item color=\"primary\" (click)=\"previousPage()\">\n          <mat-icon>navigate_before</mat-icon>\n          <span>Previous Page</span>\n        </button>\n        <button mat-menu-item color=\"primary\" (click)=\"nextPage()\">\n          <mat-icon>navigate_next</mat-icon>\n          <span>Next Page</span>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"scaleControls.style.visibility === 'hidden'\">\n        <button mat-menu-item color=\"primary\" (click)=\"zoomOut()\">\n          <mat-icon>zoom_out</mat-icon>\n          <span>Zoom out</span>\n        </button>\n        <button mat-menu-item color=\"primary\" (click)=\"zoomIn()\">\n          <mat-icon>zoom_in</mat-icon>\n          <span>Zoom in</span>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"rotationControls.style.visibility === 'hidden'\">\n        <button mat-menu-item color=\"primary\" (click)=\"rotateLeft()\">\n          <mat-icon>rotate_left</mat-icon>\n          <span>Rotate Left</span>\n        </button>\n        <button mat-menu-item color=\"primary\" (click)=\"rotateRight()\">\n          <mat-icon>rotate_right</mat-icon>\n          <span>Rotate Right</span>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"miscControls.style.visibility === 'hidden'\">\n        <button mat-menu-item color=\"primary\" mnjPdfDownload [for]=\"viewer\" [disabled]=\"!pdfSrc\">\n          <mat-icon>cloud_download</mat-icon>\n          <span>Download</span>\n        </button>\n        <button mat-menu-item color=\"primary\" mnjPdfUpload [for]=\"viewer\" (fileLoaded)=\"onPdfUploaded($event)\">\n          <mat-icon>cloud_upload</mat-icon>\n          <span>Upload</span>\n        </button>\n        <button mat-menu-item color=\"primary\" mnjPdfPrint [for]=\"viewer\" [disabled]=\"!pdfSrc\">\n          <mat-icon>print</mat-icon>\n          <span>Print</span>\n        </button>\n        <button\n          mat-menu-item\n          color=\"primary\"\n          mnjPdfProperties\n          [for]=\"viewer\"\n          (pdfProperties)=\"showProperties($event)\"\n          [disabled]=\"!pdfSrc\"\n        >\n          <mat-icon>info</mat-icon>\n          <span>Pdf Properties</span>\n        </button>\n      </ng-container>\n    </div>\n  </mat-menu>\n\n  <ng-template #pdfPropertiesDialog>\n    <h4 matDialogTitle>PDF Properties</h4>\n    <mat-dialog-content>\n      <mat-list>\n        <mat-list-item *ngIf=\"pdfProps.fileName\">\n          <div mat-line>File name</div>\n          <div mat-line>{{ pdfProps.fileName }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.fileSize\">\n          <div mat-line>File size</div>\n          <div mat-line>{{ pdfProps.fileSize }} bytes</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.title\">\n          <div mat-line>Title</div>\n          <div mat-line>{{ pdfProps.title }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.author\">\n          <div mat-line>Author</div>\n          <div mat-line>{{ pdfProps.author }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.subject\">\n          <div mat-line>Subject</div>\n          <div mat-line>{{ pdfProps.subject }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.keywords\">\n          <div mat-line>Keywords</div>\n          <div mat-line>{{ pdfProps.keywords }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.creationDate\">\n          <div mat-line>Created on</div>\n          <div mat-line>{{ pdfProps.creationDate | date: 'short' }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.updateDate\">\n          <div mat-line>Modified on</div>\n          <div mat-line>{{ pdfProps.updateDate | date: 'short' }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.creator\">\n          <div mat-line>Created by</div>\n          <div mat-line>{{ pdfProps.creator }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.pdfProducer\">\n          <div mat-line>Pdf producer</div>\n          <div mat-line>{{ pdfProps.pdfProducer }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.pdfVersion\">\n          <div mat-line>Pdf version</div>\n          <div mat-line>{{ pdfProps.pdfVersion }}</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.pageCount\">\n          <div mat-line>Page count</div>\n          <div mat-line>{{ pdfProps.pageCount }} pages</div>\n        </mat-list-item>\n        <mat-list-item *ngIf=\"pdfProps.pageSize\">\n          <div mat-line>Page size</div>\n          <div mat-line>{{ pdfProps.pageSize.width }}px - {{ pdfProps.pageSize.height }}px</div>\n        </mat-list-item>\n      </mat-list>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-stroked-button color=\"primary\" [color]=\"color\" matDialogClose autoFocus>\n        <span>Close</span>\n      </button>\n    </mat-dialog-actions>\n  </ng-template>\n</mat-card>\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MnjPdfViewerModule } from '../../../mnj-ngx-pdfviewer/src/lib';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    FlexLayoutModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatListModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatCardModule,\n    MnjPdfViewerModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}